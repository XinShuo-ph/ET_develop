EinsteinToolkit Code Generation and Evaluation
============================================================
Max examples: 1085
Output directory: scratch
API available: Yes

Loading HuggingFace dataset...
  - Downloading dataset files...
  - Enhanced dataset loaded successfully. Total examples: 3068
  - Dataset includes documentation files for richer context
Valid thorns loaded: 66
Filtering examples by valid thorns...
Total valid examples after filtering: 1085
Processing 1085 examples (limited by --max-examples 1085)

Setting up Docker environment...
  - Initializing Docker manager...
Starting Docker container: ET_code_eval_container
  - Removing any existing container...
  - Starting new container...
  - Container ET_code_eval_container started successfully
  - Waiting for container to be ready...
  - Setting up initial files in container...
    - Copying Cactus/configs/sim/ThornList to container...
    - Copying run_all_tests.sh to container...
    - Copying test_names.txt to container...
    - Copying ADMConstraints to container...
    - Setting up permissions and directories...
  - Initial setup complete!
  - Docker container ready!
Loaded test mapping for 66 thorns

================================================================================
Processing example 1/1085: CactusExamples/Poisson - uniform_charge.c
================================================================================
Creating prompt for code generation...
  - Prompt created (9044 characters)
  - Documentation context included (6086 characters)
    - README: README
    - .tex files: documentation.tex
Generating code using API...
  - Sending request to API...
Traceback (most recent call last):
  File "/Users/bytedance/ET_develop/einstein_toolkit_code_eval.py", line 741, in <module>
    sys.exit(main())
             ~~~~^^
  File "/Users/bytedance/ET_develop/einstein_toolkit_code_eval.py", line 600, in main
    generated_code = generate_code_with_api(prompt, api_key)
  File "/Users/bytedance/ET_develop/einstein_toolkit_code_eval.py", line 386, in generate_code_with_api
    completion = client.chat.completions.create(
        model=model_name,
    ...<12 lines>...
        extra_headers={"X-TT-LOGID": ""},
    )
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/openai/_utils/_utils.py", line 286, in wrapper
    return func(*args, **kwargs)
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/openai/resources/chat/completions/completions.py", line 1147, in create
    return self._post(
           ~~~~~~~~~~^
        "/chat/completions",
        ^^^^^^^^^^^^^^^^^^^^
    ...<46 lines>...
        stream_cls=Stream[ChatCompletionChunk],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/openai/_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/openai/_base_client.py", line 982, in request
    response = self._client.send(
        request,
        stream=stream or self._should_stream_response_body(request=request),
        **kwargs,
    )
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpx/_client.py", line 914, in send
    response = self._send_handling_auth(
        request,
    ...<2 lines>...
        history=[],
    )
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpx/_client.py", line 942, in _send_handling_auth
    response = self._send_handling_redirects(
        request,
        follow_redirects=follow_redirects,
        history=history,
    )
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpx/_client.py", line 979, in _send_handling_redirects
    response = self._send_single_request(request)
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpx/_client.py", line 1014, in _send_single_request
    response = transport.handle_request(request)
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpx/_transports/default.py", line 250, in handle_request
    resp = self._pool.handle_request(req)
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpcore/_sync/connection_pool.py", line 256, in handle_request
    raise exc from None
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpcore/_sync/connection_pool.py", line 236, in handle_request
    response = connection.handle_request(
        pool_request.request
    )
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpcore/_sync/connection.py", line 103, in handle_request
    return self._connection.handle_request(request)
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpcore/_sync/http11.py", line 136, in handle_request
    raise exc
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpcore/_sync/http11.py", line 106, in handle_request
    ) = self._receive_response_headers(**kwargs)
        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpcore/_sync/http11.py", line 177, in _receive_response_headers
    event = self._receive_event(timeout=timeout)
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpcore/_sync/http11.py", line 217, in _receive_event
    data = self._network_stream.read(
        self.READ_NUM_BYTES, timeout=timeout
    )
  File "/Users/bytedance/Library/Python/3.13/lib/python/site-packages/httpcore/_backends/sync.py", line 128, in read
    return self._sock.recv(max_bytes)
           ~~~~~~~~~~~~~~~^^^^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/ssl.py", line 1285, in recv
    return self.read(buflen)
           ~~~~~~~~~^^^^^^^^
  File "/opt/homebrew/Cellar/python@3.13/3.13.7/Frameworks/Python.framework/Versions/3.13/lib/python3.13/ssl.py", line 1140, in read
    return self._sslobj.read(len)
           ~~~~~~~~~~~~~~~~~^^^^^
KeyboardInterrupt
Stopping container: ET_code_eval_container
