[
  {
    "worker_id": 0,
    "example_index": 0,
    "thorn_name": "CactusExamples/Poisson",
    "src_filename": "uniform_charge.c",
    "generated_code": "#include <assert.h>\n#include <math.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include \"cctk.h\"\n#include \"cctk_Arguments.h\"\n#include \"cctk_Parameters.h\"\n\n#include \"util_Table.h\"\n\nvoid Poisson_prepare(CCTK_ARGUMENTS)\n{\n  DECLARE_CCTK_ARGUMENTS;\n  DECLARE_CCTK_PARAMETERS;\n  \n  int i, j, k;\n  int index;\n  \n  for (k = 0; k < cctk_lsh[2]; k++) {\n    for (j = 0; j < cctk_lsh[1]; j++) {\n      for (i = 0; i < cctk_lsh[0]; i++) {\n        index = CCTK_GFINDEX3D(cctkGH, i, j, k);\n        \n        phi[index] = 0.0;\n        res[index] = 0.0;\n      }\n    }\n  }\n}\n\nvoid Poisson_solve(CCTK_ARGUMENTS)\n{\n  DECLARE_CCTK_ARGUMENTS;\n  DECLARE_CCTK_PARAMETERS;\n  \n  int i, j, k;\n  int index;\n  CCTK_REAL x, y, z, r;\n  CCTK_REAL rho;\n  CCTK_REAL volume;\n  int ierr;\n  int table_handle;\n  \n  volume = 4.0 * M_PI * radius * radius * radius / 3.0;\n  \n  for (k = 0; k < cctk_lsh[2]; k++) {\n    for (j = 0; j < cctk_lsh[1]; j++) {\n      for (i = 0; i < cctk_lsh[0]; i++) {\n        index = CCTK_GFINDEX3D(cctkGH, i, j, k);\n        \n        x = x[index];\n        y = y[index];\n        z = z[index];\n        r = sqrt(x*x + y*y + z*z);\n        \n        if (r <= radius) {\n          rho = charge / volume;\n        } else {\n          rho = 0.0;\n        }\n        \n        res[index] = rho;\n      }\n    }\n  }\n  \n  table_handle = Util_TableCreateFromString(options);\n  if (table_handle < 0) {\n    CCTK_WARN(0, \"Could not create table from solver options\");\n  }\n  \n  ierr = TATelliptic_Solve(cctkGH, 3, 1,\n                          CCTK_VarIndex(\"Poisson::phi\"),\n                          CCTK_VarIndex(\"Poisson::res\"),\n                          solver, table_handle);\n  \n  if (ierr) {\n    CCTK_WARN(0, \"TATelliptic_Solve failed\");\n  }\n  \n  Util_TableDestroy(table_handle);\n}\n\nvoid Poisson_boundaries_select(CCTK_ARGUMENTS)\n{\n  DECLARE_CCTK_ARGUMENTS;\n  \n  int ierr;\n  int table_handle;\n  \n  table_handle = Util_TableCreateFromString(\"value=0.0\");\n  if (table_handle < 0) {\n    CCTK_WARN(0, \"Could not create table for boundary conditions\");\n  }\n  \n  ierr = Boundary_SelectGroupForBC(cctkGH, CCTK_ALL_FACES, 1, table_handle,\n                                  \"Poisson::potential\", \"scalar\");\n  \n  if (ierr) {\n    CCTK_WARN(0, \"Could not select boundary conditions for potential\");\n  }\n  \n  Util_TableDestroy(table_handle);\n}",
    "build_result": {
      "success": true,
      "return_code": 0,
      "stdout": "Cactus - version: 4.2.3\nSetup configuration Poisson (yes)?\nSetup of configuration Poisson cancelled\n",
      "stderr": "",
      "clean_output": "Please specify a configuration to clean.\n",
      "clean_error": ""
    },
    "test_result": {
      "total_tests": 1,
      "passed_tests": 0,
      "failed_tests": 1,
      "test_results": [
        {
          "test_name": "charge_tatelliptic_petsc",
          "test_path": "CactusExamples/Poisson/test/charge_tatelliptic_petsc",
          "passed": false,
          "return_code": 127,
          "output_length": 0,
          "error_length": 46
        }
      ]
    },
    "score_result": {
      "overall_score": 50.0,
      "build_score": 40,
      "test_run_score": 10,
      "test_accuracy_score": 0.0,
      "breakdown": {
        "build_success": true,
        "total_tests": 1,
        "passed_tests": 0,
        "failed_tests": 1,
        "test_success_rate": 0.0,
        "tests_attempted": true
      },
      "grade": "D"
    },
    "timestamp": "2025-09-26T13:18:10.680904",
    "success": true
  },
  {
    "worker_id": 1,
    "example_index": 1,
    "thorn_name": "CactusExamples/Poisson",
    "src_filename": "make.code.defn",
    "generated_code": "# Main make.code.defn file for thorn Poisson\n# Source files in this directory\nSRCS = uniform_charge.c\n\n# Subdirectories containing source files  \nSUBDIRS =",
    "build_result": {
      "success": true,
      "return_code": 0,
      "stdout": "Cactus - version: 4.2.3\nSetup configuration Poisson (yes)?\nSetup of configuration Poisson cancelled\n",
      "stderr": "",
      "clean_output": "Please specify a configuration to clean.\n",
      "clean_error": ""
    },
    "test_result": {
      "total_tests": 1,
      "passed_tests": 0,
      "failed_tests": 1,
      "test_results": [
        {
          "test_name": "charge_tatelliptic_petsc",
          "test_path": "CactusExamples/Poisson/test/charge_tatelliptic_petsc",
          "passed": false,
          "return_code": 127,
          "output_length": 0,
          "error_length": 46
        }
      ]
    },
    "score_result": {
      "overall_score": 50.0,
      "build_score": 40,
      "test_run_score": 10,
      "test_accuracy_score": 0.0,
      "breakdown": {
        "build_success": true,
        "total_tests": 1,
        "passed_tests": 0,
        "failed_tests": 1,
        "test_success_rate": 0.0,
        "tests_attempted": true
      },
      "grade": "D"
    },
    "timestamp": "2025-09-26T13:18:00.596853",
    "success": true
  }
]