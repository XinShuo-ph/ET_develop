[
  {
    "worker_id": 0,
    "example_index": 0,
    "thorn_name": "CactusExamples/Poisson",
    "src_filename": "uniform_charge.c",
    "generated_code": "#include <assert.h>\n#include <math.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include \"cctk.h\"\n#include \"cctk_Arguments.h\"\n#include \"cctk_Parameters.h\"\n\n#include \"util_Table.h\"\n\nvoid Poisson_prepare(CCTK_ARGUMENTS)\n{\n  DECLARE_CCTK_ARGUMENTS;\n  DECLARE_CCTK_PARAMETERS;\n  \n  int i, j, k;\n  int index;\n  \n  for (k = 0; k < cctk_lsh[2]; k++) {\n    for (j = 0; j < cctk_lsh[1]; j++) {\n      for (i = 0; i < cctk_lsh[0]; i++) {\n        index = CCTK_GFINDEX3D(cctkGH, i, j, k);\n        \n        phi[index] = 0.0;\n        res[index] = 0.0;\n      }\n    }\n  }\n}\n\nvoid Poisson_solve(CCTK_ARGUMENTS)\n{\n  DECLARE_CCTK_ARGUMENTS;\n  DECLARE_CCTK_PARAMETERS;\n  \n  int i, j, k;\n  int index;\n  CCTK_REAL x, y, z, r;\n  CCTK_REAL rho;\n  CCTK_REAL volume;\n  int ierr;\n  int options_table;\n  \n  volume = 4.0 * M_PI * radius * radius * radius / 3.0;\n  \n  for (k = 0; k < cctk_lsh[2]; k++) {\n    for (j = 0; j < cctk_lsh[1]; j++) {\n      for (i = 0; i < cctk_lsh[0]; i++) {\n        index = CCTK_GFINDEX3D(cctkGH, i, j, k);\n        \n        x = CCTK_ORIGIN_SPACE(0) + (cctk_lbnd[0] + i) * CCTK_DELTA_SPACE(0);\n        y = CCTK_ORIGIN_SPACE(1) + (cctk_lbnd[1] + j) * CCTK_DELTA_SPACE(1);\n        z = CCTK_ORIGIN_SPACE(2) + (cctk_lbnd[2] + k) * CCTK_DELTA_SPACE(2);\n        \n        r = sqrt(x*x + y*y + z*z);\n        \n        if (r <= radius) {\n          rho = charge / volume;\n        } else {\n          rho = 0.0;\n        }\n        \n        res[index] = rho;\n      }\n    }\n  }\n  \n  options_table = Util_TableCreateFromString(options);\n  if (options_table < 0) {\n    CCTK_WARN(0, \"Could not create options table\");\n  }\n  \n  ierr = TATelliptic_Solve(cctkGH, 3, options_table, 1.0, 1.0, 0.0,\n                          \"Poisson::phi\", \"Poisson::res\", solver);\n  \n  if (ierr != 0) {\n    CCTK_VWarn(1, __LINE__, __FILE__, CCTK_THORNSTRING,\n               \"TATelliptic_Solve returned error code %d\", ierr);\n  }\n  \n  Util_TableDestroy(options_table);\n}\n\nvoid Poisson_boundaries_select(CCTK_ARGUMENTS)\n{\n  DECLARE_CCTK_ARGUMENTS;\n  DECLARE_CCTK_PARAMETERS;\n  \n  int ierr;\n  int faces;\n  int boundary_width;\n  int table_handle;\n  \n  faces = CCTK_ALL_FACES;\n  boundary_width = 1;\n  \n  table_handle = Util_TableCreateFromString(\"DIRICHLET\");\n  if (table_handle < 0) {\n    CCTK_WARN(0, \"Could not create boundary condition table\");\n  }\n  \n  ierr = Util_TableSetReal(table_handle, 0.0, \"DIRICHLET_VALUE\");\n  if (ierr < 0) {\n    CCTK_WARN(0, \"Could not set Dirichlet boundary value\");\n  }\n  \n  ierr = Boundary_SelectGroupForBC(cctkGH, faces, boundary_width, \n                                   table_handle, \"Poisson::potential\", \n                                   \"Dirichlet\");\n  if (ierr < 0) {\n    CCTK_WARN(0, \"Could not select boundary conditions\");\n  }\n  \n  Util_TableDestroy(table_handle);\n}",
    "build_result": {
      "success": false,
      "return_code": 1,
      "stdout": "... (line 224) ...\n 224: Checking status of thorn SphericalHarmonicReconGen\n 225: Checking status of thorn AHFinderDirect\n 226: Checking status of thorn Timers\n 227: COMPILING arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc\n 228: Checking status of thorn IOHDF5\n 229: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:18:11: error: 'int jtutil::round' redeclared as different kind of symbol\n 230:  int round(fp x)\n 231:            ^\n 232: In file included from /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:8:0:\n 233: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/util.hh:200:7: note: previous declaration 'template<class fp_t> class jtutil::round'\n 234:  class round\n 235:        ^\n 236: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:18:11: error: 'fp' was not declared in this scope\n 237:  int round(fp x)\n 238:            ^\n 239: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:32:12: error: 'int jtutil::ifloor' redeclared as different kind of symbol\n 240:  int ifloor(fp x)\n 241:             ^\n 242: In file included from /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:8:0:\n 243: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/util.hh:77:14: note: previous declaration 'int jtutil::ifloor(double)'\n 244:    inline int ifloor(double x) { return static_cast<int>(floor(x)); }\n 245:               ^\n 246: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:32:12: error: 'fp' was not declared in this scope\n 247:  int ifloor(fp x)\n 248:             ^\n 249: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:46:11: error: 'int jtutil::iceil' redeclared as different kind of symbol\n 250:  int iceil(fp x)\n 251:            ^\n 252: In file included from /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:8:0:\n 253: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/util.hh:78:14: note: previous declaration 'int jtutil::iceil(double)'\n 254:    inline int iceil (double x) { return static_cast<int>(ceil (x)); }\n 255:               ^\n 256: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:46:11: error: 'fp' was not declared in this scope\n 257:  int iceil(fp x)\n 258:            ^\n 259: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:59:12: error: 'fp' was not declared in this scope\n 260:  int itrunc(fp x)\n 261:             ^\n 262: /opt/Cactus/arrangements/EinsteinAnalysis/AHFinderDirect/src/jtutil/round.cc:60:1: error: expected ',' or ';' before '{' token\n 263:  {\n 264:  ^\n 265: /opt/Cactus/configs/sim/config-data/make.config.rules:273: recipe for target 'round.cc.o' failed\n 266: make[3]: *** [round.cc.o] Error 1\n 267: /opt/Cactus/lib/make/make.thornlib:112: recipe for target 'jtutil/make.checked' failed",
      "stderr": "Warning: default thorn list contents have changed\n"
    },
    "test_result": {
      "total_tests": 0,
      "passed_tests": 0,
      "failed_tests": 0,
      "test_results": []
    },
    "score_result": {
      "overall_score": 0.0,
      "build_score": 0.0,
      "test_run_score": 0.0,
      "test_accuracy_score": 0.0,
      "breakdown": {
        "build_success": false,
        "total_tests": 0,
        "passed_tests": 0,
        "failed_tests": 0,
        "test_success_rate": 0.0,
        "tests_attempted": false
      },
      "grade": "F"
    },
    "timestamp": "2025-09-26T13:56:55.282127",
    "success": true
  }
]