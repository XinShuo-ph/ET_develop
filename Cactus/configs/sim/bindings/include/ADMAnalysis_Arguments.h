/*@@
   @header  ADMAnalysis_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn ADMAnalysis
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_ADMANALYSIS_PRIVATE_FARGUMENTS \


#define ADMANALYSIS_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ADMANALYSIS_PRIVATE_CARGUMENTS \


#define DECLARE_ADMANALYSIS_PRIVATE_C2F \


#define INITIALISE_ADMANALYSIS_PRIVATE_C2F \


#define ADMANALYSIS_PRIVATE_C2F_PROTO \


#define PASS_ADMANALYSIS_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_ADMANALYSIS_PROTECTED_FARGUMENTS \


#define ADMANALYSIS_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ADMANALYSIS_PROTECTED_CARGUMENTS \


#define DECLARE_ADMANALYSIS_PROTECTED_C2F \


#define INITIALISE_ADMANALYSIS_PROTECTED_C2F \


#define ADMANALYSIS_PROTECTED_C2F_PROTO \


#define PASS_ADMANALYSIS_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_ADMANALYSIS_PUBLIC_FARGUMENTS \
CCTK_DECLARE(CCTK_REAL,Ricci,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci11,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci11_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci11_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci12,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci12_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci12_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci13,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci13_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci13_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci22,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci22_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci22_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci23,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci23_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci23_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci33,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci33_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Ricci33_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,coarse_dx,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dy,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dz,)&&\
CCTK_DECLARE(CCTK_INT,conformal_state,)&&\
CCTK_DECLARE(CCTK_REAL,detg,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,dtlapse_state,)&&\
CCTK_DECLARE(CCTK_INT,dtshift_state,)&&\
CCTK_DECLARE(CCTK_REAL,gpp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gqp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gqq,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,grp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,grq,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,grr,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kpp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kqp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kqq,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,krp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,krq,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,krr,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,local_spatial_order,)&&\
CCTK_DECLARE(CCTK_REAL,psi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psix,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psixx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psixy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psixz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psizz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,shift_state,)&&\
CCTK_DECLARE(CCTK_REAL,trK,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,x,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,y,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,z,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define ADMANALYSIS_PUBLIC_FARGUMENTS \
Ricci,Ricci_p,Ricci_p_p,Ricci11,Ricci11_p,Ricci11_p_p,Ricci12,Ricci12_p,Ricci12_p_p,Ricci13,Ricci13_p,Ricci13_p_p,Ricci22,Ricci22_p,Ricci22_p_p,Ricci23,Ricci23_p,Ricci23_p_p,Ricci33,Ricci33_p,Ricci33_p_p,alp,alp_p,alp_p_p,betax,betax_p,betax_p_p,betay,betay_p,betay_p_p,betaz,betaz_p,betaz_p_p,coarse_dx,coarse_dy,coarse_dz,conformal_state,detg,dtalp,dtalp_p,dtalp_p_p,dtbetax,dtbetax_p,dtbetax_p_p,dtbetay,dtbetay_p,dtbetay_p_p,dtbetaz,dtbetaz_p,dtbetaz_p_p,dtlapse_state,dtshift_state,gpp,gqp,gqq,grp,grq,grr,gxx,gxx_p,gxx_p_p,gxy,gxy_p,gxy_p_p,gxz,gxz_p,gxz_p_p,gyy,gyy_p,gyy_p_p,gyz,gyz_p,gyz_p_p,gzz,gzz_p,gzz_p_p,kpp,kqp,kqq,krp,krq,krr,kxx,kxx_p,kxx_p_p,kxy,kxy_p,kxy_p_p,kxz,kxz_p,kxz_p_p,kyy,kyy_p,kyy_p_p,kyz,kyz_p,kyz_p_p,kzz,kzz_p,kzz_p_p,local_spatial_order,psi,psix,psixx,psixy,psixz,psiy,psiyy,psiyz,psiz,psizz,r,shift_state,trK,x,y,z

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ADMANALYSIS_PUBLIC_CARGUMENTS \
static int cctki_vi_Ricci = -100; \
if (cctki_vi_Ricci == -100) cctki_vi_Ricci = CCTK_VarIndex("ADMAnalysis::Ricci"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ricci)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Ricci)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Ricci)); \
static int cctki_vi_Ricci11 = -100; \
if (cctki_vi_Ricci11 == -100) cctki_vi_Ricci11 = CCTK_VarIndex("ADMAnalysis::Ricci11"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci11, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ricci11)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci11_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Ricci11)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci11_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Ricci11)); \
static int cctki_vi_Ricci12 = -100; \
if (cctki_vi_Ricci12 == -100) cctki_vi_Ricci12 = CCTK_VarIndex("ADMAnalysis::Ricci12"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci12, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ricci12)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci12_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Ricci12)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci12_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Ricci12)); \
static int cctki_vi_Ricci13 = -100; \
if (cctki_vi_Ricci13 == -100) cctki_vi_Ricci13 = CCTK_VarIndex("ADMAnalysis::Ricci13"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci13, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ricci13)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci13_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Ricci13)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci13_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Ricci13)); \
static int cctki_vi_Ricci22 = -100; \
if (cctki_vi_Ricci22 == -100) cctki_vi_Ricci22 = CCTK_VarIndex("ADMAnalysis::Ricci22"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci22, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ricci22)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci22_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Ricci22)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci22_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Ricci22)); \
static int cctki_vi_Ricci23 = -100; \
if (cctki_vi_Ricci23 == -100) cctki_vi_Ricci23 = CCTK_VarIndex("ADMAnalysis::Ricci23"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci23, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ricci23)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci23_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Ricci23)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci23_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Ricci23)); \
static int cctki_vi_Ricci33 = -100; \
if (cctki_vi_Ricci33 == -100) cctki_vi_Ricci33 = CCTK_VarIndex("ADMAnalysis::Ricci33"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci33, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ricci33)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci33_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Ricci33)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Ricci33_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Ricci33)); \
static int cctki_vi_alp = -100; \
if (cctki_vi_alp == -100) cctki_vi_alp = CCTK_VarIndex("ADMBASE::alp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_alp)); \
static int cctki_vi_betax = -100; \
if (cctki_vi_betax == -100) cctki_vi_betax = CCTK_VarIndex("ADMBASE::betax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betax)); \
static int cctki_vi_betay = -100; \
if (cctki_vi_betay == -100) cctki_vi_betay = CCTK_VarIndex("ADMBASE::betay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betay)); \
static int cctki_vi_betaz = -100; \
if (cctki_vi_betaz == -100) cctki_vi_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betaz)); \
static int cctki_vi_coarse_dx = -100; \
if (cctki_vi_coarse_dx == -100) cctki_vi_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dx)); \
static int cctki_vi_coarse_dy = -100; \
if (cctki_vi_coarse_dy == -100) cctki_vi_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dy)); \
static int cctki_vi_coarse_dz = -100; \
if (cctki_vi_coarse_dz == -100) cctki_vi_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dz)); \
static int cctki_vi_conformal_state = -100; \
if (cctki_vi_conformal_state == -100) cctki_vi_conformal_state = CCTK_VarIndex("STATICCONFORMAL::conformal_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, conformal_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_conformal_state)); \
static int cctki_vi_detg = -100; \
if (cctki_vi_detg == -100) cctki_vi_detg = CCTK_VarIndex("ADMAnalysis::detg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, detg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_detg)); \
static int cctki_vi_dtalp = -100; \
if (cctki_vi_dtalp == -100) cctki_vi_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtalp)); \
static int cctki_vi_dtbetax = -100; \
if (cctki_vi_dtbetax == -100) cctki_vi_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetax)); \
static int cctki_vi_dtbetay = -100; \
if (cctki_vi_dtbetay == -100) cctki_vi_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetay)); \
static int cctki_vi_dtbetaz = -100; \
if (cctki_vi_dtbetaz == -100) cctki_vi_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetaz)); \
static int cctki_vi_dtlapse_state = -100; \
if (cctki_vi_dtlapse_state == -100) cctki_vi_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtlapse_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtlapse_state)); \
static int cctki_vi_dtshift_state = -100; \
if (cctki_vi_dtshift_state == -100) cctki_vi_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtshift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtshift_state)); \
static int cctki_vi_gpp = -100; \
if (cctki_vi_gpp == -100) cctki_vi_gpp = CCTK_VarIndex("ADMAnalysis::gpp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gpp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gpp)); \
static int cctki_vi_gqp = -100; \
if (cctki_vi_gqp == -100) cctki_vi_gqp = CCTK_VarIndex("ADMAnalysis::gqp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gqp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gqp)); \
static int cctki_vi_gqq = -100; \
if (cctki_vi_gqq == -100) cctki_vi_gqq = CCTK_VarIndex("ADMAnalysis::gqq"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gqq, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gqq)); \
static int cctki_vi_grp = -100; \
if (cctki_vi_grp == -100) cctki_vi_grp = CCTK_VarIndex("ADMAnalysis::grp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, grp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_grp)); \
static int cctki_vi_grq = -100; \
if (cctki_vi_grq == -100) cctki_vi_grq = CCTK_VarIndex("ADMAnalysis::grq"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, grq, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_grq)); \
static int cctki_vi_grr = -100; \
if (cctki_vi_grr == -100) cctki_vi_grr = CCTK_VarIndex("ADMAnalysis::grr"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, grr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_grr)); \
static int cctki_vi_gxx = -100; \
if (cctki_vi_gxx == -100) cctki_vi_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxx)); \
static int cctki_vi_gxy = -100; \
if (cctki_vi_gxy == -100) cctki_vi_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxy)); \
static int cctki_vi_gxz = -100; \
if (cctki_vi_gxz == -100) cctki_vi_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxz)); \
static int cctki_vi_gyy = -100; \
if (cctki_vi_gyy == -100) cctki_vi_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyy)); \
static int cctki_vi_gyz = -100; \
if (cctki_vi_gyz == -100) cctki_vi_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyz)); \
static int cctki_vi_gzz = -100; \
if (cctki_vi_gzz == -100) cctki_vi_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gzz)); \
static int cctki_vi_kpp = -100; \
if (cctki_vi_kpp == -100) cctki_vi_kpp = CCTK_VarIndex("ADMAnalysis::kpp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kpp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kpp)); \
static int cctki_vi_kqp = -100; \
if (cctki_vi_kqp == -100) cctki_vi_kqp = CCTK_VarIndex("ADMAnalysis::kqp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kqp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kqp)); \
static int cctki_vi_kqq = -100; \
if (cctki_vi_kqq == -100) cctki_vi_kqq = CCTK_VarIndex("ADMAnalysis::kqq"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kqq, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kqq)); \
static int cctki_vi_krp = -100; \
if (cctki_vi_krp == -100) cctki_vi_krp = CCTK_VarIndex("ADMAnalysis::krp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, krp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_krp)); \
static int cctki_vi_krq = -100; \
if (cctki_vi_krq == -100) cctki_vi_krq = CCTK_VarIndex("ADMAnalysis::krq"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, krq, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_krq)); \
static int cctki_vi_krr = -100; \
if (cctki_vi_krr == -100) cctki_vi_krr = CCTK_VarIndex("ADMAnalysis::krr"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, krr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_krr)); \
static int cctki_vi_kxx = -100; \
if (cctki_vi_kxx == -100) cctki_vi_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxx)); \
static int cctki_vi_kxy = -100; \
if (cctki_vi_kxy == -100) cctki_vi_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxy)); \
static int cctki_vi_kxz = -100; \
if (cctki_vi_kxz == -100) cctki_vi_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxz)); \
static int cctki_vi_kyy = -100; \
if (cctki_vi_kyy == -100) cctki_vi_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyy)); \
static int cctki_vi_kyz = -100; \
if (cctki_vi_kyz == -100) cctki_vi_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyz)); \
static int cctki_vi_kzz = -100; \
if (cctki_vi_kzz == -100) cctki_vi_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kzz)); \
static int cctki_vi_local_spatial_order = -100; \
if (cctki_vi_local_spatial_order == -100) cctki_vi_local_spatial_order = CCTK_VarIndex("ADMMACROS::local_spatial_order"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, local_spatial_order, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_local_spatial_order)); \
static int cctki_vi_psi = -100; \
if (cctki_vi_psi == -100) cctki_vi_psi = CCTK_VarIndex("STATICCONFORMAL::psi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psi)); \
static int cctki_vi_psix = -100; \
if (cctki_vi_psix == -100) cctki_vi_psix = CCTK_VarIndex("STATICCONFORMAL::psix"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psix, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psix)); \
static int cctki_vi_psixx = -100; \
if (cctki_vi_psixx == -100) cctki_vi_psixx = CCTK_VarIndex("STATICCONFORMAL::psixx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psixx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psixx)); \
static int cctki_vi_psixy = -100; \
if (cctki_vi_psixy == -100) cctki_vi_psixy = CCTK_VarIndex("STATICCONFORMAL::psixy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psixy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psixy)); \
static int cctki_vi_psixz = -100; \
if (cctki_vi_psixz == -100) cctki_vi_psixz = CCTK_VarIndex("STATICCONFORMAL::psixz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psixz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psixz)); \
static int cctki_vi_psiy = -100; \
if (cctki_vi_psiy == -100) cctki_vi_psiy = CCTK_VarIndex("STATICCONFORMAL::psiy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiy)); \
static int cctki_vi_psiyy = -100; \
if (cctki_vi_psiyy == -100) cctki_vi_psiyy = CCTK_VarIndex("STATICCONFORMAL::psiyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiyy)); \
static int cctki_vi_psiyz = -100; \
if (cctki_vi_psiyz == -100) cctki_vi_psiyz = CCTK_VarIndex("STATICCONFORMAL::psiyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiyz)); \
static int cctki_vi_psiz = -100; \
if (cctki_vi_psiz == -100) cctki_vi_psiz = CCTK_VarIndex("STATICCONFORMAL::psiz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiz)); \
static int cctki_vi_psizz = -100; \
if (cctki_vi_psizz == -100) cctki_vi_psizz = CCTK_VarIndex("STATICCONFORMAL::psizz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psizz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psizz)); \
static int cctki_vi_r = -100; \
if (cctki_vi_r == -100) cctki_vi_r = CCTK_VarIndex("GRID::r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_r)); \
static int cctki_vi_shift_state = -100; \
if (cctki_vi_shift_state == -100) cctki_vi_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, shift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_shift_state)); \
static int cctki_vi_trK = -100; \
if (cctki_vi_trK == -100) cctki_vi_trK = CCTK_VarIndex("ADMAnalysis::trK"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, trK, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_trK)); \
static int cctki_vi_x = -100; \
if (cctki_vi_x == -100) cctki_vi_x = CCTK_VarIndex("GRID::x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x)); \
static int cctki_vi_y = -100; \
if (cctki_vi_y == -100) cctki_vi_y = CCTK_VarIndex("GRID::y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_y)); \
static int cctki_vi_z = -100; \
if (cctki_vi_z == -100) cctki_vi_z = CCTK_VarIndex("GRID::z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_z));

#define DECLARE_ADMANALYSIS_PUBLIC_C2F \
static int CCTKARGNUM_Ricci = -1; \
static int CCTKGROUPNUM_ricci_scalar = -1; \
static int CCTKARGNUM_Ricci11 = -1; \
static int CCTKGROUPNUM_ricci_tensor = -1; \
static int CCTKARGNUM_Ricci12 = -1; \
static int CCTKARGNUM_Ricci13 = -1; \
static int CCTKARGNUM_Ricci22 = -1; \
static int CCTKARGNUM_Ricci23 = -1; \
static int CCTKARGNUM_Ricci33 = -1; \
static int CCTKARGNUM_alp = -1; \
static int CCTKGROUPNUM_lapse = -1; \
static int CCTKARGNUM_betax = -1; \
static int CCTKGROUPNUM_shift = -1; \
static int CCTKARGNUM_betay = -1; \
static int CCTKARGNUM_betaz = -1; \
static int CCTKARGNUM_coarse_dx = -1; \
static int CCTKGROUPNUM_gridspacings = -1; \
static int CCTKARGNUM_coarse_dy = -1; \
static int CCTKARGNUM_coarse_dz = -1; \
static int CCTKARGNUM_conformal_state = -1; \
static int CCTKGROUPNUM_conformal_state = -1; \
static int CCTKARGNUM_detg = -1; \
static int CCTKGROUPNUM_detofg = -1; \
static int CCTKARGNUM_dtalp = -1; \
static int CCTKGROUPNUM_dtlapse = -1; \
static int CCTKARGNUM_dtbetax = -1; \
static int CCTKGROUPNUM_dtshift = -1; \
static int CCTKARGNUM_dtbetay = -1; \
static int CCTKARGNUM_dtbetaz = -1; \
static int CCTKARGNUM_dtlapse_state = -1; \
static int CCTKGROUPNUM_dtlapse_state = -1; \
static int CCTKARGNUM_dtshift_state = -1; \
static int CCTKGROUPNUM_dtshift_state = -1; \
static int CCTKARGNUM_gpp = -1; \
static int CCTKGROUPNUM_spherical_metric = -1; \
static int CCTKARGNUM_gqp = -1; \
static int CCTKARGNUM_gqq = -1; \
static int CCTKARGNUM_grp = -1; \
static int CCTKARGNUM_grq = -1; \
static int CCTKARGNUM_grr = -1; \
static int CCTKARGNUM_gxx = -1; \
static int CCTKGROUPNUM_metric = -1; \
static int CCTKARGNUM_gxy = -1; \
static int CCTKARGNUM_gxz = -1; \
static int CCTKARGNUM_gyy = -1; \
static int CCTKARGNUM_gyz = -1; \
static int CCTKARGNUM_gzz = -1; \
static int CCTKARGNUM_kpp = -1; \
static int CCTKGROUPNUM_spherical_curv = -1; \
static int CCTKARGNUM_kqp = -1; \
static int CCTKARGNUM_kqq = -1; \
static int CCTKARGNUM_krp = -1; \
static int CCTKARGNUM_krq = -1; \
static int CCTKARGNUM_krr = -1; \
static int CCTKARGNUM_kxx = -1; \
static int CCTKGROUPNUM_curv = -1; \
static int CCTKARGNUM_kxy = -1; \
static int CCTKARGNUM_kxz = -1; \
static int CCTKARGNUM_kyy = -1; \
static int CCTKARGNUM_kyz = -1; \
static int CCTKARGNUM_kzz = -1; \
static int CCTKARGNUM_local_spatial_order = -1; \
static int CCTKGROUPNUM_local_spatial_order = -1; \
static int CCTKARGNUM_psi = -1; \
static int CCTKGROUPNUM_confac = -1; \
static int CCTKARGNUM_psix = -1; \
static int CCTKGROUPNUM_confac_1derivs = -1; \
static int CCTKARGNUM_psixx = -1; \
static int CCTKGROUPNUM_confac_2derivs = -1; \
static int CCTKARGNUM_psixy = -1; \
static int CCTKARGNUM_psixz = -1; \
static int CCTKARGNUM_psiy = -1; \
static int CCTKARGNUM_psiyy = -1; \
static int CCTKARGNUM_psiyz = -1; \
static int CCTKARGNUM_psiz = -1; \
static int CCTKARGNUM_psizz = -1; \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_coordinates = -1; \
static int CCTKARGNUM_shift_state = -1; \
static int CCTKGROUPNUM_shift_state = -1; \
static int CCTKARGNUM_trK = -1; \
static int CCTKGROUPNUM_trace_of_K = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_z = -1;

#define INITIALISE_ADMANALYSIS_PUBLIC_C2F \
if(CCTKARGNUM_Ricci == -1) CCTKARGNUM_Ricci = CCTK_VarIndex("ADMAnalysis::Ricci"); \
if(CCTKGROUPNUM_ricci_scalar == -1) CCTKGROUPNUM_ricci_scalar = CCTK_GroupIndex("ADMAnalysis::ricci_scalar"); \
if(CCTKARGNUM_Ricci11 == -1) CCTKARGNUM_Ricci11 = CCTK_VarIndex("ADMAnalysis::Ricci11"); \
if(CCTKGROUPNUM_ricci_tensor == -1) CCTKGROUPNUM_ricci_tensor = CCTK_GroupIndex("ADMAnalysis::ricci_tensor"); \
if(CCTKARGNUM_Ricci12 == -1) CCTKARGNUM_Ricci12 = CCTK_VarIndex("ADMAnalysis::Ricci12"); \
if(CCTKARGNUM_Ricci13 == -1) CCTKARGNUM_Ricci13 = CCTK_VarIndex("ADMAnalysis::Ricci13"); \
if(CCTKARGNUM_Ricci22 == -1) CCTKARGNUM_Ricci22 = CCTK_VarIndex("ADMAnalysis::Ricci22"); \
if(CCTKARGNUM_Ricci23 == -1) CCTKARGNUM_Ricci23 = CCTK_VarIndex("ADMAnalysis::Ricci23"); \
if(CCTKARGNUM_Ricci33 == -1) CCTKARGNUM_Ricci33 = CCTK_VarIndex("ADMAnalysis::Ricci33"); \
if(CCTKARGNUM_alp == -1) CCTKARGNUM_alp = CCTK_VarIndex("ADMBASE::alp"); \
if(CCTKGROUPNUM_lapse == -1) CCTKGROUPNUM_lapse = CCTK_GroupIndex("ADMBASE::lapse"); \
if(CCTKARGNUM_betax == -1) CCTKARGNUM_betax = CCTK_VarIndex("ADMBASE::betax"); \
if(CCTKGROUPNUM_shift == -1) CCTKGROUPNUM_shift = CCTK_GroupIndex("ADMBASE::shift"); \
if(CCTKARGNUM_betay == -1) CCTKARGNUM_betay = CCTK_VarIndex("ADMBASE::betay"); \
if(CCTKARGNUM_betaz == -1) CCTKARGNUM_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
if(CCTKARGNUM_coarse_dx == -1) CCTKARGNUM_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
if(CCTKGROUPNUM_gridspacings == -1) CCTKGROUPNUM_gridspacings = CCTK_GroupIndex("GRID::gridspacings"); \
if(CCTKARGNUM_coarse_dy == -1) CCTKARGNUM_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
if(CCTKARGNUM_coarse_dz == -1) CCTKARGNUM_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
if(CCTKARGNUM_conformal_state == -1) CCTKARGNUM_conformal_state = CCTK_VarIndex("STATICCONFORMAL::conformal_state"); \
if(CCTKGROUPNUM_conformal_state == -1) CCTKGROUPNUM_conformal_state = CCTK_GroupIndex("STATICCONFORMAL::conformal_state"); \
if(CCTKARGNUM_detg == -1) CCTKARGNUM_detg = CCTK_VarIndex("ADMAnalysis::detg"); \
if(CCTKGROUPNUM_detofg == -1) CCTKGROUPNUM_detofg = CCTK_GroupIndex("ADMAnalysis::detofg"); \
if(CCTKARGNUM_dtalp == -1) CCTKARGNUM_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
if(CCTKGROUPNUM_dtlapse == -1) CCTKGROUPNUM_dtlapse = CCTK_GroupIndex("ADMBASE::dtlapse"); \
if(CCTKARGNUM_dtbetax == -1) CCTKARGNUM_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
if(CCTKGROUPNUM_dtshift == -1) CCTKGROUPNUM_dtshift = CCTK_GroupIndex("ADMBASE::dtshift"); \
if(CCTKARGNUM_dtbetay == -1) CCTKARGNUM_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
if(CCTKARGNUM_dtbetaz == -1) CCTKARGNUM_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
if(CCTKARGNUM_dtlapse_state == -1) CCTKARGNUM_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
if(CCTKGROUPNUM_dtlapse_state == -1) CCTKGROUPNUM_dtlapse_state = CCTK_GroupIndex("ADMBASE::dtlapse_state"); \
if(CCTKARGNUM_dtshift_state == -1) CCTKARGNUM_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
if(CCTKGROUPNUM_dtshift_state == -1) CCTKGROUPNUM_dtshift_state = CCTK_GroupIndex("ADMBASE::dtshift_state"); \
if(CCTKARGNUM_gpp == -1) CCTKARGNUM_gpp = CCTK_VarIndex("ADMAnalysis::gpp"); \
if(CCTKGROUPNUM_spherical_metric == -1) CCTKGROUPNUM_spherical_metric = CCTK_GroupIndex("ADMAnalysis::spherical_metric"); \
if(CCTKARGNUM_gqp == -1) CCTKARGNUM_gqp = CCTK_VarIndex("ADMAnalysis::gqp"); \
if(CCTKARGNUM_gqq == -1) CCTKARGNUM_gqq = CCTK_VarIndex("ADMAnalysis::gqq"); \
if(CCTKARGNUM_grp == -1) CCTKARGNUM_grp = CCTK_VarIndex("ADMAnalysis::grp"); \
if(CCTKARGNUM_grq == -1) CCTKARGNUM_grq = CCTK_VarIndex("ADMAnalysis::grq"); \
if(CCTKARGNUM_grr == -1) CCTKARGNUM_grr = CCTK_VarIndex("ADMAnalysis::grr"); \
if(CCTKARGNUM_gxx == -1) CCTKARGNUM_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
if(CCTKGROUPNUM_metric == -1) CCTKGROUPNUM_metric = CCTK_GroupIndex("ADMBASE::metric"); \
if(CCTKARGNUM_gxy == -1) CCTKARGNUM_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
if(CCTKARGNUM_gxz == -1) CCTKARGNUM_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
if(CCTKARGNUM_gyy == -1) CCTKARGNUM_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
if(CCTKARGNUM_gyz == -1) CCTKARGNUM_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
if(CCTKARGNUM_gzz == -1) CCTKARGNUM_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
if(CCTKARGNUM_kpp == -1) CCTKARGNUM_kpp = CCTK_VarIndex("ADMAnalysis::kpp"); \
if(CCTKGROUPNUM_spherical_curv == -1) CCTKGROUPNUM_spherical_curv = CCTK_GroupIndex("ADMAnalysis::spherical_curv"); \
if(CCTKARGNUM_kqp == -1) CCTKARGNUM_kqp = CCTK_VarIndex("ADMAnalysis::kqp"); \
if(CCTKARGNUM_kqq == -1) CCTKARGNUM_kqq = CCTK_VarIndex("ADMAnalysis::kqq"); \
if(CCTKARGNUM_krp == -1) CCTKARGNUM_krp = CCTK_VarIndex("ADMAnalysis::krp"); \
if(CCTKARGNUM_krq == -1) CCTKARGNUM_krq = CCTK_VarIndex("ADMAnalysis::krq"); \
if(CCTKARGNUM_krr == -1) CCTKARGNUM_krr = CCTK_VarIndex("ADMAnalysis::krr"); \
if(CCTKARGNUM_kxx == -1) CCTKARGNUM_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
if(CCTKGROUPNUM_curv == -1) CCTKGROUPNUM_curv = CCTK_GroupIndex("ADMBASE::curv"); \
if(CCTKARGNUM_kxy == -1) CCTKARGNUM_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
if(CCTKARGNUM_kxz == -1) CCTKARGNUM_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
if(CCTKARGNUM_kyy == -1) CCTKARGNUM_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
if(CCTKARGNUM_kyz == -1) CCTKARGNUM_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
if(CCTKARGNUM_kzz == -1) CCTKARGNUM_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
if(CCTKARGNUM_local_spatial_order == -1) CCTKARGNUM_local_spatial_order = CCTK_VarIndex("ADMMACROS::local_spatial_order"); \
if(CCTKGROUPNUM_local_spatial_order == -1) CCTKGROUPNUM_local_spatial_order = CCTK_GroupIndex("ADMMACROS::local_spatial_order"); \
if(CCTKARGNUM_psi == -1) CCTKARGNUM_psi = CCTK_VarIndex("STATICCONFORMAL::psi"); \
if(CCTKGROUPNUM_confac == -1) CCTKGROUPNUM_confac = CCTK_GroupIndex("STATICCONFORMAL::confac"); \
if(CCTKARGNUM_psix == -1) CCTKARGNUM_psix = CCTK_VarIndex("STATICCONFORMAL::psix"); \
if(CCTKGROUPNUM_confac_1derivs == -1) CCTKGROUPNUM_confac_1derivs = CCTK_GroupIndex("STATICCONFORMAL::confac_1derivs"); \
if(CCTKARGNUM_psixx == -1) CCTKARGNUM_psixx = CCTK_VarIndex("STATICCONFORMAL::psixx"); \
if(CCTKGROUPNUM_confac_2derivs == -1) CCTKGROUPNUM_confac_2derivs = CCTK_GroupIndex("STATICCONFORMAL::confac_2derivs"); \
if(CCTKARGNUM_psixy == -1) CCTKARGNUM_psixy = CCTK_VarIndex("STATICCONFORMAL::psixy"); \
if(CCTKARGNUM_psixz == -1) CCTKARGNUM_psixz = CCTK_VarIndex("STATICCONFORMAL::psixz"); \
if(CCTKARGNUM_psiy == -1) CCTKARGNUM_psiy = CCTK_VarIndex("STATICCONFORMAL::psiy"); \
if(CCTKARGNUM_psiyy == -1) CCTKARGNUM_psiyy = CCTK_VarIndex("STATICCONFORMAL::psiyy"); \
if(CCTKARGNUM_psiyz == -1) CCTKARGNUM_psiyz = CCTK_VarIndex("STATICCONFORMAL::psiyz"); \
if(CCTKARGNUM_psiz == -1) CCTKARGNUM_psiz = CCTK_VarIndex("STATICCONFORMAL::psiz"); \
if(CCTKARGNUM_psizz == -1) CCTKARGNUM_psizz = CCTK_VarIndex("STATICCONFORMAL::psizz"); \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("GRID::r"); \
if(CCTKGROUPNUM_coordinates == -1) CCTKGROUPNUM_coordinates = CCTK_GroupIndex("GRID::coordinates"); \
if(CCTKARGNUM_shift_state == -1) CCTKARGNUM_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
if(CCTKGROUPNUM_shift_state == -1) CCTKGROUPNUM_shift_state = CCTK_GroupIndex("ADMBASE::shift_state"); \
if(CCTKARGNUM_trK == -1) CCTKARGNUM_trK = CCTK_VarIndex("ADMAnalysis::trK"); \
if(CCTKGROUPNUM_trace_of_K == -1) CCTKGROUPNUM_trace_of_K = CCTK_GroupIndex("ADMAnalysis::trace_of_K"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("GRID::x"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("GRID::y"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("GRID::z");

#define ADMANALYSIS_PUBLIC_C2F_PROTO \


#define PASS_ADMANALYSIS_PUBLIC_C2F(GH) \
(CCTK_REAL *)(PASS_REFERENCE(Ricci, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci11, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci11, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci11, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci12, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci12, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci12, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci13, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci13, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci13, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci22, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci22, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci22, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci23, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci23, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci23, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci33, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci33, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Ricci33, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dz, 0)),\
(CCTK_INT *)(PASS_REFERENCE(conformal_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(detg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 2)),\
(CCTK_INT *)(PASS_REFERENCE(dtlapse_state, 0)),\
(CCTK_INT *)(PASS_REFERENCE(dtshift_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gpp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gqp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gqq, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(grp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(grq, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(grr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kpp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kqp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kqq, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(krp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(krq, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(krr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 2)),\
(CCTK_INT *)(PASS_REFERENCE(local_spatial_order, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psix, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psixx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psixy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psixz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psizz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_INT *)(PASS_REFERENCE(shift_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(trK, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0))

#endif /* CCODE */

#ifdef FCODE
#define ADMANALYSIS_FARGUMENTS _CCTK_FARGUMENTS, ADMANALYSIS_PUBLIC_FARGUMENTS

#define DECLARE_ADMANALYSIS_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_ADMANALYSIS_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_ADMANALYSIS_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_ADMANALYSIS_PUBLIC_CARGUMENTS

#define ADMANALYSIS_C2F_PROTO _CCTK_C2F_PROTO, ADMANALYSIS_PUBLIC_C2F_PROTO

#define PASS_ADMANALYSIS_C2F(GH) _PASS_CCTK_C2F(GH), PASS_ADMANALYSIS_PUBLIC_C2F(GH)

#define DECLARE_ADMANALYSIS_C2F _DECLARE_CCTK_C2F DECLARE_ADMANALYSIS_PUBLIC_C2F

#define INITIALISE_ADMANALYSIS_C2F _INITIALISE_CCTK_C2F INITIALISE_ADMANALYSIS_PUBLIC_C2F

#define ADMANALYSIS_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
