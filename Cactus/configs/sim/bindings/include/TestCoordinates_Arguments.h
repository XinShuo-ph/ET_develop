/*@@
   @header  TestCoordinates_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn TestCoordinates
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_TESTCOORDINATES_PRIVATE_FARGUMENTS \
CCTK_DECLARE(CCTK_REAL,r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,x,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,y,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,z,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define TESTCOORDINATES_PRIVATE_FARGUMENTS \
r,x,y,z

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTCOORDINATES_PRIVATE_CARGUMENTS \
static int cctki_vi_r = -100; \
if (cctki_vi_r == -100) cctki_vi_r = CCTK_VarIndex("TestCoordinates::r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_r)); \
static int cctki_vi_x = -100; \
if (cctki_vi_x == -100) cctki_vi_x = CCTK_VarIndex("TestCoordinates::x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x)); \
static int cctki_vi_y = -100; \
if (cctki_vi_y == -100) cctki_vi_y = CCTK_VarIndex("TestCoordinates::y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_y)); \
static int cctki_vi_z = -100; \
if (cctki_vi_z == -100) cctki_vi_z = CCTK_VarIndex("TestCoordinates::z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_z));

#define DECLARE_TESTCOORDINATES_PRIVATE_C2F \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_spherical = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKGROUPNUM_cartesian = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_z = -1;

#define INITIALISE_TESTCOORDINATES_PRIVATE_C2F \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("TestCoordinates::r"); \
if(CCTKGROUPNUM_spherical == -1) CCTKGROUPNUM_spherical = CCTK_GroupIndex("TestCoordinates::spherical"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("TestCoordinates::x"); \
if(CCTKGROUPNUM_cartesian == -1) CCTKGROUPNUM_cartesian = CCTK_GroupIndex("TestCoordinates::cartesian"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("TestCoordinates::y"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("TestCoordinates::z");

#define TESTCOORDINATES_PRIVATE_C2F_PROTO \
CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_TESTCOORDINATES_PRIVATE_C2F(GH) \
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_TESTCOORDINATES_PROTECTED_FARGUMENTS \


#define TESTCOORDINATES_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTCOORDINATES_PROTECTED_CARGUMENTS \


#define DECLARE_TESTCOORDINATES_PROTECTED_C2F \


#define INITIALISE_TESTCOORDINATES_PROTECTED_C2F \


#define TESTCOORDINATES_PROTECTED_C2F_PROTO \


#define PASS_TESTCOORDINATES_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_TESTCOORDINATES_PUBLIC_FARGUMENTS \


#define TESTCOORDINATES_PUBLIC_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTCOORDINATES_PUBLIC_CARGUMENTS \


#define DECLARE_TESTCOORDINATES_PUBLIC_C2F \


#define INITIALISE_TESTCOORDINATES_PUBLIC_C2F \


#define TESTCOORDINATES_PUBLIC_C2F_PROTO \


#define PASS_TESTCOORDINATES_PUBLIC_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define TESTCOORDINATES_FARGUMENTS _CCTK_FARGUMENTS, TESTCOORDINATES_PRIVATE_FARGUMENTS

#define DECLARE_TESTCOORDINATES_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_TESTCOORDINATES_PRIVATE_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTCOORDINATES_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_TESTCOORDINATES_PRIVATE_CARGUMENTS

#define TESTCOORDINATES_C2F_PROTO _CCTK_C2F_PROTO, TESTCOORDINATES_PRIVATE_C2F_PROTO

#define PASS_TESTCOORDINATES_C2F(GH) _PASS_CCTK_C2F(GH), PASS_TESTCOORDINATES_PRIVATE_C2F(GH)

#define DECLARE_TESTCOORDINATES_C2F _DECLARE_CCTK_C2F DECLARE_TESTCOORDINATES_PRIVATE_C2F

#define INITIALISE_TESTCOORDINATES_C2F _INITIALISE_CCTK_C2F INITIALISE_TESTCOORDINATES_PRIVATE_C2F

#define TESTCOORDINATES_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
