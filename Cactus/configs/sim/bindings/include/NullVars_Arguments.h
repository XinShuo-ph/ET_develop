/*@@
   @header  NullVars_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn NullVars
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_NULLVARS_PRIVATE_FARGUMENTS \


#define NULLVARS_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLVARS_PRIVATE_CARGUMENTS \


#define DECLARE_NULLVARS_PRIVATE_C2F \


#define INITIALISE_NULLVARS_PRIVATE_C2F \


#define NULLVARS_PRIVATE_C2F_PROTO \


#define PASS_NULLVARS_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLVARS_PROTECTED_FARGUMENTS \


#define NULLVARS_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLVARS_PROTECTED_CARGUMENTS \


#define DECLARE_NULLVARS_PROTECTED_C2F \


#define INITIALISE_NULLVARS_PROTECTED_C2F \


#define NULLVARS_PROTECTED_C2F_PROTO \


#define PASS_NULLVARS_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLVARS_PUBLIC_FARGUMENTS \
INTEGER X0cmplxcharfuncs_aux&&\
INTEGER X0cmplxcharfuncs_basic&&\
INTEGER X0null_mask&&\
INTEGER X0realcharfuncs&&\
INTEGER X1cmplxcharfuncs_aux&&\
INTEGER X1cmplxcharfuncs_basic&&\
INTEGER X1null_mask&&\
INTEGER X1realcharfuncs&&\
INTEGER cmplxcharfuncs_aux_length&&\
INTEGER cmplxcharfuncs_basic_length&&\
INTEGER realcharfuncs_length&&\
CCTK_DECLARE(CCTK_REAL,bcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_INT,boundary_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,boundary_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_INT,evolution_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,evolution_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\


#define NULLVARS_PUBLIC_FARGUMENTS \
X0cmplxcharfuncs_aux,X0cmplxcharfuncs_basic,X0null_mask,X0realcharfuncs,X1cmplxcharfuncs_aux,X1cmplxcharfuncs_basic,X1null_mask,X1realcharfuncs,cmplxcharfuncs_aux_length,cmplxcharfuncs_basic_length,realcharfuncs_length,bcn,bcn_p,bcs,bcs_p,boundary_maskn,boundary_masks,cbcn,cbcn_p,cbcs,cbcs_p,ckcn,ckcn_p,ckcs,ckcs_p,dxjcn,dxjcn_p,dxjcs,dxjcs_p,eth2jcn,eth2jcn_p,eth2jcs,eth2jcs_p,evolution_maskn,evolution_masks,jcn,jcn_p,jcs,jcs_p,nucn,nucn_p,nucs,nucs_p,qcn,qcn_p,qcs,qcs_p,ucn,ucn_p,ucs,ucs_p,wcn,wcn_p,wcs,wcs_p

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLVARS_PUBLIC_CARGUMENTS \
static int cctki_vi_bcn = -100; \
if (cctki_vi_bcn == -100) cctki_vi_bcn = CCTK_VarIndex("NullVars::bcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcn)); \
static int cctki_vi_bcs = -100; \
if (cctki_vi_bcs == -100) cctki_vi_bcs = CCTK_VarIndex("NullVars::bcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcs)); \
static int cctki_vi_boundary_maskn = -100; \
if (cctki_vi_boundary_maskn == -100) cctki_vi_boundary_maskn = CCTK_VarIndex("NullVars::boundary_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_maskn)); \
static int cctki_vi_boundary_masks = -100; \
if (cctki_vi_boundary_masks == -100) cctki_vi_boundary_masks = CCTK_VarIndex("NullVars::boundary_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_masks)); \
static int cctki_vi_cbcn = -100; \
if (cctki_vi_cbcn == -100) cctki_vi_cbcn = CCTK_VarIndex("NullVars::cbcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcn)); \
static int cctki_vi_cbcs = -100; \
if (cctki_vi_cbcs == -100) cctki_vi_cbcs = CCTK_VarIndex("NullVars::cbcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcs)); \
static int cctki_vi_ckcn = -100; \
if (cctki_vi_ckcn == -100) cctki_vi_ckcn = CCTK_VarIndex("NullVars::ckcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcn)); \
static int cctki_vi_ckcs = -100; \
if (cctki_vi_ckcs == -100) cctki_vi_ckcs = CCTK_VarIndex("NullVars::ckcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcs)); \
static int cctki_vi_dxjcn = -100; \
if (cctki_vi_dxjcn == -100) cctki_vi_dxjcn = CCTK_VarIndex("NullVars::dxjcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcn)); \
static int cctki_vi_dxjcs = -100; \
if (cctki_vi_dxjcs == -100) cctki_vi_dxjcs = CCTK_VarIndex("NullVars::dxjcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcs)); \
static int cctki_vi_eth2jcn = -100; \
if (cctki_vi_eth2jcn == -100) cctki_vi_eth2jcn = CCTK_VarIndex("NullVars::eth2jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcn)); \
static int cctki_vi_eth2jcs = -100; \
if (cctki_vi_eth2jcs == -100) cctki_vi_eth2jcs = CCTK_VarIndex("NullVars::eth2jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcs)); \
static int cctki_vi_evolution_maskn = -100; \
if (cctki_vi_evolution_maskn == -100) cctki_vi_evolution_maskn = CCTK_VarIndex("NullVars::evolution_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_maskn)); \
static int cctki_vi_evolution_masks = -100; \
if (cctki_vi_evolution_masks == -100) cctki_vi_evolution_masks = CCTK_VarIndex("NullVars::evolution_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_masks)); \
static int cctki_vi_jcn = -100; \
if (cctki_vi_jcn == -100) cctki_vi_jcn = CCTK_VarIndex("NullVars::jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcn)); \
static int cctki_vi_jcs = -100; \
if (cctki_vi_jcs == -100) cctki_vi_jcs = CCTK_VarIndex("NullVars::jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcs)); \
static int cctki_vi_nucn = -100; \
if (cctki_vi_nucn == -100) cctki_vi_nucn = CCTK_VarIndex("NullVars::nucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucn)); \
static int cctki_vi_nucs = -100; \
if (cctki_vi_nucs == -100) cctki_vi_nucs = CCTK_VarIndex("NullVars::nucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucs)); \
static int cctki_vi_qcn = -100; \
if (cctki_vi_qcn == -100) cctki_vi_qcn = CCTK_VarIndex("NullVars::qcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcn)); \
static int cctki_vi_qcs = -100; \
if (cctki_vi_qcs == -100) cctki_vi_qcs = CCTK_VarIndex("NullVars::qcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcs)); \
static int cctki_vi_ucn = -100; \
if (cctki_vi_ucn == -100) cctki_vi_ucn = CCTK_VarIndex("NullVars::ucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucn)); \
static int cctki_vi_ucs = -100; \
if (cctki_vi_ucs == -100) cctki_vi_ucs = CCTK_VarIndex("NullVars::ucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucs)); \
static int cctki_vi_wcn = -100; \
if (cctki_vi_wcn == -100) cctki_vi_wcn = CCTK_VarIndex("NullVars::wcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcn)); \
static int cctki_vi_wcs = -100; \
if (cctki_vi_wcs == -100) cctki_vi_wcs = CCTK_VarIndex("NullVars::wcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcs));

#define DECLARE_NULLVARS_PUBLIC_C2F \
static int CCTKARGNUM_bcn = -1; \
static int CCTKGROUPNUM_realcharfuncs = -1; \
static int CCTKARGNUM_bcs = -1; \
static int CCTKARGNUM_boundary_maskn = -1; \
static int CCTKGROUPNUM_null_mask = -1; \
static int CCTKARGNUM_boundary_masks = -1; \
static int CCTKARGNUM_cbcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_aux = -1; \
static int CCTKARGNUM_cbcs = -1; \
static int CCTKARGNUM_ckcn = -1; \
static int CCTKARGNUM_ckcs = -1; \
static int CCTKARGNUM_dxjcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_basic = -1; \
static int CCTKARGNUM_dxjcs = -1; \
static int CCTKARGNUM_eth2jcn = -1; \
static int CCTKARGNUM_eth2jcs = -1; \
static int CCTKARGNUM_evolution_maskn = -1; \
static int CCTKARGNUM_evolution_masks = -1; \
static int CCTKARGNUM_jcn = -1; \
static int CCTKARGNUM_jcs = -1; \
static int CCTKARGNUM_nucn = -1; \
static int CCTKARGNUM_nucs = -1; \
static int CCTKARGNUM_qcn = -1; \
static int CCTKARGNUM_qcs = -1; \
static int CCTKARGNUM_ucn = -1; \
static int CCTKARGNUM_ucs = -1; \
static int CCTKARGNUM_wcn = -1; \
static int CCTKARGNUM_wcs = -1;

#define INITIALISE_NULLVARS_PUBLIC_C2F \
if(CCTKARGNUM_bcn == -1) CCTKARGNUM_bcn = CCTK_VarIndex("NullVars::bcn[0]"); \
if(CCTKGROUPNUM_realcharfuncs == -1) CCTKGROUPNUM_realcharfuncs = CCTK_GroupIndex("NullVars::realcharfuncs"); \
if(CCTKARGNUM_bcs == -1) CCTKARGNUM_bcs = CCTK_VarIndex("NullVars::bcs[0]"); \
if(CCTKARGNUM_boundary_maskn == -1) CCTKARGNUM_boundary_maskn = CCTK_VarIndex("NullVars::boundary_maskn"); \
if(CCTKGROUPNUM_null_mask == -1) CCTKGROUPNUM_null_mask = CCTK_GroupIndex("NullVars::null_mask"); \
if(CCTKARGNUM_boundary_masks == -1) CCTKARGNUM_boundary_masks = CCTK_VarIndex("NullVars::boundary_masks"); \
if(CCTKARGNUM_cbcn == -1) CCTKARGNUM_cbcn = CCTK_VarIndex("NullVars::cbcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_aux == -1) CCTKGROUPNUM_cmplxcharfuncs_aux = CCTK_GroupIndex("NullVars::cmplxcharfuncs_aux"); \
if(CCTKARGNUM_cbcs == -1) CCTKARGNUM_cbcs = CCTK_VarIndex("NullVars::cbcs[0]"); \
if(CCTKARGNUM_ckcn == -1) CCTKARGNUM_ckcn = CCTK_VarIndex("NullVars::ckcn[0]"); \
if(CCTKARGNUM_ckcs == -1) CCTKARGNUM_ckcs = CCTK_VarIndex("NullVars::ckcs[0]"); \
if(CCTKARGNUM_dxjcn == -1) CCTKARGNUM_dxjcn = CCTK_VarIndex("NullVars::dxjcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_basic == -1) CCTKGROUPNUM_cmplxcharfuncs_basic = CCTK_GroupIndex("NullVars::cmplxcharfuncs_basic"); \
if(CCTKARGNUM_dxjcs == -1) CCTKARGNUM_dxjcs = CCTK_VarIndex("NullVars::dxjcs[0]"); \
if(CCTKARGNUM_eth2jcn == -1) CCTKARGNUM_eth2jcn = CCTK_VarIndex("NullVars::eth2jcn[0]"); \
if(CCTKARGNUM_eth2jcs == -1) CCTKARGNUM_eth2jcs = CCTK_VarIndex("NullVars::eth2jcs[0]"); \
if(CCTKARGNUM_evolution_maskn == -1) CCTKARGNUM_evolution_maskn = CCTK_VarIndex("NullVars::evolution_maskn"); \
if(CCTKARGNUM_evolution_masks == -1) CCTKARGNUM_evolution_masks = CCTK_VarIndex("NullVars::evolution_masks"); \
if(CCTKARGNUM_jcn == -1) CCTKARGNUM_jcn = CCTK_VarIndex("NullVars::jcn[0]"); \
if(CCTKARGNUM_jcs == -1) CCTKARGNUM_jcs = CCTK_VarIndex("NullVars::jcs[0]"); \
if(CCTKARGNUM_nucn == -1) CCTKARGNUM_nucn = CCTK_VarIndex("NullVars::nucn[0]"); \
if(CCTKARGNUM_nucs == -1) CCTKARGNUM_nucs = CCTK_VarIndex("NullVars::nucs[0]"); \
if(CCTKARGNUM_qcn == -1) CCTKARGNUM_qcn = CCTK_VarIndex("NullVars::qcn[0]"); \
if(CCTKARGNUM_qcs == -1) CCTKARGNUM_qcs = CCTK_VarIndex("NullVars::qcs[0]"); \
if(CCTKARGNUM_ucn == -1) CCTKARGNUM_ucn = CCTK_VarIndex("NullVars::ucn[0]"); \
if(CCTKARGNUM_ucs == -1) CCTKARGNUM_ucs = CCTK_VarIndex("NullVars::ucs[0]"); \
if(CCTKARGNUM_wcn == -1) CCTKARGNUM_wcn = CCTK_VarIndex("NullVars::wcn[0]"); \
if(CCTKARGNUM_wcs == -1) CCTKARGNUM_wcs = CCTK_VarIndex("NullVars::wcs[0]");

#define NULLVARS_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_NULLVARS_PUBLIC_C2F(GH) \
PASS_GROUPSIZE(cmplxcharfuncs_aux, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 0),\
PASS_GROUPSIZE(null_mask, 0),\
PASS_GROUPSIZE(realcharfuncs, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_aux, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 1),\
PASS_GROUPSIZE(null_mask, 1),\
PASS_GROUPSIZE(realcharfuncs, 1),\
PASS_GROUPLEN(NullVars, cmplxcharfuncs_aux),\
PASS_GROUPLEN(NullVars, cmplxcharfuncs_basic),\
PASS_GROUPLEN(NullVars, realcharfuncs),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_masks, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_masks, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 1))

#endif /* CCODE */

#ifdef FCODE
#define NULLVARS_FARGUMENTS _CCTK_FARGUMENTS, NULLVARS_PUBLIC_FARGUMENTS

#define DECLARE_NULLVARS_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_NULLVARS_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLVARS_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_NULLVARS_PUBLIC_CARGUMENTS

#define NULLVARS_C2F_PROTO _CCTK_C2F_PROTO, NULLVARS_PUBLIC_C2F_PROTO

#define PASS_NULLVARS_C2F(GH) _PASS_CCTK_C2F(GH), PASS_NULLVARS_PUBLIC_C2F(GH)

#define DECLARE_NULLVARS_C2F _DECLARE_CCTK_C2F DECLARE_NULLVARS_PUBLIC_C2F

#define INITIALISE_NULLVARS_C2F _INITIALISE_CCTK_C2F INITIALISE_NULLVARS_PUBLIC_C2F

#define NULLVARS_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
