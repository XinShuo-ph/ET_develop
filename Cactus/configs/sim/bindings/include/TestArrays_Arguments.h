/*@@
   @header  TestArrays_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn TestArrays
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_TESTARRAYS_PRIVATE_FARGUMENTS \
INTEGER X0bar_a_1d&&\
INTEGER X0bar_a_2d&&\
INTEGER X0bar_a_3d&&\
INTEGER X0bar_a_4d&&\
INTEGER X0bar_b_1d&&\
INTEGER X0bar_b_2d&&\
INTEGER X0bar_b_3d&&\
INTEGER X0bar_b_4d&&\
INTEGER X0bar_c_1d&&\
INTEGER X0bar_c_2d&&\
INTEGER X0bar_c_3d&&\
INTEGER X0bar_c_4d&&\
INTEGER X0bar_d_1d&&\
INTEGER X0bar_d_2d&&\
INTEGER X0bar_d_3d&&\
INTEGER X0bar_d_4d&&\
INTEGER X0bar_e_1d&&\
INTEGER X0bar_e_2d&&\
INTEGER X0bar_e_3d&&\
INTEGER X0bar_e_4d&&\
INTEGER X0bar_f_1d&&\
INTEGER X0bar_f_2d&&\
INTEGER X0bar_f_3d&&\
INTEGER X0bar_f_4d&&\
INTEGER X0bar_g_2d&&\
INTEGER X0bar_h_2d&&\
INTEGER X0bar_i_2d&&\
INTEGER X0bar_j_2d&&\
INTEGER X0bar_k_2d&&\
INTEGER X0bar_l_2d&&\
INTEGER X0foo1d&&\
INTEGER X0foo2d&&\
INTEGER X0foo3d&&\
INTEGER X0foo4d&&\
INTEGER X1bar_a_2d&&\
INTEGER X1bar_a_3d&&\
INTEGER X1bar_a_4d&&\
INTEGER X1bar_b_2d&&\
INTEGER X1bar_b_3d&&\
INTEGER X1bar_b_4d&&\
INTEGER X1bar_c_2d&&\
INTEGER X1bar_c_3d&&\
INTEGER X1bar_c_4d&&\
INTEGER X1bar_d_2d&&\
INTEGER X1bar_d_3d&&\
INTEGER X1bar_d_4d&&\
INTEGER X1bar_e_2d&&\
INTEGER X1bar_e_3d&&\
INTEGER X1bar_e_4d&&\
INTEGER X1bar_f_2d&&\
INTEGER X1bar_f_3d&&\
INTEGER X1bar_f_4d&&\
INTEGER X1bar_g_2d&&\
INTEGER X1bar_h_2d&&\
INTEGER X1bar_i_2d&&\
INTEGER X1bar_j_2d&&\
INTEGER X1bar_k_2d&&\
INTEGER X1bar_l_2d&&\
INTEGER X1foo2d&&\
INTEGER X1foo3d&&\
INTEGER X1foo4d&&\
INTEGER X2bar_a_3d&&\
INTEGER X2bar_a_4d&&\
INTEGER X2bar_b_3d&&\
INTEGER X2bar_b_4d&&\
INTEGER X2bar_c_3d&&\
INTEGER X2bar_c_4d&&\
INTEGER X2bar_d_3d&&\
INTEGER X2bar_d_4d&&\
INTEGER X2bar_e_3d&&\
INTEGER X2bar_e_4d&&\
INTEGER X2bar_f_3d&&\
INTEGER X2bar_f_4d&&\
INTEGER X2foo3d&&\
INTEGER X2foo4d&&\
INTEGER X3bar_a_4d&&\
INTEGER X3bar_b_4d&&\
INTEGER X3bar_c_4d&&\
INTEGER X3bar_d_4d&&\
INTEGER X3bar_e_4d&&\
INTEGER X3bar_f_4d&&\
INTEGER X3foo4d&&\
INTEGER bar_c_1d_length&&\
INTEGER bar_c_3d_length&&\
INTEGER bar_c_4d_length&&\
INTEGER bar_d_1d_length&&\
INTEGER bar_d_3d_length&&\
INTEGER bar_d_4d_length&&\
INTEGER bar_e_1d_length&&\
INTEGER bar_e_2d_length&&\
INTEGER bar_e_3d_length&&\
INTEGER bar_e_4d_length&&\
INTEGER bar_f_1d_length&&\
INTEGER bar_f_2d_length&&\
INTEGER bar_f_3d_length&&\
INTEGER bar_f_4d_length&&\
INTEGER bar_g_2d_length&&\
INTEGER bar_h_2d_length&&\
INTEGER bar_i_2d_length&&\
INTEGER bar_j_2d_length&&\
INTEGER bar_k_2d_length&&\
INTEGER bar_l_2d_length&&\
CCTK_DECLARE(CCTK_REAL,bar_a_0d,)&&\
CCTK_DECLARE(CCTK_REAL,bar_a_1d,(X0bar_a_1d))&&\
CCTK_DECLARE(CCTK_REAL,bar_a_2d,(X0bar_a_2d,X1bar_a_2d))&&\
CCTK_DECLARE(CCTK_REAL,bar_a_3d,(X0bar_a_3d,X1bar_a_3d,X2bar_a_3d))&&\
CCTK_DECLARE(CCTK_REAL,bar_a_4d,(X0bar_a_4d,X1bar_a_4d,X2bar_a_4d,X3bar_a_4d))&&\
CCTK_DECLARE(CCTK_REAL,bar_b_1d,(X0bar_b_1d))&&\
CCTK_DECLARE(CCTK_REAL,bar_b_2d,(X0bar_b_2d,X1bar_b_2d))&&\
CCTK_DECLARE(CCTK_REAL,bar_b_3d,(X0bar_b_3d,X1bar_b_3d,X2bar_b_3d))&&\
CCTK_DECLARE(CCTK_REAL,bar_b_4d,(X0bar_b_4d,X1bar_b_4d,X2bar_b_4d,X3bar_b_4d))&&\
CCTK_DECLARE(CCTK_REAL,bar_c_1d,(X0bar_c_1d,bar_c_1d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_c_2d,(X0bar_c_2d,X1bar_c_2d))&&\
CCTK_DECLARE(CCTK_REAL,bar_c_3d,(X0bar_c_3d,X1bar_c_3d,X2bar_c_3d,bar_c_3d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_c_4d,(X0bar_c_4d,X1bar_c_4d,X2bar_c_4d,X3bar_c_4d,bar_c_4d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_d_1d,(X0bar_d_1d,bar_d_1d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_d_2d,(X0bar_d_2d,X1bar_d_2d))&&\
CCTK_DECLARE(CCTK_REAL,bar_d_3d,(X0bar_d_3d,X1bar_d_3d,X2bar_d_3d,bar_d_3d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_d_4d,(X0bar_d_4d,X1bar_d_4d,X2bar_d_4d,X3bar_d_4d,bar_d_4d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_e_1d,(X0bar_e_1d,bar_e_1d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_e_2d,(X0bar_e_2d,X1bar_e_2d,bar_e_2d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_e_3d,(X0bar_e_3d,X1bar_e_3d,X2bar_e_3d,bar_e_3d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_e_4d,(X0bar_e_4d,X1bar_e_4d,X2bar_e_4d,X3bar_e_4d,bar_e_4d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_f_1d,(X0bar_f_1d,bar_f_1d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_f_2d,(X0bar_f_2d,X1bar_f_2d,bar_f_2d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_f_3d,(X0bar_f_3d,X1bar_f_3d,X2bar_f_3d,bar_f_3d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_f_4d,(X0bar_f_4d,X1bar_f_4d,X2bar_f_4d,X3bar_f_4d,bar_f_4d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_g_2d,(X0bar_g_2d,X1bar_g_2d,bar_g_2d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_h_2d,(X0bar_h_2d,X1bar_h_2d,bar_h_2d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_i_2d,(X0bar_i_2d,X1bar_i_2d,bar_i_2d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_j_2d,(X0bar_j_2d,X1bar_j_2d,bar_j_2d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_k_2d,(X0bar_k_2d,X1bar_k_2d,bar_k_2d_length))&&\
CCTK_DECLARE(CCTK_REAL,bar_l_2d,(X0bar_l_2d,X1bar_l_2d,bar_l_2d_length))&&\
CCTK_DECLARE(CCTK_REAL,gf1d,(X0foo1d))&&\
CCTK_DECLARE(CCTK_REAL,gf2d,(X0foo2d,X1foo2d))&&\
CCTK_DECLARE(CCTK_REAL,gf3d,(X0foo3d,X1foo3d,X2foo3d))&&\
CCTK_DECLARE(CCTK_REAL,gf4d,(X0foo4d,X1foo4d,X2foo4d,X3foo4d))&&\


#define TESTARRAYS_PRIVATE_FARGUMENTS \
X0bar_a_1d,X0bar_a_2d,X0bar_a_3d,X0bar_a_4d,X0bar_b_1d,X0bar_b_2d,X0bar_b_3d,X0bar_b_4d,X0bar_c_1d,X0bar_c_2d,X0bar_c_3d,X0bar_c_4d,X0bar_d_1d,X0bar_d_2d,X0bar_d_3d,X0bar_d_4d,X0bar_e_1d,X0bar_e_2d,X0bar_e_3d,X0bar_e_4d,X0bar_f_1d,X0bar_f_2d,X0bar_f_3d,X0bar_f_4d,X0bar_g_2d,X0bar_h_2d,X0bar_i_2d,X0bar_j_2d,X0bar_k_2d,X0bar_l_2d,X0foo1d,X0foo2d,X0foo3d,X0foo4d,X1bar_a_2d,X1bar_a_3d,X1bar_a_4d,X1bar_b_2d,X1bar_b_3d,X1bar_b_4d,X1bar_c_2d,X1bar_c_3d,X1bar_c_4d,X1bar_d_2d,X1bar_d_3d,X1bar_d_4d,X1bar_e_2d,X1bar_e_3d,X1bar_e_4d,X1bar_f_2d,X1bar_f_3d,X1bar_f_4d,X1bar_g_2d,X1bar_h_2d,X1bar_i_2d,X1bar_j_2d,X1bar_k_2d,X1bar_l_2d,X1foo2d,X1foo3d,X1foo4d,X2bar_a_3d,X2bar_a_4d,X2bar_b_3d,X2bar_b_4d,X2bar_c_3d,X2bar_c_4d,X2bar_d_3d,X2bar_d_4d,X2bar_e_3d,X2bar_e_4d,X2bar_f_3d,X2bar_f_4d,X2foo3d,X2foo4d,X3bar_a_4d,X3bar_b_4d,X3bar_c_4d,X3bar_d_4d,X3bar_e_4d,X3bar_f_4d,X3foo4d,bar_c_1d_length,bar_c_3d_length,bar_c_4d_length,bar_d_1d_length,bar_d_3d_length,bar_d_4d_length,bar_e_1d_length,bar_e_2d_length,bar_e_3d_length,bar_e_4d_length,bar_f_1d_length,bar_f_2d_length,bar_f_3d_length,bar_f_4d_length,bar_g_2d_length,bar_h_2d_length,bar_i_2d_length,bar_j_2d_length,bar_k_2d_length,bar_l_2d_length,bar_a_0d,bar_a_1d,bar_a_2d,bar_a_3d,bar_a_4d,bar_b_1d,bar_b_2d,bar_b_3d,bar_b_4d,bar_c_1d,bar_c_2d,bar_c_3d,bar_c_4d,bar_d_1d,bar_d_2d,bar_d_3d,bar_d_4d,bar_e_1d,bar_e_2d,bar_e_3d,bar_e_4d,bar_f_1d,bar_f_2d,bar_f_3d,bar_f_4d,bar_g_2d,bar_h_2d,bar_i_2d,bar_j_2d,bar_k_2d,bar_l_2d,gf1d,gf2d,gf3d,gf4d

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTARRAYS_PRIVATE_CARGUMENTS \
static int cctki_vi_bar_a_0d = -100; \
if (cctki_vi_bar_a_0d == -100) cctki_vi_bar_a_0d = CCTK_VarIndex("TestArrays::bar_a_0d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_a_0d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_a_0d)); \
static int cctki_vi_bar_a_1d = -100; \
if (cctki_vi_bar_a_1d == -100) cctki_vi_bar_a_1d = CCTK_VarIndex("TestArrays::bar_a_1d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_a_1d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_a_1d)); \
static int cctki_vi_bar_a_2d = -100; \
if (cctki_vi_bar_a_2d == -100) cctki_vi_bar_a_2d = CCTK_VarIndex("TestArrays::bar_a_2d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_a_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_a_2d)); \
static int cctki_vi_bar_a_3d = -100; \
if (cctki_vi_bar_a_3d == -100) cctki_vi_bar_a_3d = CCTK_VarIndex("TestArrays::bar_a_3d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_a_3d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_a_3d)); \
static int cctki_vi_bar_a_4d = -100; \
if (cctki_vi_bar_a_4d == -100) cctki_vi_bar_a_4d = CCTK_VarIndex("TestArrays::bar_a_4d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_a_4d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_a_4d)); \
static int cctki_vi_bar_b_1d = -100; \
if (cctki_vi_bar_b_1d == -100) cctki_vi_bar_b_1d = CCTK_VarIndex("TestArrays::bar_b_1d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_b_1d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_b_1d)); \
static int cctki_vi_bar_b_2d = -100; \
if (cctki_vi_bar_b_2d == -100) cctki_vi_bar_b_2d = CCTK_VarIndex("TestArrays::bar_b_2d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_b_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_b_2d)); \
static int cctki_vi_bar_b_3d = -100; \
if (cctki_vi_bar_b_3d == -100) cctki_vi_bar_b_3d = CCTK_VarIndex("TestArrays::bar_b_3d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_b_3d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_b_3d)); \
static int cctki_vi_bar_b_4d = -100; \
if (cctki_vi_bar_b_4d == -100) cctki_vi_bar_b_4d = CCTK_VarIndex("TestArrays::bar_b_4d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_b_4d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_b_4d)); \
static int cctki_vi_bar_c_1d = -100; \
if (cctki_vi_bar_c_1d == -100) cctki_vi_bar_c_1d = CCTK_VarIndex("TestArrays::bar_c_1d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_c_1d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_c_1d)); \
static int cctki_vi_bar_c_2d = -100; \
if (cctki_vi_bar_c_2d == -100) cctki_vi_bar_c_2d = CCTK_VarIndex("TestArrays::bar_c_2d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_c_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_c_2d)); \
static int cctki_vi_bar_c_3d = -100; \
if (cctki_vi_bar_c_3d == -100) cctki_vi_bar_c_3d = CCTK_VarIndex("TestArrays::bar_c_3d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_c_3d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_c_3d)); \
static int cctki_vi_bar_c_4d = -100; \
if (cctki_vi_bar_c_4d == -100) cctki_vi_bar_c_4d = CCTK_VarIndex("TestArrays::bar_c_4d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_c_4d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_c_4d)); \
static int cctki_vi_bar_d_1d = -100; \
if (cctki_vi_bar_d_1d == -100) cctki_vi_bar_d_1d = CCTK_VarIndex("TestArrays::bar_d_1d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_d_1d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_d_1d)); \
static int cctki_vi_bar_d_2d = -100; \
if (cctki_vi_bar_d_2d == -100) cctki_vi_bar_d_2d = CCTK_VarIndex("TestArrays::bar_d_2d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_d_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_d_2d)); \
static int cctki_vi_bar_d_3d = -100; \
if (cctki_vi_bar_d_3d == -100) cctki_vi_bar_d_3d = CCTK_VarIndex("TestArrays::bar_d_3d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_d_3d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_d_3d)); \
static int cctki_vi_bar_d_4d = -100; \
if (cctki_vi_bar_d_4d == -100) cctki_vi_bar_d_4d = CCTK_VarIndex("TestArrays::bar_d_4d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_d_4d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_d_4d)); \
static int cctki_vi_bar_e_1d = -100; \
if (cctki_vi_bar_e_1d == -100) cctki_vi_bar_e_1d = CCTK_VarIndex("TestArrays::bar_e_1d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_e_1d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_e_1d)); \
static int cctki_vi_bar_e_2d = -100; \
if (cctki_vi_bar_e_2d == -100) cctki_vi_bar_e_2d = CCTK_VarIndex("TestArrays::bar_e_2d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_e_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_e_2d)); \
static int cctki_vi_bar_e_3d = -100; \
if (cctki_vi_bar_e_3d == -100) cctki_vi_bar_e_3d = CCTK_VarIndex("TestArrays::bar_e_3d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_e_3d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_e_3d)); \
static int cctki_vi_bar_e_4d = -100; \
if (cctki_vi_bar_e_4d == -100) cctki_vi_bar_e_4d = CCTK_VarIndex("TestArrays::bar_e_4d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_e_4d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_e_4d)); \
static int cctki_vi_bar_f_1d = -100; \
if (cctki_vi_bar_f_1d == -100) cctki_vi_bar_f_1d = CCTK_VarIndex("TestArrays::bar_f_1d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_f_1d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_f_1d)); \
static int cctki_vi_bar_f_2d = -100; \
if (cctki_vi_bar_f_2d == -100) cctki_vi_bar_f_2d = CCTK_VarIndex("TestArrays::bar_f_2d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_f_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_f_2d)); \
static int cctki_vi_bar_f_3d = -100; \
if (cctki_vi_bar_f_3d == -100) cctki_vi_bar_f_3d = CCTK_VarIndex("TestArrays::bar_f_3d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_f_3d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_f_3d)); \
static int cctki_vi_bar_f_4d = -100; \
if (cctki_vi_bar_f_4d == -100) cctki_vi_bar_f_4d = CCTK_VarIndex("TestArrays::bar_f_4d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_f_4d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_f_4d)); \
static int cctki_vi_bar_g_2d = -100; \
if (cctki_vi_bar_g_2d == -100) cctki_vi_bar_g_2d = CCTK_VarIndex("TestArrays::bar_g_2d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_g_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_g_2d)); \
static int cctki_vi_bar_h_2d = -100; \
if (cctki_vi_bar_h_2d == -100) cctki_vi_bar_h_2d = CCTK_VarIndex("TestArrays::bar_h_2d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_h_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_h_2d)); \
static int cctki_vi_bar_i_2d = -100; \
if (cctki_vi_bar_i_2d == -100) cctki_vi_bar_i_2d = CCTK_VarIndex("TestArrays::bar_i_2d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_i_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_i_2d)); \
static int cctki_vi_bar_j_2d = -100; \
if (cctki_vi_bar_j_2d == -100) cctki_vi_bar_j_2d = CCTK_VarIndex("TestArrays::bar_j_2d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_j_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_j_2d)); \
static int cctki_vi_bar_k_2d = -100; \
if (cctki_vi_bar_k_2d == -100) cctki_vi_bar_k_2d = CCTK_VarIndex("TestArrays::bar_k_2d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_k_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_k_2d)); \
static int cctki_vi_bar_l_2d = -100; \
if (cctki_vi_bar_l_2d == -100) cctki_vi_bar_l_2d = CCTK_VarIndex("TestArrays::bar_l_2d[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bar_l_2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bar_l_2d)); \
static int cctki_vi_gf1d = -100; \
if (cctki_vi_gf1d == -100) cctki_vi_gf1d = CCTK_VarIndex("TestArrays::gf1d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf1d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf1d)); \
static int cctki_vi_gf2d = -100; \
if (cctki_vi_gf2d == -100) cctki_vi_gf2d = CCTK_VarIndex("TestArrays::gf2d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf2d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf2d)); \
static int cctki_vi_gf3d = -100; \
if (cctki_vi_gf3d == -100) cctki_vi_gf3d = CCTK_VarIndex("TestArrays::gf3d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf3d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf3d)); \
static int cctki_vi_gf4d = -100; \
if (cctki_vi_gf4d == -100) cctki_vi_gf4d = CCTK_VarIndex("TestArrays::gf4d"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf4d, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf4d));

#define DECLARE_TESTARRAYS_PRIVATE_C2F \
static int CCTKARGNUM_bar_a_0d = -1; \
static int CCTKGROUPNUM_bar_a_0d = -1; \
static int CCTKARGNUM_bar_a_1d = -1; \
static int CCTKGROUPNUM_bar_a_1d = -1; \
static int CCTKARGNUM_bar_a_2d = -1; \
static int CCTKGROUPNUM_bar_a_2d = -1; \
static int CCTKARGNUM_bar_a_3d = -1; \
static int CCTKGROUPNUM_bar_a_3d = -1; \
static int CCTKARGNUM_bar_a_4d = -1; \
static int CCTKGROUPNUM_bar_a_4d = -1; \
static int CCTKARGNUM_bar_b_1d = -1; \
static int CCTKGROUPNUM_bar_b_1d = -1; \
static int CCTKARGNUM_bar_b_2d = -1; \
static int CCTKGROUPNUM_bar_b_2d = -1; \
static int CCTKARGNUM_bar_b_3d = -1; \
static int CCTKGROUPNUM_bar_b_3d = -1; \
static int CCTKARGNUM_bar_b_4d = -1; \
static int CCTKGROUPNUM_bar_b_4d = -1; \
static int CCTKARGNUM_bar_c_1d = -1; \
static int CCTKGROUPNUM_bar_c_1d = -1; \
static int CCTKARGNUM_bar_c_2d = -1; \
static int CCTKGROUPNUM_bar_c_2d = -1; \
static int CCTKARGNUM_bar_c_3d = -1; \
static int CCTKGROUPNUM_bar_c_3d = -1; \
static int CCTKARGNUM_bar_c_4d = -1; \
static int CCTKGROUPNUM_bar_c_4d = -1; \
static int CCTKARGNUM_bar_d_1d = -1; \
static int CCTKGROUPNUM_bar_d_1d = -1; \
static int CCTKARGNUM_bar_d_2d = -1; \
static int CCTKGROUPNUM_bar_d_2d = -1; \
static int CCTKARGNUM_bar_d_3d = -1; \
static int CCTKGROUPNUM_bar_d_3d = -1; \
static int CCTKARGNUM_bar_d_4d = -1; \
static int CCTKGROUPNUM_bar_d_4d = -1; \
static int CCTKARGNUM_bar_e_1d = -1; \
static int CCTKGROUPNUM_bar_e_1d = -1; \
static int CCTKARGNUM_bar_e_2d = -1; \
static int CCTKGROUPNUM_bar_e_2d = -1; \
static int CCTKARGNUM_bar_e_3d = -1; \
static int CCTKGROUPNUM_bar_e_3d = -1; \
static int CCTKARGNUM_bar_e_4d = -1; \
static int CCTKGROUPNUM_bar_e_4d = -1; \
static int CCTKARGNUM_bar_f_1d = -1; \
static int CCTKGROUPNUM_bar_f_1d = -1; \
static int CCTKARGNUM_bar_f_2d = -1; \
static int CCTKGROUPNUM_bar_f_2d = -1; \
static int CCTKARGNUM_bar_f_3d = -1; \
static int CCTKGROUPNUM_bar_f_3d = -1; \
static int CCTKARGNUM_bar_f_4d = -1; \
static int CCTKGROUPNUM_bar_f_4d = -1; \
static int CCTKARGNUM_bar_g_2d = -1; \
static int CCTKGROUPNUM_bar_g_2d = -1; \
static int CCTKARGNUM_bar_h_2d = -1; \
static int CCTKGROUPNUM_bar_h_2d = -1; \
static int CCTKARGNUM_bar_i_2d = -1; \
static int CCTKGROUPNUM_bar_i_2d = -1; \
static int CCTKARGNUM_bar_j_2d = -1; \
static int CCTKGROUPNUM_bar_j_2d = -1; \
static int CCTKARGNUM_bar_k_2d = -1; \
static int CCTKGROUPNUM_bar_k_2d = -1; \
static int CCTKARGNUM_bar_l_2d = -1; \
static int CCTKGROUPNUM_bar_l_2d = -1; \
static int CCTKARGNUM_gf1d = -1; \
static int CCTKGROUPNUM_foo1d = -1; \
static int CCTKARGNUM_gf2d = -1; \
static int CCTKGROUPNUM_foo2d = -1; \
static int CCTKARGNUM_gf3d = -1; \
static int CCTKGROUPNUM_foo3d = -1; \
static int CCTKARGNUM_gf4d = -1; \
static int CCTKGROUPNUM_foo4d = -1;

#define INITIALISE_TESTARRAYS_PRIVATE_C2F \
if(CCTKARGNUM_bar_a_0d == -1) CCTKARGNUM_bar_a_0d = CCTK_VarIndex("TestArrays::bar_a_0d"); \
if(CCTKGROUPNUM_bar_a_0d == -1) CCTKGROUPNUM_bar_a_0d = CCTK_GroupIndex("TestArrays::bar_a_0d"); \
if(CCTKARGNUM_bar_a_1d == -1) CCTKARGNUM_bar_a_1d = CCTK_VarIndex("TestArrays::bar_a_1d"); \
if(CCTKGROUPNUM_bar_a_1d == -1) CCTKGROUPNUM_bar_a_1d = CCTK_GroupIndex("TestArrays::bar_a_1d"); \
if(CCTKARGNUM_bar_a_2d == -1) CCTKARGNUM_bar_a_2d = CCTK_VarIndex("TestArrays::bar_a_2d"); \
if(CCTKGROUPNUM_bar_a_2d == -1) CCTKGROUPNUM_bar_a_2d = CCTK_GroupIndex("TestArrays::bar_a_2d"); \
if(CCTKARGNUM_bar_a_3d == -1) CCTKARGNUM_bar_a_3d = CCTK_VarIndex("TestArrays::bar_a_3d"); \
if(CCTKGROUPNUM_bar_a_3d == -1) CCTKGROUPNUM_bar_a_3d = CCTK_GroupIndex("TestArrays::bar_a_3d"); \
if(CCTKARGNUM_bar_a_4d == -1) CCTKARGNUM_bar_a_4d = CCTK_VarIndex("TestArrays::bar_a_4d"); \
if(CCTKGROUPNUM_bar_a_4d == -1) CCTKGROUPNUM_bar_a_4d = CCTK_GroupIndex("TestArrays::bar_a_4d"); \
if(CCTKARGNUM_bar_b_1d == -1) CCTKARGNUM_bar_b_1d = CCTK_VarIndex("TestArrays::bar_b_1d"); \
if(CCTKGROUPNUM_bar_b_1d == -1) CCTKGROUPNUM_bar_b_1d = CCTK_GroupIndex("TestArrays::bar_b_1d"); \
if(CCTKARGNUM_bar_b_2d == -1) CCTKARGNUM_bar_b_2d = CCTK_VarIndex("TestArrays::bar_b_2d"); \
if(CCTKGROUPNUM_bar_b_2d == -1) CCTKGROUPNUM_bar_b_2d = CCTK_GroupIndex("TestArrays::bar_b_2d"); \
if(CCTKARGNUM_bar_b_3d == -1) CCTKARGNUM_bar_b_3d = CCTK_VarIndex("TestArrays::bar_b_3d"); \
if(CCTKGROUPNUM_bar_b_3d == -1) CCTKGROUPNUM_bar_b_3d = CCTK_GroupIndex("TestArrays::bar_b_3d"); \
if(CCTKARGNUM_bar_b_4d == -1) CCTKARGNUM_bar_b_4d = CCTK_VarIndex("TestArrays::bar_b_4d"); \
if(CCTKGROUPNUM_bar_b_4d == -1) CCTKGROUPNUM_bar_b_4d = CCTK_GroupIndex("TestArrays::bar_b_4d"); \
if(CCTKARGNUM_bar_c_1d == -1) CCTKARGNUM_bar_c_1d = CCTK_VarIndex("TestArrays::bar_c_1d[0]"); \
if(CCTKGROUPNUM_bar_c_1d == -1) CCTKGROUPNUM_bar_c_1d = CCTK_GroupIndex("TestArrays::bar_c_1d"); \
if(CCTKARGNUM_bar_c_2d == -1) CCTKARGNUM_bar_c_2d = CCTK_VarIndex("TestArrays::bar_c_2d"); \
if(CCTKGROUPNUM_bar_c_2d == -1) CCTKGROUPNUM_bar_c_2d = CCTK_GroupIndex("TestArrays::bar_c_2d"); \
if(CCTKARGNUM_bar_c_3d == -1) CCTKARGNUM_bar_c_3d = CCTK_VarIndex("TestArrays::bar_c_3d[0]"); \
if(CCTKGROUPNUM_bar_c_3d == -1) CCTKGROUPNUM_bar_c_3d = CCTK_GroupIndex("TestArrays::bar_c_3d"); \
if(CCTKARGNUM_bar_c_4d == -1) CCTKARGNUM_bar_c_4d = CCTK_VarIndex("TestArrays::bar_c_4d[0]"); \
if(CCTKGROUPNUM_bar_c_4d == -1) CCTKGROUPNUM_bar_c_4d = CCTK_GroupIndex("TestArrays::bar_c_4d"); \
if(CCTKARGNUM_bar_d_1d == -1) CCTKARGNUM_bar_d_1d = CCTK_VarIndex("TestArrays::bar_d_1d[0]"); \
if(CCTKGROUPNUM_bar_d_1d == -1) CCTKGROUPNUM_bar_d_1d = CCTK_GroupIndex("TestArrays::bar_d_1d"); \
if(CCTKARGNUM_bar_d_2d == -1) CCTKARGNUM_bar_d_2d = CCTK_VarIndex("TestArrays::bar_d_2d"); \
if(CCTKGROUPNUM_bar_d_2d == -1) CCTKGROUPNUM_bar_d_2d = CCTK_GroupIndex("TestArrays::bar_d_2d"); \
if(CCTKARGNUM_bar_d_3d == -1) CCTKARGNUM_bar_d_3d = CCTK_VarIndex("TestArrays::bar_d_3d[0]"); \
if(CCTKGROUPNUM_bar_d_3d == -1) CCTKGROUPNUM_bar_d_3d = CCTK_GroupIndex("TestArrays::bar_d_3d"); \
if(CCTKARGNUM_bar_d_4d == -1) CCTKARGNUM_bar_d_4d = CCTK_VarIndex("TestArrays::bar_d_4d[0]"); \
if(CCTKGROUPNUM_bar_d_4d == -1) CCTKGROUPNUM_bar_d_4d = CCTK_GroupIndex("TestArrays::bar_d_4d"); \
if(CCTKARGNUM_bar_e_1d == -1) CCTKARGNUM_bar_e_1d = CCTK_VarIndex("TestArrays::bar_e_1d[0]"); \
if(CCTKGROUPNUM_bar_e_1d == -1) CCTKGROUPNUM_bar_e_1d = CCTK_GroupIndex("TestArrays::bar_e_1d"); \
if(CCTKARGNUM_bar_e_2d == -1) CCTKARGNUM_bar_e_2d = CCTK_VarIndex("TestArrays::bar_e_2d[0]"); \
if(CCTKGROUPNUM_bar_e_2d == -1) CCTKGROUPNUM_bar_e_2d = CCTK_GroupIndex("TestArrays::bar_e_2d"); \
if(CCTKARGNUM_bar_e_3d == -1) CCTKARGNUM_bar_e_3d = CCTK_VarIndex("TestArrays::bar_e_3d[0]"); \
if(CCTKGROUPNUM_bar_e_3d == -1) CCTKGROUPNUM_bar_e_3d = CCTK_GroupIndex("TestArrays::bar_e_3d"); \
if(CCTKARGNUM_bar_e_4d == -1) CCTKARGNUM_bar_e_4d = CCTK_VarIndex("TestArrays::bar_e_4d[0]"); \
if(CCTKGROUPNUM_bar_e_4d == -1) CCTKGROUPNUM_bar_e_4d = CCTK_GroupIndex("TestArrays::bar_e_4d"); \
if(CCTKARGNUM_bar_f_1d == -1) CCTKARGNUM_bar_f_1d = CCTK_VarIndex("TestArrays::bar_f_1d[0]"); \
if(CCTKGROUPNUM_bar_f_1d == -1) CCTKGROUPNUM_bar_f_1d = CCTK_GroupIndex("TestArrays::bar_f_1d"); \
if(CCTKARGNUM_bar_f_2d == -1) CCTKARGNUM_bar_f_2d = CCTK_VarIndex("TestArrays::bar_f_2d[0]"); \
if(CCTKGROUPNUM_bar_f_2d == -1) CCTKGROUPNUM_bar_f_2d = CCTK_GroupIndex("TestArrays::bar_f_2d"); \
if(CCTKARGNUM_bar_f_3d == -1) CCTKARGNUM_bar_f_3d = CCTK_VarIndex("TestArrays::bar_f_3d[0]"); \
if(CCTKGROUPNUM_bar_f_3d == -1) CCTKGROUPNUM_bar_f_3d = CCTK_GroupIndex("TestArrays::bar_f_3d"); \
if(CCTKARGNUM_bar_f_4d == -1) CCTKARGNUM_bar_f_4d = CCTK_VarIndex("TestArrays::bar_f_4d[0]"); \
if(CCTKGROUPNUM_bar_f_4d == -1) CCTKGROUPNUM_bar_f_4d = CCTK_GroupIndex("TestArrays::bar_f_4d"); \
if(CCTKARGNUM_bar_g_2d == -1) CCTKARGNUM_bar_g_2d = CCTK_VarIndex("TestArrays::bar_g_2d[0]"); \
if(CCTKGROUPNUM_bar_g_2d == -1) CCTKGROUPNUM_bar_g_2d = CCTK_GroupIndex("TestArrays::bar_g_2d"); \
if(CCTKARGNUM_bar_h_2d == -1) CCTKARGNUM_bar_h_2d = CCTK_VarIndex("TestArrays::bar_h_2d[0]"); \
if(CCTKGROUPNUM_bar_h_2d == -1) CCTKGROUPNUM_bar_h_2d = CCTK_GroupIndex("TestArrays::bar_h_2d"); \
if(CCTKARGNUM_bar_i_2d == -1) CCTKARGNUM_bar_i_2d = CCTK_VarIndex("TestArrays::bar_i_2d[0]"); \
if(CCTKGROUPNUM_bar_i_2d == -1) CCTKGROUPNUM_bar_i_2d = CCTK_GroupIndex("TestArrays::bar_i_2d"); \
if(CCTKARGNUM_bar_j_2d == -1) CCTKARGNUM_bar_j_2d = CCTK_VarIndex("TestArrays::bar_j_2d[0]"); \
if(CCTKGROUPNUM_bar_j_2d == -1) CCTKGROUPNUM_bar_j_2d = CCTK_GroupIndex("TestArrays::bar_j_2d"); \
if(CCTKARGNUM_bar_k_2d == -1) CCTKARGNUM_bar_k_2d = CCTK_VarIndex("TestArrays::bar_k_2d[0]"); \
if(CCTKGROUPNUM_bar_k_2d == -1) CCTKGROUPNUM_bar_k_2d = CCTK_GroupIndex("TestArrays::bar_k_2d"); \
if(CCTKARGNUM_bar_l_2d == -1) CCTKARGNUM_bar_l_2d = CCTK_VarIndex("TestArrays::bar_l_2d[0]"); \
if(CCTKGROUPNUM_bar_l_2d == -1) CCTKGROUPNUM_bar_l_2d = CCTK_GroupIndex("TestArrays::bar_l_2d"); \
if(CCTKARGNUM_gf1d == -1) CCTKARGNUM_gf1d = CCTK_VarIndex("TestArrays::gf1d"); \
if(CCTKGROUPNUM_foo1d == -1) CCTKGROUPNUM_foo1d = CCTK_GroupIndex("TestArrays::foo1d"); \
if(CCTKARGNUM_gf2d == -1) CCTKARGNUM_gf2d = CCTK_VarIndex("TestArrays::gf2d"); \
if(CCTKGROUPNUM_foo2d == -1) CCTKGROUPNUM_foo2d = CCTK_GroupIndex("TestArrays::foo2d"); \
if(CCTKARGNUM_gf3d == -1) CCTKARGNUM_gf3d = CCTK_VarIndex("TestArrays::gf3d"); \
if(CCTKGROUPNUM_foo3d == -1) CCTKGROUPNUM_foo3d = CCTK_GroupIndex("TestArrays::foo3d"); \
if(CCTKARGNUM_gf4d == -1) CCTKARGNUM_gf4d = CCTK_VarIndex("TestArrays::gf4d"); \
if(CCTKGROUPNUM_foo4d == -1) CCTKGROUPNUM_foo4d = CCTK_GroupIndex("TestArrays::foo4d");

#define TESTARRAYS_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_TESTARRAYS_PRIVATE_C2F(GH) \
PASS_GROUPSIZE(bar_a_1d, 0),\
PASS_GROUPSIZE(bar_a_2d, 0),\
PASS_GROUPSIZE(bar_a_3d, 0),\
PASS_GROUPSIZE(bar_a_4d, 0),\
PASS_GROUPSIZE(bar_b_1d, 0),\
PASS_GROUPSIZE(bar_b_2d, 0),\
PASS_GROUPSIZE(bar_b_3d, 0),\
PASS_GROUPSIZE(bar_b_4d, 0),\
PASS_GROUPSIZE(bar_c_1d, 0),\
PASS_GROUPSIZE(bar_c_2d, 0),\
PASS_GROUPSIZE(bar_c_3d, 0),\
PASS_GROUPSIZE(bar_c_4d, 0),\
PASS_GROUPSIZE(bar_d_1d, 0),\
PASS_GROUPSIZE(bar_d_2d, 0),\
PASS_GROUPSIZE(bar_d_3d, 0),\
PASS_GROUPSIZE(bar_d_4d, 0),\
PASS_GROUPSIZE(bar_e_1d, 0),\
PASS_GROUPSIZE(bar_e_2d, 0),\
PASS_GROUPSIZE(bar_e_3d, 0),\
PASS_GROUPSIZE(bar_e_4d, 0),\
PASS_GROUPSIZE(bar_f_1d, 0),\
PASS_GROUPSIZE(bar_f_2d, 0),\
PASS_GROUPSIZE(bar_f_3d, 0),\
PASS_GROUPSIZE(bar_f_4d, 0),\
PASS_GROUPSIZE(bar_g_2d, 0),\
PASS_GROUPSIZE(bar_h_2d, 0),\
PASS_GROUPSIZE(bar_i_2d, 0),\
PASS_GROUPSIZE(bar_j_2d, 0),\
PASS_GROUPSIZE(bar_k_2d, 0),\
PASS_GROUPSIZE(bar_l_2d, 0),\
PASS_GROUPSIZE(foo1d, 0),\
PASS_GROUPSIZE(foo2d, 0),\
PASS_GROUPSIZE(foo3d, 0),\
PASS_GROUPSIZE(foo4d, 0),\
PASS_GROUPSIZE(bar_a_2d, 1),\
PASS_GROUPSIZE(bar_a_3d, 1),\
PASS_GROUPSIZE(bar_a_4d, 1),\
PASS_GROUPSIZE(bar_b_2d, 1),\
PASS_GROUPSIZE(bar_b_3d, 1),\
PASS_GROUPSIZE(bar_b_4d, 1),\
PASS_GROUPSIZE(bar_c_2d, 1),\
PASS_GROUPSIZE(bar_c_3d, 1),\
PASS_GROUPSIZE(bar_c_4d, 1),\
PASS_GROUPSIZE(bar_d_2d, 1),\
PASS_GROUPSIZE(bar_d_3d, 1),\
PASS_GROUPSIZE(bar_d_4d, 1),\
PASS_GROUPSIZE(bar_e_2d, 1),\
PASS_GROUPSIZE(bar_e_3d, 1),\
PASS_GROUPSIZE(bar_e_4d, 1),\
PASS_GROUPSIZE(bar_f_2d, 1),\
PASS_GROUPSIZE(bar_f_3d, 1),\
PASS_GROUPSIZE(bar_f_4d, 1),\
PASS_GROUPSIZE(bar_g_2d, 1),\
PASS_GROUPSIZE(bar_h_2d, 1),\
PASS_GROUPSIZE(bar_i_2d, 1),\
PASS_GROUPSIZE(bar_j_2d, 1),\
PASS_GROUPSIZE(bar_k_2d, 1),\
PASS_GROUPSIZE(bar_l_2d, 1),\
PASS_GROUPSIZE(foo2d, 1),\
PASS_GROUPSIZE(foo3d, 1),\
PASS_GROUPSIZE(foo4d, 1),\
PASS_GROUPSIZE(bar_a_3d, 2),\
PASS_GROUPSIZE(bar_a_4d, 2),\
PASS_GROUPSIZE(bar_b_3d, 2),\
PASS_GROUPSIZE(bar_b_4d, 2),\
PASS_GROUPSIZE(bar_c_3d, 2),\
PASS_GROUPSIZE(bar_c_4d, 2),\
PASS_GROUPSIZE(bar_d_3d, 2),\
PASS_GROUPSIZE(bar_d_4d, 2),\
PASS_GROUPSIZE(bar_e_3d, 2),\
PASS_GROUPSIZE(bar_e_4d, 2),\
PASS_GROUPSIZE(bar_f_3d, 2),\
PASS_GROUPSIZE(bar_f_4d, 2),\
PASS_GROUPSIZE(foo3d, 2),\
PASS_GROUPSIZE(foo4d, 2),\
PASS_GROUPSIZE(bar_a_4d, 3),\
PASS_GROUPSIZE(bar_b_4d, 3),\
PASS_GROUPSIZE(bar_c_4d, 3),\
PASS_GROUPSIZE(bar_d_4d, 3),\
PASS_GROUPSIZE(bar_e_4d, 3),\
PASS_GROUPSIZE(bar_f_4d, 3),\
PASS_GROUPSIZE(foo4d, 3),\
PASS_GROUPLEN(TestArrays, bar_c_1d),\
PASS_GROUPLEN(TestArrays, bar_c_3d),\
PASS_GROUPLEN(TestArrays, bar_c_4d),\
PASS_GROUPLEN(TestArrays, bar_d_1d),\
PASS_GROUPLEN(TestArrays, bar_d_3d),\
PASS_GROUPLEN(TestArrays, bar_d_4d),\
PASS_GROUPLEN(TestArrays, bar_e_1d),\
PASS_GROUPLEN(TestArrays, bar_e_2d),\
PASS_GROUPLEN(TestArrays, bar_e_3d),\
PASS_GROUPLEN(TestArrays, bar_e_4d),\
PASS_GROUPLEN(TestArrays, bar_f_1d),\
PASS_GROUPLEN(TestArrays, bar_f_2d),\
PASS_GROUPLEN(TestArrays, bar_f_3d),\
PASS_GROUPLEN(TestArrays, bar_f_4d),\
PASS_GROUPLEN(TestArrays, bar_g_2d),\
PASS_GROUPLEN(TestArrays, bar_h_2d),\
PASS_GROUPLEN(TestArrays, bar_i_2d),\
PASS_GROUPLEN(TestArrays, bar_j_2d),\
PASS_GROUPLEN(TestArrays, bar_k_2d),\
PASS_GROUPLEN(TestArrays, bar_l_2d),\
(CCTK_REAL *)(PASS_REFERENCE(bar_a_0d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_a_1d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_a_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_a_3d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_a_4d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_b_1d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_b_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_b_3d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_b_4d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_c_1d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_c_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_c_3d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_c_4d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_d_1d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_d_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_d_3d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_d_4d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_e_1d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_e_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_e_3d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_e_4d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_f_1d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_f_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_f_3d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_f_4d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_g_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_h_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_i_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_j_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_k_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bar_l_2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf1d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf2d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf3d, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf4d, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_TESTARRAYS_PROTECTED_FARGUMENTS \


#define TESTARRAYS_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTARRAYS_PROTECTED_CARGUMENTS \


#define DECLARE_TESTARRAYS_PROTECTED_C2F \


#define INITIALISE_TESTARRAYS_PROTECTED_C2F \


#define TESTARRAYS_PROTECTED_C2F_PROTO \


#define PASS_TESTARRAYS_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_TESTARRAYS_PUBLIC_FARGUMENTS \


#define TESTARRAYS_PUBLIC_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTARRAYS_PUBLIC_CARGUMENTS \


#define DECLARE_TESTARRAYS_PUBLIC_C2F \


#define INITIALISE_TESTARRAYS_PUBLIC_C2F \


#define TESTARRAYS_PUBLIC_C2F_PROTO \


#define PASS_TESTARRAYS_PUBLIC_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define TESTARRAYS_FARGUMENTS _CCTK_FARGUMENTS, TESTARRAYS_PRIVATE_FARGUMENTS

#define DECLARE_TESTARRAYS_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_TESTARRAYS_PRIVATE_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTARRAYS_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_TESTARRAYS_PRIVATE_CARGUMENTS

#define TESTARRAYS_C2F_PROTO _CCTK_C2F_PROTO, TESTARRAYS_PRIVATE_C2F_PROTO

#define PASS_TESTARRAYS_C2F(GH) _PASS_CCTK_C2F(GH), PASS_TESTARRAYS_PRIVATE_C2F(GH)

#define DECLARE_TESTARRAYS_C2F _DECLARE_CCTK_C2F DECLARE_TESTARRAYS_PRIVATE_C2F

#define INITIALISE_TESTARRAYS_C2F _INITIALISE_CCTK_C2F INITIALISE_TESTARRAYS_PRIVATE_C2F

#define TESTARRAYS_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
