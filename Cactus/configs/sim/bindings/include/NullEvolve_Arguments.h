/*@@
   @header  NullEvolve_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn NullEvolve
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_NULLEVOLVE_PRIVATE_FARGUMENTS \
INTEGER X0Jrad&&\
INTEGER X0aux_mask&&\
INTEGER X0diagtmp&&\
INTEGER X0dissip_mask&&\
INTEGER X0distmp&&\
INTEGER X0dxJrad&&\
INTEGER X0eth4_mask&&\
INTEGER X1aux_mask&&\
INTEGER X1diagtmp&&\
INTEGER X1dissip_mask&&\
INTEGER X1distmp&&\
INTEGER X1eth4_mask&&\
INTEGER diagtmp_length&&\
INTEGER distmp_length&&\
CCTK_DECLARE(CCTK_INT,auxiliary_maskn,(X0aux_mask,X1aux_mask))&&\
CCTK_DECLARE(CCTK_INT,auxiliary_masks,(X0aux_mask,X1aux_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,diagtmp,(X0diagtmp,X1diagtmp,diagtmp_length))&&\
CCTK_DECLARE(CCTK_REAL,dissip_mask,(X0dissip_mask,X1dissip_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,distmp_F,(X0distmp,X1distmp,distmp_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,distmp_d2F,(X0distmp,X1distmp,distmp_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,distmp_d4F,(X0distmp,X1distmp,distmp_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn_rad,(X0dxJrad))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs_rad,(X0dxJrad))&&\
CCTK_DECLARE(CCTK_INT,eth4_maskn,(X0eth4_mask,X1eth4_mask))&&\
CCTK_DECLARE(CCTK_INT,eth4_masks,(X0eth4_mask,X1eth4_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn_rad,(X0Jrad))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs_rad,(X0Jrad))&&\


#define NULLEVOLVE_PRIVATE_FARGUMENTS \
X0Jrad,X0aux_mask,X0diagtmp,X0dissip_mask,X0distmp,X0dxJrad,X0eth4_mask,X1aux_mask,X1diagtmp,X1dissip_mask,X1distmp,X1eth4_mask,diagtmp_length,distmp_length,auxiliary_maskn,auxiliary_masks,diagtmp,dissip_mask,distmp_F,distmp_d2F,distmp_d4F,dxjcn_rad,dxjcs_rad,eth4_maskn,eth4_masks,jcn_rad,jcs_rad

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLEVOLVE_PRIVATE_CARGUMENTS \
static int cctki_vi_auxiliary_maskn = -100; \
if (cctki_vi_auxiliary_maskn == -100) cctki_vi_auxiliary_maskn = CCTK_VarIndex("NullEvolve::auxiliary_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, auxiliary_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_auxiliary_maskn)); \
static int cctki_vi_auxiliary_masks = -100; \
if (cctki_vi_auxiliary_masks == -100) cctki_vi_auxiliary_masks = CCTK_VarIndex("NullEvolve::auxiliary_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, auxiliary_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_auxiliary_masks)); \
static int cctki_vi_diagtmp = -100; \
if (cctki_vi_diagtmp == -100) cctki_vi_diagtmp = CCTK_VarIndex("NullEvolve::diagtmp[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, diagtmp, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_diagtmp)); \
static int cctki_vi_dissip_mask = -100; \
if (cctki_vi_dissip_mask == -100) cctki_vi_dissip_mask = CCTK_VarIndex("NullEvolve::dissip_mask"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dissip_mask, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dissip_mask)); \
static int cctki_vi_distmp_F = -100; \
if (cctki_vi_distmp_F == -100) cctki_vi_distmp_F = CCTK_VarIndex("NullEvolve::distmp_F[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, distmp_F, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_distmp_F)); \
static int cctki_vi_distmp_d2F = -100; \
if (cctki_vi_distmp_d2F == -100) cctki_vi_distmp_d2F = CCTK_VarIndex("NullEvolve::distmp_d2F[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, distmp_d2F, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_distmp_d2F)); \
static int cctki_vi_distmp_d4F = -100; \
if (cctki_vi_distmp_d4F == -100) cctki_vi_distmp_d4F = CCTK_VarIndex("NullEvolve::distmp_d4F[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, distmp_d4F, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_distmp_d4F)); \
static int cctki_vi_dxjcn_rad = -100; \
if (cctki_vi_dxjcn_rad == -100) cctki_vi_dxjcn_rad = CCTK_VarIndex("NullEvolve::dxjcn_rad"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn_rad, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcn_rad)); \
static int cctki_vi_dxjcs_rad = -100; \
if (cctki_vi_dxjcs_rad == -100) cctki_vi_dxjcs_rad = CCTK_VarIndex("NullEvolve::dxjcs_rad"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs_rad, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcs_rad)); \
static int cctki_vi_eth4_maskn = -100; \
if (cctki_vi_eth4_maskn == -100) cctki_vi_eth4_maskn = CCTK_VarIndex("NullEvolve::eth4_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, eth4_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth4_maskn)); \
static int cctki_vi_eth4_masks = -100; \
if (cctki_vi_eth4_masks == -100) cctki_vi_eth4_masks = CCTK_VarIndex("NullEvolve::eth4_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, eth4_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth4_masks)); \
static int cctki_vi_jcn_rad = -100; \
if (cctki_vi_jcn_rad == -100) cctki_vi_jcn_rad = CCTK_VarIndex("NullEvolve::jcn_rad"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn_rad, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcn_rad)); \
static int cctki_vi_jcs_rad = -100; \
if (cctki_vi_jcs_rad == -100) cctki_vi_jcs_rad = CCTK_VarIndex("NullEvolve::jcs_rad"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs_rad, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcs_rad));

#define DECLARE_NULLEVOLVE_PRIVATE_C2F \
static int CCTKARGNUM_auxiliary_maskn = -1; \
static int CCTKGROUPNUM_aux_mask = -1; \
static int CCTKARGNUM_auxiliary_masks = -1; \
static int CCTKARGNUM_diagtmp = -1; \
static int CCTKGROUPNUM_diagtmp = -1; \
static int CCTKARGNUM_dissip_mask = -1; \
static int CCTKGROUPNUM_dissip_mask = -1; \
static int CCTKARGNUM_distmp_F = -1; \
static int CCTKGROUPNUM_distmp = -1; \
static int CCTKARGNUM_distmp_d2F = -1; \
static int CCTKARGNUM_distmp_d4F = -1; \
static int CCTKARGNUM_dxjcn_rad = -1; \
static int CCTKGROUPNUM_dxJrad = -1; \
static int CCTKARGNUM_dxjcs_rad = -1; \
static int CCTKARGNUM_eth4_maskn = -1; \
static int CCTKGROUPNUM_eth4_mask = -1; \
static int CCTKARGNUM_eth4_masks = -1; \
static int CCTKARGNUM_jcn_rad = -1; \
static int CCTKGROUPNUM_Jrad = -1; \
static int CCTKARGNUM_jcs_rad = -1;

#define INITIALISE_NULLEVOLVE_PRIVATE_C2F \
if(CCTKARGNUM_auxiliary_maskn == -1) CCTKARGNUM_auxiliary_maskn = CCTK_VarIndex("NullEvolve::auxiliary_maskn"); \
if(CCTKGROUPNUM_aux_mask == -1) CCTKGROUPNUM_aux_mask = CCTK_GroupIndex("NullEvolve::aux_mask"); \
if(CCTKARGNUM_auxiliary_masks == -1) CCTKARGNUM_auxiliary_masks = CCTK_VarIndex("NullEvolve::auxiliary_masks"); \
if(CCTKARGNUM_diagtmp == -1) CCTKARGNUM_diagtmp = CCTK_VarIndex("NullEvolve::diagtmp[0]"); \
if(CCTKGROUPNUM_diagtmp == -1) CCTKGROUPNUM_diagtmp = CCTK_GroupIndex("NullEvolve::diagtmp"); \
if(CCTKARGNUM_dissip_mask == -1) CCTKARGNUM_dissip_mask = CCTK_VarIndex("NullEvolve::dissip_mask"); \
if(CCTKGROUPNUM_dissip_mask == -1) CCTKGROUPNUM_dissip_mask = CCTK_GroupIndex("NullEvolve::dissip_mask"); \
if(CCTKARGNUM_distmp_F == -1) CCTKARGNUM_distmp_F = CCTK_VarIndex("NullEvolve::distmp_F[0]"); \
if(CCTKGROUPNUM_distmp == -1) CCTKGROUPNUM_distmp = CCTK_GroupIndex("NullEvolve::distmp"); \
if(CCTKARGNUM_distmp_d2F == -1) CCTKARGNUM_distmp_d2F = CCTK_VarIndex("NullEvolve::distmp_d2F[0]"); \
if(CCTKARGNUM_distmp_d4F == -1) CCTKARGNUM_distmp_d4F = CCTK_VarIndex("NullEvolve::distmp_d4F[0]"); \
if(CCTKARGNUM_dxjcn_rad == -1) CCTKARGNUM_dxjcn_rad = CCTK_VarIndex("NullEvolve::dxjcn_rad"); \
if(CCTKGROUPNUM_dxJrad == -1) CCTKGROUPNUM_dxJrad = CCTK_GroupIndex("NullEvolve::dxJrad"); \
if(CCTKARGNUM_dxjcs_rad == -1) CCTKARGNUM_dxjcs_rad = CCTK_VarIndex("NullEvolve::dxjcs_rad"); \
if(CCTKARGNUM_eth4_maskn == -1) CCTKARGNUM_eth4_maskn = CCTK_VarIndex("NullEvolve::eth4_maskn"); \
if(CCTKGROUPNUM_eth4_mask == -1) CCTKGROUPNUM_eth4_mask = CCTK_GroupIndex("NullEvolve::eth4_mask"); \
if(CCTKARGNUM_eth4_masks == -1) CCTKARGNUM_eth4_masks = CCTK_VarIndex("NullEvolve::eth4_masks"); \
if(CCTKARGNUM_jcn_rad == -1) CCTKARGNUM_jcn_rad = CCTK_VarIndex("NullEvolve::jcn_rad"); \
if(CCTKGROUPNUM_Jrad == -1) CCTKGROUPNUM_Jrad = CCTK_GroupIndex("NullEvolve::Jrad"); \
if(CCTKARGNUM_jcs_rad == -1) CCTKARGNUM_jcs_rad = CCTK_VarIndex("NullEvolve::jcs_rad");

#define NULLEVOLVE_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *

#define PASS_NULLEVOLVE_PRIVATE_C2F(GH) \
PASS_GROUPSIZE(Jrad, 0),\
PASS_GROUPSIZE(aux_mask, 0),\
PASS_GROUPSIZE(diagtmp, 0),\
PASS_GROUPSIZE(dissip_mask, 0),\
PASS_GROUPSIZE(distmp, 0),\
PASS_GROUPSIZE(dxJrad, 0),\
PASS_GROUPSIZE(eth4_mask, 0),\
PASS_GROUPSIZE(aux_mask, 1),\
PASS_GROUPSIZE(diagtmp, 1),\
PASS_GROUPSIZE(dissip_mask, 1),\
PASS_GROUPSIZE(distmp, 1),\
PASS_GROUPSIZE(eth4_mask, 1),\
PASS_GROUPLEN(NullEvolve, diagtmp),\
PASS_GROUPLEN(NullEvolve, distmp),\
(CCTK_INT *)(PASS_REFERENCE(auxiliary_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(auxiliary_masks, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(diagtmp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dissip_mask, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(distmp_F, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(distmp_d2F, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(distmp_d4F, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn_rad, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs_rad, 0)),\
(CCTK_INT *)(PASS_REFERENCE(eth4_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(eth4_masks, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn_rad, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs_rad, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLEVOLVE_PROTECTED_FARGUMENTS \
INTEGER SHRE_alpha_e_length&&\
INTEGER SHRE_beta_e_length&&\
INTEGER SHRE_dalpha_e_length&&\
INTEGER SHRE_dbeta_e_length&&\
INTEGER SHRE_dgij_e_length&&\
INTEGER SHRE_dgit_e_length&&\
INTEGER SHRE_gij_e_length&&\
INTEGER SHRE_git_e_length&&\
INTEGER WT_r0_length&&\
INTEGER X0SHRE_alpha_e&&\
INTEGER X0SHRE_beta_e&&\
INTEGER X0SHRE_dalpha_e&&\
INTEGER X0SHRE_dbeta_e&&\
INTEGER X0SHRE_dgij_e&&\
INTEGER X0SHRE_dgit_e&&\
INTEGER X0SHRE_gij_e&&\
INTEGER X0SHRE_git_e&&\
INTEGER X0WT_r0&&\
INTEGER X0beta_l&&\
INTEGER X0beta_wt&&\
INTEGER X0j_l&&\
INTEGER X0j_wt&&\
INTEGER X0q_wt&&\
INTEGER X0u_l&&\
INTEGER X0u_wt&&\
INTEGER X0u_x_wt&&\
INTEGER X0w_l&&\
INTEGER X0w_wt&&\
INTEGER X0x_wt&&\
INTEGER X1SHRE_alpha_e&&\
INTEGER X1SHRE_beta_e&&\
INTEGER X1SHRE_dalpha_e&&\
INTEGER X1SHRE_dbeta_e&&\
INTEGER X1SHRE_dgij_e&&\
INTEGER X1SHRE_dgit_e&&\
INTEGER X1SHRE_gij_e&&\
INTEGER X1SHRE_git_e&&\
INTEGER X1WT_r0&&\
INTEGER X1beta_l&&\
INTEGER X1beta_wt&&\
INTEGER X1j_l&&\
INTEGER X1j_wt&&\
INTEGER X1q_wt&&\
INTEGER X1u_l&&\
INTEGER X1u_wt&&\
INTEGER X1u_x_wt&&\
INTEGER X1w_l&&\
INTEGER X1w_wt&&\
INTEGER X1x_wt&&\
INTEGER beta_l_length&&\
INTEGER beta_wt_length&&\
INTEGER j_l_length&&\
INTEGER j_wt_length&&\
INTEGER q_wt_length&&\
INTEGER u_l_length&&\
INTEGER u_wt_length&&\
INTEGER u_x_wt_length&&\
INTEGER w_l_length&&\
INTEGER w_wt_length&&\
INTEGER x_wt_length&&\
CCTK_DECLARE(CCTK_REAL,SHRE_alpha_e,(X0SHRE_alpha_e,X1SHRE_alpha_e,SHRE_alpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_beta_e,(X0SHRE_beta_e,X1SHRE_beta_e,SHRE_beta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpalpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqalpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dralpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtalpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_gij_e,(X0SHRE_gij_e,X1SHRE_gij_e,SHRE_gij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_git_e,(X0SHRE_git_e,X1SHRE_git_e,SHRE_git_e_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_r0,(X0WT_r0,X1WT_r0,WT_r0_length))&&\
CCTK_DECLARE(CCTK_REAL,beta_l,(X0beta_l,X1beta_l,beta_l_length))&&\
CCTK_DECLARE(CCTK_REAL,beta_wt,(X0beta_wt,X1beta_wt,beta_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,beta_wt_p,(X0beta_wt,X1beta_wt,beta_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,j_l,(X0j_l,X1j_l,j_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,j_wt,(X0j_wt,X1j_wt,j_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,j_wt_p,(X0j_wt,X1j_wt,j_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,q_wt,(X0q_wt,X1q_wt,q_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,q_wt_p,(X0q_wt,X1q_wt,q_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_l,(X0u_l,X1u_l,u_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_wt,(X0u_wt,X1u_wt,u_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_wt_p,(X0u_wt,X1u_wt,u_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_x_wt,(X0u_x_wt,X1u_x_wt,u_x_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,w_l,(X0w_l,X1w_l,w_l_length))&&\
CCTK_DECLARE(CCTK_REAL,w_wt,(X0w_wt,X1w_wt,w_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,w_wt_p,(X0w_wt,X1w_wt,w_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,x_wt,(X0x_wt,X1x_wt,x_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,x_wt_p,(X0x_wt,X1x_wt,x_wt_length))&&\


#define NULLEVOLVE_PROTECTED_FARGUMENTS \
SHRE_alpha_e_length,SHRE_beta_e_length,SHRE_dalpha_e_length,SHRE_dbeta_e_length,SHRE_dgij_e_length,SHRE_dgit_e_length,SHRE_gij_e_length,SHRE_git_e_length,WT_r0_length,X0SHRE_alpha_e,X0SHRE_beta_e,X0SHRE_dalpha_e,X0SHRE_dbeta_e,X0SHRE_dgij_e,X0SHRE_dgit_e,X0SHRE_gij_e,X0SHRE_git_e,X0WT_r0,X0beta_l,X0beta_wt,X0j_l,X0j_wt,X0q_wt,X0u_l,X0u_wt,X0u_x_wt,X0w_l,X0w_wt,X0x_wt,X1SHRE_alpha_e,X1SHRE_beta_e,X1SHRE_dalpha_e,X1SHRE_dbeta_e,X1SHRE_dgij_e,X1SHRE_dgit_e,X1SHRE_gij_e,X1SHRE_git_e,X1WT_r0,X1beta_l,X1beta_wt,X1j_l,X1j_wt,X1q_wt,X1u_l,X1u_wt,X1u_x_wt,X1w_l,X1w_wt,X1x_wt,beta_l_length,beta_wt_length,j_l_length,j_wt_length,q_wt_length,u_l_length,u_wt_length,u_x_wt_length,w_l_length,w_wt_length,x_wt_length,SHRE_alpha_e,SHRE_beta_e,SHRE_dpalpha_e,SHRE_dpbeta_e,SHRE_dpgij_e,SHRE_dpgit_e,SHRE_dqalpha_e,SHRE_dqbeta_e,SHRE_dqgij_e,SHRE_dqgit_e,SHRE_dralpha_e,SHRE_drbeta_e,SHRE_drgij_e,SHRE_drgit_e,SHRE_dtalpha_e,SHRE_dtbeta_e,SHRE_dtgij_e,SHRE_dtgit_e,SHRE_gij_e,SHRE_git_e,WT_r0,beta_l,beta_wt,beta_wt_p,j_l,j_wt,j_wt_p,q_wt,q_wt_p,u_l,u_wt,u_wt_p,u_x_wt,w_l,w_wt,w_wt_p,x_wt,x_wt_p

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLEVOLVE_PROTECTED_CARGUMENTS \
static int cctki_vi_SHRE_alpha_e = -100; \
if (cctki_vi_SHRE_alpha_e == -100) cctki_vi_SHRE_alpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_alpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_alpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_alpha_e)); \
static int cctki_vi_SHRE_beta_e = -100; \
if (cctki_vi_SHRE_beta_e == -100) cctki_vi_SHRE_beta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_beta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_beta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_beta_e)); \
static int cctki_vi_SHRE_dpalpha_e = -100; \
if (cctki_vi_SHRE_dpalpha_e == -100) cctki_vi_SHRE_dpalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpalpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpalpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpalpha_e)); \
static int cctki_vi_SHRE_dpbeta_e = -100; \
if (cctki_vi_SHRE_dpbeta_e == -100) cctki_vi_SHRE_dpbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpbeta_e)); \
static int cctki_vi_SHRE_dpgij_e = -100; \
if (cctki_vi_SHRE_dpgij_e == -100) cctki_vi_SHRE_dpgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpgij_e)); \
static int cctki_vi_SHRE_dpgit_e = -100; \
if (cctki_vi_SHRE_dpgit_e == -100) cctki_vi_SHRE_dpgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpgit_e)); \
static int cctki_vi_SHRE_dqalpha_e = -100; \
if (cctki_vi_SHRE_dqalpha_e == -100) cctki_vi_SHRE_dqalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqalpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqalpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqalpha_e)); \
static int cctki_vi_SHRE_dqbeta_e = -100; \
if (cctki_vi_SHRE_dqbeta_e == -100) cctki_vi_SHRE_dqbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqbeta_e)); \
static int cctki_vi_SHRE_dqgij_e = -100; \
if (cctki_vi_SHRE_dqgij_e == -100) cctki_vi_SHRE_dqgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqgij_e)); \
static int cctki_vi_SHRE_dqgit_e = -100; \
if (cctki_vi_SHRE_dqgit_e == -100) cctki_vi_SHRE_dqgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqgit_e)); \
static int cctki_vi_SHRE_dralpha_e = -100; \
if (cctki_vi_SHRE_dralpha_e == -100) cctki_vi_SHRE_dralpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dralpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dralpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dralpha_e)); \
static int cctki_vi_SHRE_drbeta_e = -100; \
if (cctki_vi_SHRE_drbeta_e == -100) cctki_vi_SHRE_drbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drbeta_e)); \
static int cctki_vi_SHRE_drgij_e = -100; \
if (cctki_vi_SHRE_drgij_e == -100) cctki_vi_SHRE_drgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drgij_e)); \
static int cctki_vi_SHRE_drgit_e = -100; \
if (cctki_vi_SHRE_drgit_e == -100) cctki_vi_SHRE_drgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drgit_e)); \
static int cctki_vi_SHRE_dtalpha_e = -100; \
if (cctki_vi_SHRE_dtalpha_e == -100) cctki_vi_SHRE_dtalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtalpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtalpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtalpha_e)); \
static int cctki_vi_SHRE_dtbeta_e = -100; \
if (cctki_vi_SHRE_dtbeta_e == -100) cctki_vi_SHRE_dtbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtbeta_e)); \
static int cctki_vi_SHRE_dtgij_e = -100; \
if (cctki_vi_SHRE_dtgij_e == -100) cctki_vi_SHRE_dtgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtgij_e)); \
static int cctki_vi_SHRE_dtgit_e = -100; \
if (cctki_vi_SHRE_dtgit_e == -100) cctki_vi_SHRE_dtgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtgit_e)); \
static int cctki_vi_SHRE_gij_e = -100; \
if (cctki_vi_SHRE_gij_e == -100) cctki_vi_SHRE_gij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_gij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_gij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_gij_e)); \
static int cctki_vi_SHRE_git_e = -100; \
if (cctki_vi_SHRE_git_e == -100) cctki_vi_SHRE_git_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_git_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_git_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_git_e)); \
static int cctki_vi_WT_r0 = -100; \
if (cctki_vi_WT_r0 == -100) cctki_vi_WT_r0 = CCTK_VarIndex("NULLSHREXTRACT::WT_r0[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_r0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_r0)); \
static int cctki_vi_beta_l = -100; \
if (cctki_vi_beta_l == -100) cctki_vi_beta_l = CCTK_VarIndex("NULLSHREXTRACT::beta_l[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta_l, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta_l)); \
static int cctki_vi_beta_wt = -100; \
if (cctki_vi_beta_wt == -100) cctki_vi_beta_wt = CCTK_VarIndex("NULLSHREXTRACT::beta_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta_wt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta_wt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta_wt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_beta_wt)); \
static int cctki_vi_j_l = -100; \
if (cctki_vi_j_l == -100) cctki_vi_j_l = CCTK_VarIndex("NULLSHREXTRACT::j_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, j_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_j_l)); \
static int cctki_vi_j_wt = -100; \
if (cctki_vi_j_wt == -100) cctki_vi_j_wt = CCTK_VarIndex("NULLSHREXTRACT::j_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, j_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_j_wt)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, j_wt_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_j_wt)); \
static int cctki_vi_q_wt = -100; \
if (cctki_vi_q_wt == -100) cctki_vi_q_wt = CCTK_VarIndex("NULLSHREXTRACT::q_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, q_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_q_wt)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, q_wt_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_q_wt)); \
static int cctki_vi_u_l = -100; \
if (cctki_vi_u_l == -100) cctki_vi_u_l = CCTK_VarIndex("NULLSHREXTRACT::u_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_u_l)); \
static int cctki_vi_u_wt = -100; \
if (cctki_vi_u_wt == -100) cctki_vi_u_wt = CCTK_VarIndex("NULLSHREXTRACT::u_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_u_wt)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_wt_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_u_wt)); \
static int cctki_vi_u_x_wt = -100; \
if (cctki_vi_u_x_wt == -100) cctki_vi_u_x_wt = CCTK_VarIndex("NULLSHREXTRACT::u_x_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_x_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_u_x_wt)); \
static int cctki_vi_w_l = -100; \
if (cctki_vi_w_l == -100) cctki_vi_w_l = CCTK_VarIndex("NULLSHREXTRACT::w_l[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_l, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_w_l)); \
static int cctki_vi_w_wt = -100; \
if (cctki_vi_w_wt == -100) cctki_vi_w_wt = CCTK_VarIndex("NULLSHREXTRACT::w_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_wt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_w_wt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_wt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_w_wt)); \
static int cctki_vi_x_wt = -100; \
if (cctki_vi_x_wt == -100) cctki_vi_x_wt = CCTK_VarIndex("NULLSHREXTRACT::x_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x_wt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x_wt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x_wt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_x_wt));

#define DECLARE_NULLEVOLVE_PROTECTED_C2F \
static int CCTKARGNUM_SHRE_alpha_e = -1; \
static int CCTKGROUPNUM_SHRE_alpha_e = -1; \
static int CCTKARGNUM_SHRE_beta_e = -1; \
static int CCTKGROUPNUM_SHRE_beta_e = -1; \
static int CCTKARGNUM_SHRE_dpalpha_e = -1; \
static int CCTKGROUPNUM_SHRE_dalpha_e = -1; \
static int CCTKARGNUM_SHRE_dpbeta_e = -1; \
static int CCTKGROUPNUM_SHRE_dbeta_e = -1; \
static int CCTKARGNUM_SHRE_dpgij_e = -1; \
static int CCTKGROUPNUM_SHRE_dgij_e = -1; \
static int CCTKARGNUM_SHRE_dpgit_e = -1; \
static int CCTKGROUPNUM_SHRE_dgit_e = -1; \
static int CCTKARGNUM_SHRE_dqalpha_e = -1; \
static int CCTKARGNUM_SHRE_dqbeta_e = -1; \
static int CCTKARGNUM_SHRE_dqgij_e = -1; \
static int CCTKARGNUM_SHRE_dqgit_e = -1; \
static int CCTKARGNUM_SHRE_dralpha_e = -1; \
static int CCTKARGNUM_SHRE_drbeta_e = -1; \
static int CCTKARGNUM_SHRE_drgij_e = -1; \
static int CCTKARGNUM_SHRE_drgit_e = -1; \
static int CCTKARGNUM_SHRE_dtalpha_e = -1; \
static int CCTKARGNUM_SHRE_dtbeta_e = -1; \
static int CCTKARGNUM_SHRE_dtgij_e = -1; \
static int CCTKARGNUM_SHRE_dtgit_e = -1; \
static int CCTKARGNUM_SHRE_gij_e = -1; \
static int CCTKGROUPNUM_SHRE_gij_e = -1; \
static int CCTKARGNUM_SHRE_git_e = -1; \
static int CCTKGROUPNUM_SHRE_git_e = -1; \
static int CCTKARGNUM_WT_r0 = -1; \
static int CCTKGROUPNUM_WT_r0 = -1; \
static int CCTKARGNUM_beta_l = -1; \
static int CCTKGROUPNUM_beta_l = -1; \
static int CCTKARGNUM_beta_wt = -1; \
static int CCTKGROUPNUM_beta_wt = -1; \
static int CCTKARGNUM_j_l = -1; \
static int CCTKGROUPNUM_j_l = -1; \
static int CCTKARGNUM_j_wt = -1; \
static int CCTKGROUPNUM_j_wt = -1; \
static int CCTKARGNUM_q_wt = -1; \
static int CCTKGROUPNUM_q_wt = -1; \
static int CCTKARGNUM_u_l = -1; \
static int CCTKGROUPNUM_u_l = -1; \
static int CCTKARGNUM_u_wt = -1; \
static int CCTKGROUPNUM_u_wt = -1; \
static int CCTKARGNUM_u_x_wt = -1; \
static int CCTKGROUPNUM_u_x_wt = -1; \
static int CCTKARGNUM_w_l = -1; \
static int CCTKGROUPNUM_w_l = -1; \
static int CCTKARGNUM_w_wt = -1; \
static int CCTKGROUPNUM_w_wt = -1; \
static int CCTKARGNUM_x_wt = -1; \
static int CCTKGROUPNUM_x_wt = -1;

#define INITIALISE_NULLEVOLVE_PROTECTED_C2F \
if(CCTKARGNUM_SHRE_alpha_e == -1) CCTKARGNUM_SHRE_alpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_alpha_e[0]"); \
if(CCTKGROUPNUM_SHRE_alpha_e == -1) CCTKGROUPNUM_SHRE_alpha_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_alpha_e"); \
if(CCTKARGNUM_SHRE_beta_e == -1) CCTKARGNUM_SHRE_beta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_beta_e[0]"); \
if(CCTKGROUPNUM_SHRE_beta_e == -1) CCTKGROUPNUM_SHRE_beta_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_beta_e"); \
if(CCTKARGNUM_SHRE_dpalpha_e == -1) CCTKARGNUM_SHRE_dpalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpalpha_e[0]"); \
if(CCTKGROUPNUM_SHRE_dalpha_e == -1) CCTKGROUPNUM_SHRE_dalpha_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_dalpha_e"); \
if(CCTKARGNUM_SHRE_dpbeta_e == -1) CCTKARGNUM_SHRE_dpbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpbeta_e[0]"); \
if(CCTKGROUPNUM_SHRE_dbeta_e == -1) CCTKGROUPNUM_SHRE_dbeta_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_dbeta_e"); \
if(CCTKARGNUM_SHRE_dpgij_e == -1) CCTKARGNUM_SHRE_dpgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpgij_e[0]"); \
if(CCTKGROUPNUM_SHRE_dgij_e == -1) CCTKGROUPNUM_SHRE_dgij_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_dgij_e"); \
if(CCTKARGNUM_SHRE_dpgit_e == -1) CCTKARGNUM_SHRE_dpgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpgit_e[0]"); \
if(CCTKGROUPNUM_SHRE_dgit_e == -1) CCTKGROUPNUM_SHRE_dgit_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_dgit_e"); \
if(CCTKARGNUM_SHRE_dqalpha_e == -1) CCTKARGNUM_SHRE_dqalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqalpha_e[0]"); \
if(CCTKARGNUM_SHRE_dqbeta_e == -1) CCTKARGNUM_SHRE_dqbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqbeta_e[0]"); \
if(CCTKARGNUM_SHRE_dqgij_e == -1) CCTKARGNUM_SHRE_dqgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqgij_e[0]"); \
if(CCTKARGNUM_SHRE_dqgit_e == -1) CCTKARGNUM_SHRE_dqgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqgit_e[0]"); \
if(CCTKARGNUM_SHRE_dralpha_e == -1) CCTKARGNUM_SHRE_dralpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dralpha_e[0]"); \
if(CCTKARGNUM_SHRE_drbeta_e == -1) CCTKARGNUM_SHRE_drbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drbeta_e[0]"); \
if(CCTKARGNUM_SHRE_drgij_e == -1) CCTKARGNUM_SHRE_drgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drgij_e[0]"); \
if(CCTKARGNUM_SHRE_drgit_e == -1) CCTKARGNUM_SHRE_drgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drgit_e[0]"); \
if(CCTKARGNUM_SHRE_dtalpha_e == -1) CCTKARGNUM_SHRE_dtalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtalpha_e[0]"); \
if(CCTKARGNUM_SHRE_dtbeta_e == -1) CCTKARGNUM_SHRE_dtbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtbeta_e[0]"); \
if(CCTKARGNUM_SHRE_dtgij_e == -1) CCTKARGNUM_SHRE_dtgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtgij_e[0]"); \
if(CCTKARGNUM_SHRE_dtgit_e == -1) CCTKARGNUM_SHRE_dtgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtgit_e[0]"); \
if(CCTKARGNUM_SHRE_gij_e == -1) CCTKARGNUM_SHRE_gij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_gij_e[0]"); \
if(CCTKGROUPNUM_SHRE_gij_e == -1) CCTKGROUPNUM_SHRE_gij_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_gij_e"); \
if(CCTKARGNUM_SHRE_git_e == -1) CCTKARGNUM_SHRE_git_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_git_e[0]"); \
if(CCTKGROUPNUM_SHRE_git_e == -1) CCTKGROUPNUM_SHRE_git_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_git_e"); \
if(CCTKARGNUM_WT_r0 == -1) CCTKARGNUM_WT_r0 = CCTK_VarIndex("NULLSHREXTRACT::WT_r0[0]"); \
if(CCTKGROUPNUM_WT_r0 == -1) CCTKGROUPNUM_WT_r0 = CCTK_GroupIndex("NULLSHREXTRACT::WT_r0"); \
if(CCTKARGNUM_beta_l == -1) CCTKARGNUM_beta_l = CCTK_VarIndex("NULLSHREXTRACT::beta_l[0]"); \
if(CCTKGROUPNUM_beta_l == -1) CCTKGROUPNUM_beta_l = CCTK_GroupIndex("NULLSHREXTRACT::beta_l"); \
if(CCTKARGNUM_beta_wt == -1) CCTKARGNUM_beta_wt = CCTK_VarIndex("NULLSHREXTRACT::beta_wt[0]"); \
if(CCTKGROUPNUM_beta_wt == -1) CCTKGROUPNUM_beta_wt = CCTK_GroupIndex("NULLSHREXTRACT::beta_wt"); \
if(CCTKARGNUM_j_l == -1) CCTKARGNUM_j_l = CCTK_VarIndex("NULLSHREXTRACT::j_l[0]"); \
if(CCTKGROUPNUM_j_l == -1) CCTKGROUPNUM_j_l = CCTK_GroupIndex("NULLSHREXTRACT::j_l"); \
if(CCTKARGNUM_j_wt == -1) CCTKARGNUM_j_wt = CCTK_VarIndex("NULLSHREXTRACT::j_wt[0]"); \
if(CCTKGROUPNUM_j_wt == -1) CCTKGROUPNUM_j_wt = CCTK_GroupIndex("NULLSHREXTRACT::j_wt"); \
if(CCTKARGNUM_q_wt == -1) CCTKARGNUM_q_wt = CCTK_VarIndex("NULLSHREXTRACT::q_wt[0]"); \
if(CCTKGROUPNUM_q_wt == -1) CCTKGROUPNUM_q_wt = CCTK_GroupIndex("NULLSHREXTRACT::q_wt"); \
if(CCTKARGNUM_u_l == -1) CCTKARGNUM_u_l = CCTK_VarIndex("NULLSHREXTRACT::u_l[0]"); \
if(CCTKGROUPNUM_u_l == -1) CCTKGROUPNUM_u_l = CCTK_GroupIndex("NULLSHREXTRACT::u_l"); \
if(CCTKARGNUM_u_wt == -1) CCTKARGNUM_u_wt = CCTK_VarIndex("NULLSHREXTRACT::u_wt[0]"); \
if(CCTKGROUPNUM_u_wt == -1) CCTKGROUPNUM_u_wt = CCTK_GroupIndex("NULLSHREXTRACT::u_wt"); \
if(CCTKARGNUM_u_x_wt == -1) CCTKARGNUM_u_x_wt = CCTK_VarIndex("NULLSHREXTRACT::u_x_wt[0]"); \
if(CCTKGROUPNUM_u_x_wt == -1) CCTKGROUPNUM_u_x_wt = CCTK_GroupIndex("NULLSHREXTRACT::u_x_wt"); \
if(CCTKARGNUM_w_l == -1) CCTKARGNUM_w_l = CCTK_VarIndex("NULLSHREXTRACT::w_l[0]"); \
if(CCTKGROUPNUM_w_l == -1) CCTKGROUPNUM_w_l = CCTK_GroupIndex("NULLSHREXTRACT::w_l"); \
if(CCTKARGNUM_w_wt == -1) CCTKARGNUM_w_wt = CCTK_VarIndex("NULLSHREXTRACT::w_wt[0]"); \
if(CCTKGROUPNUM_w_wt == -1) CCTKGROUPNUM_w_wt = CCTK_GroupIndex("NULLSHREXTRACT::w_wt"); \
if(CCTKARGNUM_x_wt == -1) CCTKARGNUM_x_wt = CCTK_VarIndex("NULLSHREXTRACT::x_wt[0]"); \
if(CCTKGROUPNUM_x_wt == -1) CCTKGROUPNUM_x_wt = CCTK_GroupIndex("NULLSHREXTRACT::x_wt");

#define NULLEVOLVE_PROTECTED_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_NULLEVOLVE_PROTECTED_C2F(GH) \
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_alpha_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_beta_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_dalpha_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_dbeta_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_dgij_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_dgit_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_gij_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_git_e),\
PASS_GROUPLEN(NULLSHREXTRACT, WT_r0),\
PASS_GROUPSIZE(SHRE_alpha_e, 0),\
PASS_GROUPSIZE(SHRE_beta_e, 0),\
PASS_GROUPSIZE(SHRE_dalpha_e, 0),\
PASS_GROUPSIZE(SHRE_dbeta_e, 0),\
PASS_GROUPSIZE(SHRE_dgij_e, 0),\
PASS_GROUPSIZE(SHRE_dgit_e, 0),\
PASS_GROUPSIZE(SHRE_gij_e, 0),\
PASS_GROUPSIZE(SHRE_git_e, 0),\
PASS_GROUPSIZE(WT_r0, 0),\
PASS_GROUPSIZE(beta_l, 0),\
PASS_GROUPSIZE(beta_wt, 0),\
PASS_GROUPSIZE(j_l, 0),\
PASS_GROUPSIZE(j_wt, 0),\
PASS_GROUPSIZE(q_wt, 0),\
PASS_GROUPSIZE(u_l, 0),\
PASS_GROUPSIZE(u_wt, 0),\
PASS_GROUPSIZE(u_x_wt, 0),\
PASS_GROUPSIZE(w_l, 0),\
PASS_GROUPSIZE(w_wt, 0),\
PASS_GROUPSIZE(x_wt, 0),\
PASS_GROUPSIZE(SHRE_alpha_e, 1),\
PASS_GROUPSIZE(SHRE_beta_e, 1),\
PASS_GROUPSIZE(SHRE_dalpha_e, 1),\
PASS_GROUPSIZE(SHRE_dbeta_e, 1),\
PASS_GROUPSIZE(SHRE_dgij_e, 1),\
PASS_GROUPSIZE(SHRE_dgit_e, 1),\
PASS_GROUPSIZE(SHRE_gij_e, 1),\
PASS_GROUPSIZE(SHRE_git_e, 1),\
PASS_GROUPSIZE(WT_r0, 1),\
PASS_GROUPSIZE(beta_l, 1),\
PASS_GROUPSIZE(beta_wt, 1),\
PASS_GROUPSIZE(j_l, 1),\
PASS_GROUPSIZE(j_wt, 1),\
PASS_GROUPSIZE(q_wt, 1),\
PASS_GROUPSIZE(u_l, 1),\
PASS_GROUPSIZE(u_wt, 1),\
PASS_GROUPSIZE(u_x_wt, 1),\
PASS_GROUPSIZE(w_l, 1),\
PASS_GROUPSIZE(w_wt, 1),\
PASS_GROUPSIZE(x_wt, 1),\
PASS_GROUPLEN(NULLSHREXTRACT, beta_l),\
PASS_GROUPLEN(NULLSHREXTRACT, beta_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, j_l),\
PASS_GROUPLEN(NULLSHREXTRACT, j_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, q_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, u_l),\
PASS_GROUPLEN(NULLSHREXTRACT, u_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, u_x_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, w_l),\
PASS_GROUPLEN(NULLSHREXTRACT, w_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, x_wt),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_alpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_beta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpalpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqalpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dralpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtalpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_gij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_git_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_r0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta_l, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(j_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(j_wt, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(j_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(q_wt, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(q_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_wt, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_x_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_l, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_wt, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(x_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x_wt, 1))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLEVOLVE_PUBLIC_FARGUMENTS \
INTEGER X0EG_mask&&\
INTEGER X0EQ_mask&&\
INTEGER X0EV_mask&&\
INTEGER X0NullGrParArrI&&\
INTEGER X0NullGrParArrR&&\
INTEGER X0RadCrd&&\
INTEGER X0StCmCrd&&\
INTEGER X0StCrd&&\
INTEGER X0cmplxcharfuncs_aux&&\
INTEGER X0cmplxcharfuncs_basic&&\
INTEGER X0guard_mask&&\
INTEGER X0null_mask&&\
INTEGER X0realcharfuncs&&\
INTEGER X0tmp_cgf&&\
INTEGER X0tmp_cgf3&&\
INTEGER X0tmp_rgf&&\
INTEGER X1EG_mask&&\
INTEGER X1EQ_mask&&\
INTEGER X1EV_mask&&\
INTEGER X1StCmCrd&&\
INTEGER X1StCrd&&\
INTEGER X1cmplxcharfuncs_aux&&\
INTEGER X1cmplxcharfuncs_basic&&\
INTEGER X1guard_mask&&\
INTEGER X1null_mask&&\
INTEGER X1realcharfuncs&&\
INTEGER X1tmp_cgf&&\
INTEGER X1tmp_cgf3&&\
INTEGER X1tmp_rgf&&\
INTEGER cmplxcharfuncs_aux_length&&\
INTEGER cmplxcharfuncs_basic_length&&\
INTEGER realcharfuncs_length&&\
CCTK_DECLARE(CCTK_INT,EG_mask,(X0EG_mask,X1EG_mask))&&\
CCTK_DECLARE(CCTK_INT,EQ_mask,(X0EQ_mask,X1EQ_mask))&&\
CCTK_DECLARE(CCTK_INT,EV_mask,(X0EV_mask,X1EV_mask))&&\
CCTK_DECLARE(CCTK_REAL,bcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_INT,boundary_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,boundary_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_REAL,courant_min_time,)&&\
CCTK_DECLARE(CCTK_REAL,courant_wave_speed,)&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_INT,evolution_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,evolution_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_REAL,evolution_radius,)&&\
CCTK_DECLARE(CCTK_INT,guard_mask,(X0guard_mask,X1guard_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_REAL,null_delta,(X0NullGrParArrR))&&\
CCTK_DECLARE(CCTK_REAL,null_dx,)&&\
CCTK_DECLARE(CCTK_INT,null_gsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lbnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_rb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_rbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_INT,null_ubnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_xb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_xbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_REAL,qsize,)&&\
CCTK_DECLARE(CCTK_REAL,stereo_p,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_pp,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_q,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfn,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfs,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,zeta,(X0StCmCrd,X1StCmCrd))&&\


#define NULLEVOLVE_PUBLIC_FARGUMENTS \
X0EG_mask,X0EQ_mask,X0EV_mask,X0NullGrParArrI,X0NullGrParArrR,X0RadCrd,X0StCmCrd,X0StCrd,X0cmplxcharfuncs_aux,X0cmplxcharfuncs_basic,X0guard_mask,X0null_mask,X0realcharfuncs,X0tmp_cgf,X0tmp_cgf3,X0tmp_rgf,X1EG_mask,X1EQ_mask,X1EV_mask,X1StCmCrd,X1StCrd,X1cmplxcharfuncs_aux,X1cmplxcharfuncs_basic,X1guard_mask,X1null_mask,X1realcharfuncs,X1tmp_cgf,X1tmp_cgf3,X1tmp_rgf,cmplxcharfuncs_aux_length,cmplxcharfuncs_basic_length,realcharfuncs_length,EG_mask,EQ_mask,EV_mask,bcn,bcn_p,bcs,bcs_p,boundary_maskn,boundary_masks,cbcn,cbcn_p,cbcs,cbcs_p,ckcn,ckcn_p,ckcs,ckcs_p,courant_min_time,courant_wave_speed,dxjcn,dxjcn_p,dxjcs,dxjcs_p,eth2jcn,eth2jcn_p,eth2jcs,eth2jcs_p,evolution_maskn,evolution_masks,evolution_radius,guard_mask,jcn,jcn_p,jcs,jcs_p,nucn,nucn_p,nucs,nucs_p,null_delta,null_dx,null_gsh,null_lbnd,null_lsh,null_rb,null_rbh,null_ubnd,null_xb,null_xbh,qcn,qcn_p,qcs,qcs_p,qsize,stereo_p,stereo_pp,stereo_q,tmp_cgfn,tmp_cgfn1,tmp_cgfn2,tmp_cgfn3,tmp_cgfs,tmp_cgfs1,tmp_cgfs2,tmp_cgfs3,tmp_rgfn,tmp_rgfs,ucn,ucn_p,ucs,ucs_p,wcn,wcn_p,wcs,wcs_p,zeta

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLEVOLVE_PUBLIC_CARGUMENTS \
static int cctki_vi_EG_mask = -100; \
if (cctki_vi_EG_mask == -100) cctki_vi_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EG_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EG_mask)); \
static int cctki_vi_EQ_mask = -100; \
if (cctki_vi_EQ_mask == -100) cctki_vi_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EQ_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EQ_mask)); \
static int cctki_vi_EV_mask = -100; \
if (cctki_vi_EV_mask == -100) cctki_vi_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EV_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EV_mask)); \
static int cctki_vi_bcn = -100; \
if (cctki_vi_bcn == -100) cctki_vi_bcn = CCTK_VarIndex("NULLVARS::bcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcn)); \
static int cctki_vi_bcs = -100; \
if (cctki_vi_bcs == -100) cctki_vi_bcs = CCTK_VarIndex("NULLVARS::bcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcs)); \
static int cctki_vi_boundary_maskn = -100; \
if (cctki_vi_boundary_maskn == -100) cctki_vi_boundary_maskn = CCTK_VarIndex("NULLVARS::boundary_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_maskn)); \
static int cctki_vi_boundary_masks = -100; \
if (cctki_vi_boundary_masks == -100) cctki_vi_boundary_masks = CCTK_VarIndex("NULLVARS::boundary_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_masks)); \
static int cctki_vi_cbcn = -100; \
if (cctki_vi_cbcn == -100) cctki_vi_cbcn = CCTK_VarIndex("NULLVARS::cbcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcn)); \
static int cctki_vi_cbcs = -100; \
if (cctki_vi_cbcs == -100) cctki_vi_cbcs = CCTK_VarIndex("NULLVARS::cbcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcs)); \
static int cctki_vi_ckcn = -100; \
if (cctki_vi_ckcn == -100) cctki_vi_ckcn = CCTK_VarIndex("NULLVARS::ckcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcn)); \
static int cctki_vi_ckcs = -100; \
if (cctki_vi_ckcs == -100) cctki_vi_ckcs = CCTK_VarIndex("NULLVARS::ckcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcs)); \
static int cctki_vi_courant_min_time = -100; \
if (cctki_vi_courant_min_time == -100) cctki_vi_courant_min_time = CCTK_VarIndex("TIME::courant_min_time"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, courant_min_time, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_courant_min_time)); \
static int cctki_vi_courant_wave_speed = -100; \
if (cctki_vi_courant_wave_speed == -100) cctki_vi_courant_wave_speed = CCTK_VarIndex("TIME::courant_wave_speed"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, courant_wave_speed, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_courant_wave_speed)); \
static int cctki_vi_dxjcn = -100; \
if (cctki_vi_dxjcn == -100) cctki_vi_dxjcn = CCTK_VarIndex("NULLVARS::dxjcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcn)); \
static int cctki_vi_dxjcs = -100; \
if (cctki_vi_dxjcs == -100) cctki_vi_dxjcs = CCTK_VarIndex("NULLVARS::dxjcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcs)); \
static int cctki_vi_eth2jcn = -100; \
if (cctki_vi_eth2jcn == -100) cctki_vi_eth2jcn = CCTK_VarIndex("NULLVARS::eth2jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcn)); \
static int cctki_vi_eth2jcs = -100; \
if (cctki_vi_eth2jcs == -100) cctki_vi_eth2jcs = CCTK_VarIndex("NULLVARS::eth2jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcs)); \
static int cctki_vi_evolution_maskn = -100; \
if (cctki_vi_evolution_maskn == -100) cctki_vi_evolution_maskn = CCTK_VarIndex("NULLVARS::evolution_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_maskn)); \
static int cctki_vi_evolution_masks = -100; \
if (cctki_vi_evolution_masks == -100) cctki_vi_evolution_masks = CCTK_VarIndex("NULLVARS::evolution_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_masks)); \
static int cctki_vi_evolution_radius = -100; \
if (cctki_vi_evolution_radius == -100) cctki_vi_evolution_radius = CCTK_VarIndex("NULLINTERP::evolution_radius"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, evolution_radius, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_radius)); \
static int cctki_vi_guard_mask = -100; \
if (cctki_vi_guard_mask == -100) cctki_vi_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, guard_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_guard_mask)); \
static int cctki_vi_jcn = -100; \
if (cctki_vi_jcn == -100) cctki_vi_jcn = CCTK_VarIndex("NULLVARS::jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcn)); \
static int cctki_vi_jcs = -100; \
if (cctki_vi_jcs == -100) cctki_vi_jcs = CCTK_VarIndex("NULLVARS::jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcs)); \
static int cctki_vi_nucn = -100; \
if (cctki_vi_nucn == -100) cctki_vi_nucn = CCTK_VarIndex("NULLVARS::nucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucn)); \
static int cctki_vi_nucs = -100; \
if (cctki_vi_nucs == -100) cctki_vi_nucs = CCTK_VarIndex("NULLVARS::nucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucs)); \
static int cctki_vi_null_delta = -100; \
if (cctki_vi_null_delta == -100) cctki_vi_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_delta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_delta)); \
static int cctki_vi_null_dx = -100; \
if (cctki_vi_null_dx == -100) cctki_vi_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_dx)); \
static int cctki_vi_null_gsh = -100; \
if (cctki_vi_null_gsh == -100) cctki_vi_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_gsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_gsh)); \
static int cctki_vi_null_lbnd = -100; \
if (cctki_vi_null_lbnd == -100) cctki_vi_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lbnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lbnd)); \
static int cctki_vi_null_lsh = -100; \
if (cctki_vi_null_lsh == -100) cctki_vi_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lsh)); \
static int cctki_vi_null_rb = -100; \
if (cctki_vi_null_rb == -100) cctki_vi_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rb)); \
static int cctki_vi_null_rbh = -100; \
if (cctki_vi_null_rbh == -100) cctki_vi_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rbh)); \
static int cctki_vi_null_ubnd = -100; \
if (cctki_vi_null_ubnd == -100) cctki_vi_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_ubnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_ubnd)); \
static int cctki_vi_null_xb = -100; \
if (cctki_vi_null_xb == -100) cctki_vi_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xb)); \
static int cctki_vi_null_xbh = -100; \
if (cctki_vi_null_xbh == -100) cctki_vi_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xbh)); \
static int cctki_vi_qcn = -100; \
if (cctki_vi_qcn == -100) cctki_vi_qcn = CCTK_VarIndex("NULLVARS::qcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcn)); \
static int cctki_vi_qcs = -100; \
if (cctki_vi_qcs == -100) cctki_vi_qcs = CCTK_VarIndex("NULLVARS::qcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcs)); \
static int cctki_vi_qsize = -100; \
if (cctki_vi_qsize == -100) cctki_vi_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, qsize, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qsize)); \
static int cctki_vi_stereo_p = -100; \
if (cctki_vi_stereo_p == -100) cctki_vi_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_p)); \
static int cctki_vi_stereo_pp = -100; \
if (cctki_vi_stereo_pp == -100) cctki_vi_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_pp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_pp)); \
static int cctki_vi_stereo_q = -100; \
if (cctki_vi_stereo_q == -100) cctki_vi_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_q, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_q)); \
static int cctki_vi_tmp_cgfn = -100; \
if (cctki_vi_tmp_cgfn == -100) cctki_vi_tmp_cgfn = CCTK_VarIndex("NULLINTERP::tmp_cgfn"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn)); \
static int cctki_vi_tmp_cgfn1 = -100; \
if (cctki_vi_tmp_cgfn1 == -100) cctki_vi_tmp_cgfn1 = CCTK_VarIndex("NULLINTERP::tmp_cgfn1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn1)); \
static int cctki_vi_tmp_cgfn2 = -100; \
if (cctki_vi_tmp_cgfn2 == -100) cctki_vi_tmp_cgfn2 = CCTK_VarIndex("NULLINTERP::tmp_cgfn2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn2)); \
static int cctki_vi_tmp_cgfn3 = -100; \
if (cctki_vi_tmp_cgfn3 == -100) cctki_vi_tmp_cgfn3 = CCTK_VarIndex("NULLINTERP::tmp_cgfn3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn3)); \
static int cctki_vi_tmp_cgfs = -100; \
if (cctki_vi_tmp_cgfs == -100) cctki_vi_tmp_cgfs = CCTK_VarIndex("NULLINTERP::tmp_cgfs"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs)); \
static int cctki_vi_tmp_cgfs1 = -100; \
if (cctki_vi_tmp_cgfs1 == -100) cctki_vi_tmp_cgfs1 = CCTK_VarIndex("NULLINTERP::tmp_cgfs1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs1)); \
static int cctki_vi_tmp_cgfs2 = -100; \
if (cctki_vi_tmp_cgfs2 == -100) cctki_vi_tmp_cgfs2 = CCTK_VarIndex("NULLINTERP::tmp_cgfs2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs2)); \
static int cctki_vi_tmp_cgfs3 = -100; \
if (cctki_vi_tmp_cgfs3 == -100) cctki_vi_tmp_cgfs3 = CCTK_VarIndex("NULLINTERP::tmp_cgfs3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs3)); \
static int cctki_vi_tmp_rgfn = -100; \
if (cctki_vi_tmp_rgfn == -100) cctki_vi_tmp_rgfn = CCTK_VarIndex("NULLINTERP::tmp_rgfn"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfn)); \
static int cctki_vi_tmp_rgfs = -100; \
if (cctki_vi_tmp_rgfs == -100) cctki_vi_tmp_rgfs = CCTK_VarIndex("NULLINTERP::tmp_rgfs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfs)); \
static int cctki_vi_ucn = -100; \
if (cctki_vi_ucn == -100) cctki_vi_ucn = CCTK_VarIndex("NULLVARS::ucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucn)); \
static int cctki_vi_ucs = -100; \
if (cctki_vi_ucs == -100) cctki_vi_ucs = CCTK_VarIndex("NULLVARS::ucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucs)); \
static int cctki_vi_wcn = -100; \
if (cctki_vi_wcn == -100) cctki_vi_wcn = CCTK_VarIndex("NULLVARS::wcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcn)); \
static int cctki_vi_wcs = -100; \
if (cctki_vi_wcs == -100) cctki_vi_wcs = CCTK_VarIndex("NULLVARS::wcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcs)); \
static int cctki_vi_zeta = -100; \
if (cctki_vi_zeta == -100) cctki_vi_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, zeta, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zeta));

#define DECLARE_NULLEVOLVE_PUBLIC_C2F \
static int CCTKARGNUM_EG_mask = -1; \
static int CCTKGROUPNUM_EG_mask = -1; \
static int CCTKARGNUM_EQ_mask = -1; \
static int CCTKGROUPNUM_EQ_mask = -1; \
static int CCTKARGNUM_EV_mask = -1; \
static int CCTKGROUPNUM_EV_mask = -1; \
static int CCTKARGNUM_bcn = -1; \
static int CCTKGROUPNUM_realcharfuncs = -1; \
static int CCTKARGNUM_bcs = -1; \
static int CCTKARGNUM_boundary_maskn = -1; \
static int CCTKGROUPNUM_null_mask = -1; \
static int CCTKARGNUM_boundary_masks = -1; \
static int CCTKARGNUM_cbcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_aux = -1; \
static int CCTKARGNUM_cbcs = -1; \
static int CCTKARGNUM_ckcn = -1; \
static int CCTKARGNUM_ckcs = -1; \
static int CCTKARGNUM_courant_min_time = -1; \
static int CCTKGROUPNUM_speedvars = -1; \
static int CCTKARGNUM_courant_wave_speed = -1; \
static int CCTKARGNUM_dxjcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_basic = -1; \
static int CCTKARGNUM_dxjcs = -1; \
static int CCTKARGNUM_eth2jcn = -1; \
static int CCTKARGNUM_eth2jcs = -1; \
static int CCTKARGNUM_evolution_maskn = -1; \
static int CCTKARGNUM_evolution_masks = -1; \
static int CCTKARGNUM_evolution_radius = -1; \
static int CCTKGROUPNUM_evolution_radius = -1; \
static int CCTKARGNUM_guard_mask = -1; \
static int CCTKGROUPNUM_guard_mask = -1; \
static int CCTKARGNUM_jcn = -1; \
static int CCTKARGNUM_jcs = -1; \
static int CCTKARGNUM_nucn = -1; \
static int CCTKARGNUM_nucs = -1; \
static int CCTKARGNUM_null_delta = -1; \
static int CCTKGROUPNUM_NullGrParArrR = -1; \
static int CCTKARGNUM_null_dx = -1; \
static int CCTKGROUPNUM_NullSclr = -1; \
static int CCTKARGNUM_null_gsh = -1; \
static int CCTKGROUPNUM_NullGrParArrI = -1; \
static int CCTKARGNUM_null_lbnd = -1; \
static int CCTKARGNUM_null_lsh = -1; \
static int CCTKARGNUM_null_rb = -1; \
static int CCTKGROUPNUM_RadCrd = -1; \
static int CCTKARGNUM_null_rbh = -1; \
static int CCTKARGNUM_null_ubnd = -1; \
static int CCTKARGNUM_null_xb = -1; \
static int CCTKARGNUM_null_xbh = -1; \
static int CCTKARGNUM_qcn = -1; \
static int CCTKARGNUM_qcs = -1; \
static int CCTKARGNUM_qsize = -1; \
static int CCTKARGNUM_stereo_p = -1; \
static int CCTKGROUPNUM_StCrd = -1; \
static int CCTKARGNUM_stereo_pp = -1; \
static int CCTKARGNUM_stereo_q = -1; \
static int CCTKARGNUM_tmp_cgfn = -1; \
static int CCTKGROUPNUM_tmp_cgf = -1; \
static int CCTKARGNUM_tmp_cgfn1 = -1; \
static int CCTKGROUPNUM_tmp_cgf3 = -1; \
static int CCTKARGNUM_tmp_cgfn2 = -1; \
static int CCTKARGNUM_tmp_cgfn3 = -1; \
static int CCTKARGNUM_tmp_cgfs = -1; \
static int CCTKARGNUM_tmp_cgfs1 = -1; \
static int CCTKARGNUM_tmp_cgfs2 = -1; \
static int CCTKARGNUM_tmp_cgfs3 = -1; \
static int CCTKARGNUM_tmp_rgfn = -1; \
static int CCTKGROUPNUM_tmp_rgf = -1; \
static int CCTKARGNUM_tmp_rgfs = -1; \
static int CCTKARGNUM_ucn = -1; \
static int CCTKARGNUM_ucs = -1; \
static int CCTKARGNUM_wcn = -1; \
static int CCTKARGNUM_wcs = -1; \
static int CCTKARGNUM_zeta = -1; \
static int CCTKGROUPNUM_StCmCrd = -1;

#define INITIALISE_NULLEVOLVE_PUBLIC_C2F \
if(CCTKARGNUM_EG_mask == -1) CCTKARGNUM_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
if(CCTKGROUPNUM_EG_mask == -1) CCTKGROUPNUM_EG_mask = CCTK_GroupIndex("NULLGRID::EG_mask"); \
if(CCTKARGNUM_EQ_mask == -1) CCTKARGNUM_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
if(CCTKGROUPNUM_EQ_mask == -1) CCTKGROUPNUM_EQ_mask = CCTK_GroupIndex("NULLGRID::EQ_mask"); \
if(CCTKARGNUM_EV_mask == -1) CCTKARGNUM_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
if(CCTKGROUPNUM_EV_mask == -1) CCTKGROUPNUM_EV_mask = CCTK_GroupIndex("NULLGRID::EV_mask"); \
if(CCTKARGNUM_bcn == -1) CCTKARGNUM_bcn = CCTK_VarIndex("NULLVARS::bcn[0]"); \
if(CCTKGROUPNUM_realcharfuncs == -1) CCTKGROUPNUM_realcharfuncs = CCTK_GroupIndex("NULLVARS::realcharfuncs"); \
if(CCTKARGNUM_bcs == -1) CCTKARGNUM_bcs = CCTK_VarIndex("NULLVARS::bcs[0]"); \
if(CCTKARGNUM_boundary_maskn == -1) CCTKARGNUM_boundary_maskn = CCTK_VarIndex("NULLVARS::boundary_maskn"); \
if(CCTKGROUPNUM_null_mask == -1) CCTKGROUPNUM_null_mask = CCTK_GroupIndex("NULLVARS::null_mask"); \
if(CCTKARGNUM_boundary_masks == -1) CCTKARGNUM_boundary_masks = CCTK_VarIndex("NULLVARS::boundary_masks"); \
if(CCTKARGNUM_cbcn == -1) CCTKARGNUM_cbcn = CCTK_VarIndex("NULLVARS::cbcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_aux == -1) CCTKGROUPNUM_cmplxcharfuncs_aux = CCTK_GroupIndex("NULLVARS::cmplxcharfuncs_aux"); \
if(CCTKARGNUM_cbcs == -1) CCTKARGNUM_cbcs = CCTK_VarIndex("NULLVARS::cbcs[0]"); \
if(CCTKARGNUM_ckcn == -1) CCTKARGNUM_ckcn = CCTK_VarIndex("NULLVARS::ckcn[0]"); \
if(CCTKARGNUM_ckcs == -1) CCTKARGNUM_ckcs = CCTK_VarIndex("NULLVARS::ckcs[0]"); \
if(CCTKARGNUM_courant_min_time == -1) CCTKARGNUM_courant_min_time = CCTK_VarIndex("TIME::courant_min_time"); \
if(CCTKGROUPNUM_speedvars == -1) CCTKGROUPNUM_speedvars = CCTK_GroupIndex("TIME::speedvars"); \
if(CCTKARGNUM_courant_wave_speed == -1) CCTKARGNUM_courant_wave_speed = CCTK_VarIndex("TIME::courant_wave_speed"); \
if(CCTKARGNUM_dxjcn == -1) CCTKARGNUM_dxjcn = CCTK_VarIndex("NULLVARS::dxjcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_basic == -1) CCTKGROUPNUM_cmplxcharfuncs_basic = CCTK_GroupIndex("NULLVARS::cmplxcharfuncs_basic"); \
if(CCTKARGNUM_dxjcs == -1) CCTKARGNUM_dxjcs = CCTK_VarIndex("NULLVARS::dxjcs[0]"); \
if(CCTKARGNUM_eth2jcn == -1) CCTKARGNUM_eth2jcn = CCTK_VarIndex("NULLVARS::eth2jcn[0]"); \
if(CCTKARGNUM_eth2jcs == -1) CCTKARGNUM_eth2jcs = CCTK_VarIndex("NULLVARS::eth2jcs[0]"); \
if(CCTKARGNUM_evolution_maskn == -1) CCTKARGNUM_evolution_maskn = CCTK_VarIndex("NULLVARS::evolution_maskn"); \
if(CCTKARGNUM_evolution_masks == -1) CCTKARGNUM_evolution_masks = CCTK_VarIndex("NULLVARS::evolution_masks"); \
if(CCTKARGNUM_evolution_radius == -1) CCTKARGNUM_evolution_radius = CCTK_VarIndex("NULLINTERP::evolution_radius"); \
if(CCTKGROUPNUM_evolution_radius == -1) CCTKGROUPNUM_evolution_radius = CCTK_GroupIndex("NULLINTERP::evolution_radius"); \
if(CCTKARGNUM_guard_mask == -1) CCTKARGNUM_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
if(CCTKGROUPNUM_guard_mask == -1) CCTKGROUPNUM_guard_mask = CCTK_GroupIndex("NULLGRID::guard_mask"); \
if(CCTKARGNUM_jcn == -1) CCTKARGNUM_jcn = CCTK_VarIndex("NULLVARS::jcn[0]"); \
if(CCTKARGNUM_jcs == -1) CCTKARGNUM_jcs = CCTK_VarIndex("NULLVARS::jcs[0]"); \
if(CCTKARGNUM_nucn == -1) CCTKARGNUM_nucn = CCTK_VarIndex("NULLVARS::nucn[0]"); \
if(CCTKARGNUM_nucs == -1) CCTKARGNUM_nucs = CCTK_VarIndex("NULLVARS::nucs[0]"); \
if(CCTKARGNUM_null_delta == -1) CCTKARGNUM_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
if(CCTKGROUPNUM_NullGrParArrR == -1) CCTKGROUPNUM_NullGrParArrR = CCTK_GroupIndex("NULLGRID::NullGrParArrR"); \
if(CCTKARGNUM_null_dx == -1) CCTKARGNUM_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
if(CCTKGROUPNUM_NullSclr == -1) CCTKGROUPNUM_NullSclr = CCTK_GroupIndex("NULLGRID::NullSclr"); \
if(CCTKARGNUM_null_gsh == -1) CCTKARGNUM_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
if(CCTKGROUPNUM_NullGrParArrI == -1) CCTKGROUPNUM_NullGrParArrI = CCTK_GroupIndex("NULLGRID::NullGrParArrI"); \
if(CCTKARGNUM_null_lbnd == -1) CCTKARGNUM_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
if(CCTKARGNUM_null_lsh == -1) CCTKARGNUM_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
if(CCTKARGNUM_null_rb == -1) CCTKARGNUM_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
if(CCTKGROUPNUM_RadCrd == -1) CCTKGROUPNUM_RadCrd = CCTK_GroupIndex("NULLGRID::RadCrd"); \
if(CCTKARGNUM_null_rbh == -1) CCTKARGNUM_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
if(CCTKARGNUM_null_ubnd == -1) CCTKARGNUM_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
if(CCTKARGNUM_null_xb == -1) CCTKARGNUM_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
if(CCTKARGNUM_null_xbh == -1) CCTKARGNUM_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
if(CCTKARGNUM_qcn == -1) CCTKARGNUM_qcn = CCTK_VarIndex("NULLVARS::qcn[0]"); \
if(CCTKARGNUM_qcs == -1) CCTKARGNUM_qcs = CCTK_VarIndex("NULLVARS::qcs[0]"); \
if(CCTKARGNUM_qsize == -1) CCTKARGNUM_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
if(CCTKARGNUM_stereo_p == -1) CCTKARGNUM_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
if(CCTKGROUPNUM_StCrd == -1) CCTKGROUPNUM_StCrd = CCTK_GroupIndex("NULLGRID::StCrd"); \
if(CCTKARGNUM_stereo_pp == -1) CCTKARGNUM_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
if(CCTKARGNUM_stereo_q == -1) CCTKARGNUM_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
if(CCTKARGNUM_tmp_cgfn == -1) CCTKARGNUM_tmp_cgfn = CCTK_VarIndex("NULLINTERP::tmp_cgfn"); \
if(CCTKGROUPNUM_tmp_cgf == -1) CCTKGROUPNUM_tmp_cgf = CCTK_GroupIndex("NULLINTERP::tmp_cgf"); \
if(CCTKARGNUM_tmp_cgfn1 == -1) CCTKARGNUM_tmp_cgfn1 = CCTK_VarIndex("NULLINTERP::tmp_cgfn1"); \
if(CCTKGROUPNUM_tmp_cgf3 == -1) CCTKGROUPNUM_tmp_cgf3 = CCTK_GroupIndex("NULLINTERP::tmp_cgf3"); \
if(CCTKARGNUM_tmp_cgfn2 == -1) CCTKARGNUM_tmp_cgfn2 = CCTK_VarIndex("NULLINTERP::tmp_cgfn2"); \
if(CCTKARGNUM_tmp_cgfn3 == -1) CCTKARGNUM_tmp_cgfn3 = CCTK_VarIndex("NULLINTERP::tmp_cgfn3"); \
if(CCTKARGNUM_tmp_cgfs == -1) CCTKARGNUM_tmp_cgfs = CCTK_VarIndex("NULLINTERP::tmp_cgfs"); \
if(CCTKARGNUM_tmp_cgfs1 == -1) CCTKARGNUM_tmp_cgfs1 = CCTK_VarIndex("NULLINTERP::tmp_cgfs1"); \
if(CCTKARGNUM_tmp_cgfs2 == -1) CCTKARGNUM_tmp_cgfs2 = CCTK_VarIndex("NULLINTERP::tmp_cgfs2"); \
if(CCTKARGNUM_tmp_cgfs3 == -1) CCTKARGNUM_tmp_cgfs3 = CCTK_VarIndex("NULLINTERP::tmp_cgfs3"); \
if(CCTKARGNUM_tmp_rgfn == -1) CCTKARGNUM_tmp_rgfn = CCTK_VarIndex("NULLINTERP::tmp_rgfn"); \
if(CCTKGROUPNUM_tmp_rgf == -1) CCTKGROUPNUM_tmp_rgf = CCTK_GroupIndex("NULLINTERP::tmp_rgf"); \
if(CCTKARGNUM_tmp_rgfs == -1) CCTKARGNUM_tmp_rgfs = CCTK_VarIndex("NULLINTERP::tmp_rgfs"); \
if(CCTKARGNUM_ucn == -1) CCTKARGNUM_ucn = CCTK_VarIndex("NULLVARS::ucn[0]"); \
if(CCTKARGNUM_ucs == -1) CCTKARGNUM_ucs = CCTK_VarIndex("NULLVARS::ucs[0]"); \
if(CCTKARGNUM_wcn == -1) CCTKARGNUM_wcn = CCTK_VarIndex("NULLVARS::wcn[0]"); \
if(CCTKARGNUM_wcs == -1) CCTKARGNUM_wcs = CCTK_VarIndex("NULLVARS::wcs[0]"); \
if(CCTKARGNUM_zeta == -1) CCTKARGNUM_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
if(CCTKGROUPNUM_StCmCrd == -1) CCTKGROUPNUM_StCmCrd = CCTK_GroupIndex("NULLGRID::StCmCrd");

#define NULLEVOLVE_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *

#define PASS_NULLEVOLVE_PUBLIC_C2F(GH) \
PASS_GROUPSIZE(EG_mask, 0),\
PASS_GROUPSIZE(EQ_mask, 0),\
PASS_GROUPSIZE(EV_mask, 0),\
PASS_GROUPSIZE(NullGrParArrI, 0),\
PASS_GROUPSIZE(NullGrParArrR, 0),\
PASS_GROUPSIZE(RadCrd, 0),\
PASS_GROUPSIZE(StCmCrd, 0),\
PASS_GROUPSIZE(StCrd, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_aux, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 0),\
PASS_GROUPSIZE(guard_mask, 0),\
PASS_GROUPSIZE(null_mask, 0),\
PASS_GROUPSIZE(realcharfuncs, 0),\
PASS_GROUPSIZE(tmp_cgf, 0),\
PASS_GROUPSIZE(tmp_cgf3, 0),\
PASS_GROUPSIZE(tmp_rgf, 0),\
PASS_GROUPSIZE(EG_mask, 1),\
PASS_GROUPSIZE(EQ_mask, 1),\
PASS_GROUPSIZE(EV_mask, 1),\
PASS_GROUPSIZE(StCmCrd, 1),\
PASS_GROUPSIZE(StCrd, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_aux, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 1),\
PASS_GROUPSIZE(guard_mask, 1),\
PASS_GROUPSIZE(null_mask, 1),\
PASS_GROUPSIZE(realcharfuncs, 1),\
PASS_GROUPSIZE(tmp_cgf, 1),\
PASS_GROUPSIZE(tmp_cgf3, 1),\
PASS_GROUPSIZE(tmp_rgf, 1),\
PASS_GROUPLEN(NULLVARS, cmplxcharfuncs_aux),\
PASS_GROUPLEN(NULLVARS, cmplxcharfuncs_basic),\
PASS_GROUPLEN(NULLVARS, realcharfuncs),\
(CCTK_INT *)(PASS_REFERENCE(EG_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EQ_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EV_mask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_masks, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(courant_min_time, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(courant_wave_speed, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_masks, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(evolution_radius, 0)),\
(CCTK_INT *)(PASS_REFERENCE(guard_mask, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(null_delta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_dx, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_gsh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lbnd, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lsh, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rbh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_ubnd, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xbh, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(qsize, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_pp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_q, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn3, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(zeta, 0))

#endif /* CCODE */

#ifdef FCODE
#define NULLEVOLVE_FARGUMENTS _CCTK_FARGUMENTS, NULLEVOLVE_PRIVATE_FARGUMENTS, NULLEVOLVE_PROTECTED_FARGUMENTS, NULLEVOLVE_PUBLIC_FARGUMENTS

#define DECLARE_NULLEVOLVE_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_NULLEVOLVE_PRIVATE_FARGUMENTS DECLARE_NULLEVOLVE_PROTECTED_FARGUMENTS DECLARE_NULLEVOLVE_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLEVOLVE_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_NULLEVOLVE_PRIVATE_CARGUMENTS DECLARE_NULLEVOLVE_PROTECTED_CARGUMENTS DECLARE_NULLEVOLVE_PUBLIC_CARGUMENTS

#define NULLEVOLVE_C2F_PROTO _CCTK_C2F_PROTO, NULLEVOLVE_PRIVATE_C2F_PROTO, NULLEVOLVE_PROTECTED_C2F_PROTO, NULLEVOLVE_PUBLIC_C2F_PROTO

#define PASS_NULLEVOLVE_C2F(GH) _PASS_CCTK_C2F(GH), PASS_NULLEVOLVE_PRIVATE_C2F(GH), PASS_NULLEVOLVE_PROTECTED_C2F(GH), PASS_NULLEVOLVE_PUBLIC_C2F(GH)

#define DECLARE_NULLEVOLVE_C2F _DECLARE_CCTK_C2F DECLARE_NULLEVOLVE_PRIVATE_C2F DECLARE_NULLEVOLVE_PROTECTED_C2F DECLARE_NULLEVOLVE_PUBLIC_C2F

#define INITIALISE_NULLEVOLVE_C2F _INITIALISE_CCTK_C2F INITIALISE_NULLEVOLVE_PRIVATE_C2F INITIALISE_NULLEVOLVE_PROTECTED_C2F INITIALISE_NULLEVOLVE_PUBLIC_C2F

#define NULLEVOLVE_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
