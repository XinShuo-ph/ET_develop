/*@@
   @header  DemoInterp_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn DemoInterp
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_DEMOINTERP_PRIVATE_FARGUMENTS \
INTEGER X0compinterps&&\
INTEGER X0coordarrays&&\
INTEGER X0realinterps&&\
CCTK_DECLARE(CCTK_COMPLEX,compgf1,(cctk_ash1))&&\
CCTK_DECLARE(CCTK_COMPLEX,compgf2,(cctk_ash1,cctk_ash2))&&\
CCTK_DECLARE(CCTK_COMPLEX,compgf3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_COMPLEX,compinterp1,(X0compinterps))&&\
CCTK_DECLARE(CCTK_COMPLEX,compinterp2,(X0compinterps))&&\
CCTK_DECLARE(CCTK_COMPLEX,compinterp3,(X0compinterps))&&\
CCTK_DECLARE(CCTK_REAL,realgf1,(cctk_ash1))&&\
CCTK_DECLARE(CCTK_REAL,realgf2,(cctk_ash1,cctk_ash2))&&\
CCTK_DECLARE(CCTK_REAL,realgf3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,realinterp1,(X0realinterps))&&\
CCTK_DECLARE(CCTK_REAL,realinterp2,(X0realinterps))&&\
CCTK_DECLARE(CCTK_REAL,realinterp3,(X0realinterps))&&\
CCTK_DECLARE(CCTK_REAL,xcoord,(X0coordarrays))&&\
CCTK_DECLARE(CCTK_REAL,ycoord,(X0coordarrays))&&\
CCTK_DECLARE(CCTK_REAL,zcoord,(X0coordarrays))&&\


#define DEMOINTERP_PRIVATE_FARGUMENTS \
X0compinterps,X0coordarrays,X0realinterps,compgf1,compgf2,compgf3,compinterp1,compinterp2,compinterp3,realgf1,realgf2,realgf3,realinterp1,realinterp2,realinterp3,xcoord,ycoord,zcoord

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_DEMOINTERP_PRIVATE_CARGUMENTS \
static int cctki_vi_compgf1 = -100; \
if (cctki_vi_compgf1 == -100) cctki_vi_compgf1 = CCTK_VarIndex("DemoInterp::compgf1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, compgf1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_compgf1)); \
static int cctki_vi_compgf2 = -100; \
if (cctki_vi_compgf2 == -100) cctki_vi_compgf2 = CCTK_VarIndex("DemoInterp::compgf2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, compgf2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_compgf2)); \
static int cctki_vi_compgf3 = -100; \
if (cctki_vi_compgf3 == -100) cctki_vi_compgf3 = CCTK_VarIndex("DemoInterp::compgf3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, compgf3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_compgf3)); \
static int cctki_vi_compinterp1 = -100; \
if (cctki_vi_compinterp1 == -100) cctki_vi_compinterp1 = CCTK_VarIndex("DemoInterp::compinterp1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, compinterp1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_compinterp1)); \
static int cctki_vi_compinterp2 = -100; \
if (cctki_vi_compinterp2 == -100) cctki_vi_compinterp2 = CCTK_VarIndex("DemoInterp::compinterp2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, compinterp2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_compinterp2)); \
static int cctki_vi_compinterp3 = -100; \
if (cctki_vi_compinterp3 == -100) cctki_vi_compinterp3 = CCTK_VarIndex("DemoInterp::compinterp3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, compinterp3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_compinterp3)); \
static int cctki_vi_realgf1 = -100; \
if (cctki_vi_realgf1 == -100) cctki_vi_realgf1 = CCTK_VarIndex("DemoInterp::realgf1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, realgf1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_realgf1)); \
static int cctki_vi_realgf2 = -100; \
if (cctki_vi_realgf2 == -100) cctki_vi_realgf2 = CCTK_VarIndex("DemoInterp::realgf2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, realgf2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_realgf2)); \
static int cctki_vi_realgf3 = -100; \
if (cctki_vi_realgf3 == -100) cctki_vi_realgf3 = CCTK_VarIndex("DemoInterp::realgf3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, realgf3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_realgf3)); \
static int cctki_vi_realinterp1 = -100; \
if (cctki_vi_realinterp1 == -100) cctki_vi_realinterp1 = CCTK_VarIndex("DemoInterp::realinterp1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, realinterp1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_realinterp1)); \
static int cctki_vi_realinterp2 = -100; \
if (cctki_vi_realinterp2 == -100) cctki_vi_realinterp2 = CCTK_VarIndex("DemoInterp::realinterp2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, realinterp2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_realinterp2)); \
static int cctki_vi_realinterp3 = -100; \
if (cctki_vi_realinterp3 == -100) cctki_vi_realinterp3 = CCTK_VarIndex("DemoInterp::realinterp3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, realinterp3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_realinterp3)); \
static int cctki_vi_xcoord = -100; \
if (cctki_vi_xcoord == -100) cctki_vi_xcoord = CCTK_VarIndex("DemoInterp::xcoord"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, xcoord, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_xcoord)); \
static int cctki_vi_ycoord = -100; \
if (cctki_vi_ycoord == -100) cctki_vi_ycoord = CCTK_VarIndex("DemoInterp::ycoord"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ycoord, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ycoord)); \
static int cctki_vi_zcoord = -100; \
if (cctki_vi_zcoord == -100) cctki_vi_zcoord = CCTK_VarIndex("DemoInterp::zcoord"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, zcoord, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zcoord));

#define DECLARE_DEMOINTERP_PRIVATE_C2F \
static int CCTKARGNUM_compgf1 = -1; \
static int CCTKGROUPNUM_comp1dvars = -1; \
static int CCTKARGNUM_compgf2 = -1; \
static int CCTKGROUPNUM_comp2dvars = -1; \
static int CCTKARGNUM_compgf3 = -1; \
static int CCTKGROUPNUM_comp3dvars = -1; \
static int CCTKARGNUM_compinterp1 = -1; \
static int CCTKGROUPNUM_compinterps = -1; \
static int CCTKARGNUM_compinterp2 = -1; \
static int CCTKARGNUM_compinterp3 = -1; \
static int CCTKARGNUM_realgf1 = -1; \
static int CCTKGROUPNUM_real1dvars = -1; \
static int CCTKARGNUM_realgf2 = -1; \
static int CCTKGROUPNUM_real2dvars = -1; \
static int CCTKARGNUM_realgf3 = -1; \
static int CCTKGROUPNUM_real3dvars = -1; \
static int CCTKARGNUM_realinterp1 = -1; \
static int CCTKGROUPNUM_realinterps = -1; \
static int CCTKARGNUM_realinterp2 = -1; \
static int CCTKARGNUM_realinterp3 = -1; \
static int CCTKARGNUM_xcoord = -1; \
static int CCTKGROUPNUM_coordarrays = -1; \
static int CCTKARGNUM_ycoord = -1; \
static int CCTKARGNUM_zcoord = -1;

#define INITIALISE_DEMOINTERP_PRIVATE_C2F \
if(CCTKARGNUM_compgf1 == -1) CCTKARGNUM_compgf1 = CCTK_VarIndex("DemoInterp::compgf1"); \
if(CCTKGROUPNUM_comp1dvars == -1) CCTKGROUPNUM_comp1dvars = CCTK_GroupIndex("DemoInterp::comp1dvars"); \
if(CCTKARGNUM_compgf2 == -1) CCTKARGNUM_compgf2 = CCTK_VarIndex("DemoInterp::compgf2"); \
if(CCTKGROUPNUM_comp2dvars == -1) CCTKGROUPNUM_comp2dvars = CCTK_GroupIndex("DemoInterp::comp2dvars"); \
if(CCTKARGNUM_compgf3 == -1) CCTKARGNUM_compgf3 = CCTK_VarIndex("DemoInterp::compgf3"); \
if(CCTKGROUPNUM_comp3dvars == -1) CCTKGROUPNUM_comp3dvars = CCTK_GroupIndex("DemoInterp::comp3dvars"); \
if(CCTKARGNUM_compinterp1 == -1) CCTKARGNUM_compinterp1 = CCTK_VarIndex("DemoInterp::compinterp1"); \
if(CCTKGROUPNUM_compinterps == -1) CCTKGROUPNUM_compinterps = CCTK_GroupIndex("DemoInterp::compinterps"); \
if(CCTKARGNUM_compinterp2 == -1) CCTKARGNUM_compinterp2 = CCTK_VarIndex("DemoInterp::compinterp2"); \
if(CCTKARGNUM_compinterp3 == -1) CCTKARGNUM_compinterp3 = CCTK_VarIndex("DemoInterp::compinterp3"); \
if(CCTKARGNUM_realgf1 == -1) CCTKARGNUM_realgf1 = CCTK_VarIndex("DemoInterp::realgf1"); \
if(CCTKGROUPNUM_real1dvars == -1) CCTKGROUPNUM_real1dvars = CCTK_GroupIndex("DemoInterp::real1dvars"); \
if(CCTKARGNUM_realgf2 == -1) CCTKARGNUM_realgf2 = CCTK_VarIndex("DemoInterp::realgf2"); \
if(CCTKGROUPNUM_real2dvars == -1) CCTKGROUPNUM_real2dvars = CCTK_GroupIndex("DemoInterp::real2dvars"); \
if(CCTKARGNUM_realgf3 == -1) CCTKARGNUM_realgf3 = CCTK_VarIndex("DemoInterp::realgf3"); \
if(CCTKGROUPNUM_real3dvars == -1) CCTKGROUPNUM_real3dvars = CCTK_GroupIndex("DemoInterp::real3dvars"); \
if(CCTKARGNUM_realinterp1 == -1) CCTKARGNUM_realinterp1 = CCTK_VarIndex("DemoInterp::realinterp1"); \
if(CCTKGROUPNUM_realinterps == -1) CCTKGROUPNUM_realinterps = CCTK_GroupIndex("DemoInterp::realinterps"); \
if(CCTKARGNUM_realinterp2 == -1) CCTKARGNUM_realinterp2 = CCTK_VarIndex("DemoInterp::realinterp2"); \
if(CCTKARGNUM_realinterp3 == -1) CCTKARGNUM_realinterp3 = CCTK_VarIndex("DemoInterp::realinterp3"); \
if(CCTKARGNUM_xcoord == -1) CCTKARGNUM_xcoord = CCTK_VarIndex("DemoInterp::xcoord"); \
if(CCTKGROUPNUM_coordarrays == -1) CCTKGROUPNUM_coordarrays = CCTK_GroupIndex("DemoInterp::coordarrays"); \
if(CCTKARGNUM_ycoord == -1) CCTKARGNUM_ycoord = CCTK_VarIndex("DemoInterp::ycoord"); \
if(CCTKARGNUM_zcoord == -1) CCTKARGNUM_zcoord = CCTK_VarIndex("DemoInterp::zcoord");

#define DEMOINTERP_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_DEMOINTERP_PRIVATE_C2F(GH) \
PASS_GROUPSIZE(compinterps, 0),\
PASS_GROUPSIZE(coordarrays, 0),\
PASS_GROUPSIZE(realinterps, 0),\
(CCTK_COMPLEX *)(PASS_REFERENCE(compgf1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(compgf2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(compgf3, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(compinterp1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(compinterp2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(compinterp3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(realgf1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(realgf2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(realgf3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(realinterp1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(realinterp2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(realinterp3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(xcoord, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ycoord, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(zcoord, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_DEMOINTERP_PROTECTED_FARGUMENTS \


#define DEMOINTERP_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_DEMOINTERP_PROTECTED_CARGUMENTS \


#define DECLARE_DEMOINTERP_PROTECTED_C2F \


#define INITIALISE_DEMOINTERP_PROTECTED_C2F \


#define DEMOINTERP_PROTECTED_C2F_PROTO \


#define PASS_DEMOINTERP_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_DEMOINTERP_PUBLIC_FARGUMENTS \


#define DEMOINTERP_PUBLIC_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_DEMOINTERP_PUBLIC_CARGUMENTS \


#define DECLARE_DEMOINTERP_PUBLIC_C2F \


#define INITIALISE_DEMOINTERP_PUBLIC_C2F \


#define DEMOINTERP_PUBLIC_C2F_PROTO \


#define PASS_DEMOINTERP_PUBLIC_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DEMOINTERP_FARGUMENTS _CCTK_FARGUMENTS, DEMOINTERP_PRIVATE_FARGUMENTS

#define DECLARE_DEMOINTERP_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_DEMOINTERP_PRIVATE_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_DEMOINTERP_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_DEMOINTERP_PRIVATE_CARGUMENTS

#define DEMOINTERP_C2F_PROTO _CCTK_C2F_PROTO, DEMOINTERP_PRIVATE_C2F_PROTO

#define PASS_DEMOINTERP_C2F(GH) _PASS_CCTK_C2F(GH), PASS_DEMOINTERP_PRIVATE_C2F(GH)

#define DECLARE_DEMOINTERP_C2F _DECLARE_CCTK_C2F DECLARE_DEMOINTERP_PRIVATE_C2F

#define INITIALISE_DEMOINTERP_C2F _INITIALISE_CCTK_C2F INITIALISE_DEMOINTERP_PRIVATE_C2F

#define DEMOINTERP_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
