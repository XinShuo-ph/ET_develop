/*@@
   @header  NaNChecker_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn NaNChecker
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_NANCHECKER_PRIVATE_FARGUMENTS \
CCTK_DECLARE(CCTK_INT,NaNmask,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,NaNsFound,)&&\


#define NANCHECKER_PRIVATE_FARGUMENTS \
NaNmask,NaNsFound

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NANCHECKER_PRIVATE_CARGUMENTS \
static int cctki_vi_NaNmask = -100; \
if (cctki_vi_NaNmask == -100) cctki_vi_NaNmask = CCTK_VarIndex("NaNChecker::NaNmask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, NaNmask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NaNmask)); \
static int cctki_vi_NaNsFound = -100; \
if (cctki_vi_NaNsFound == -100) cctki_vi_NaNsFound = CCTK_VarIndex("NaNChecker::NaNsFound"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, NaNsFound, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NaNsFound));

#define DECLARE_NANCHECKER_PRIVATE_C2F \
static int CCTKARGNUM_NaNmask = -1; \
static int CCTKGROUPNUM_NaNmask = -1; \
static int CCTKARGNUM_NaNsFound = -1; \
static int CCTKGROUPNUM_NaNsFound = -1;

#define INITIALISE_NANCHECKER_PRIVATE_C2F \
if(CCTKARGNUM_NaNmask == -1) CCTKARGNUM_NaNmask = CCTK_VarIndex("NaNChecker::NaNmask"); \
if(CCTKGROUPNUM_NaNmask == -1) CCTKGROUPNUM_NaNmask = CCTK_GroupIndex("NaNChecker::NaNmask"); \
if(CCTKARGNUM_NaNsFound == -1) CCTKARGNUM_NaNsFound = CCTK_VarIndex("NaNChecker::NaNsFound"); \
if(CCTKGROUPNUM_NaNsFound == -1) CCTKGROUPNUM_NaNsFound = CCTK_GroupIndex("NaNChecker::NaNsFound");

#define NANCHECKER_PRIVATE_C2F_PROTO \
CCTK_INT *,CCTK_INT *

#define PASS_NANCHECKER_PRIVATE_C2F(GH) \
(CCTK_INT *)(PASS_REFERENCE(NaNmask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(NaNsFound, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NANCHECKER_PROTECTED_FARGUMENTS \


#define NANCHECKER_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NANCHECKER_PROTECTED_CARGUMENTS \


#define DECLARE_NANCHECKER_PROTECTED_C2F \


#define INITIALISE_NANCHECKER_PROTECTED_C2F \


#define NANCHECKER_PROTECTED_C2F_PROTO \


#define PASS_NANCHECKER_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NANCHECKER_PUBLIC_FARGUMENTS \


#define NANCHECKER_PUBLIC_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NANCHECKER_PUBLIC_CARGUMENTS \


#define DECLARE_NANCHECKER_PUBLIC_C2F \


#define INITIALISE_NANCHECKER_PUBLIC_C2F \


#define NANCHECKER_PUBLIC_C2F_PROTO \


#define PASS_NANCHECKER_PUBLIC_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define NANCHECKER_FARGUMENTS _CCTK_FARGUMENTS, NANCHECKER_PRIVATE_FARGUMENTS

#define DECLARE_NANCHECKER_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_NANCHECKER_PRIVATE_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NANCHECKER_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_NANCHECKER_PRIVATE_CARGUMENTS

#define NANCHECKER_C2F_PROTO _CCTK_C2F_PROTO, NANCHECKER_PRIVATE_C2F_PROTO

#define PASS_NANCHECKER_C2F(GH) _PASS_CCTK_C2F(GH), PASS_NANCHECKER_PRIVATE_C2F(GH)

#define DECLARE_NANCHECKER_C2F _DECLARE_CCTK_C2F DECLARE_NANCHECKER_PRIVATE_C2F

#define INITIALISE_NANCHECKER_C2F _INITIALISE_CCTK_C2F INITIALISE_NANCHECKER_PRIVATE_C2F

#define NANCHECKER_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
