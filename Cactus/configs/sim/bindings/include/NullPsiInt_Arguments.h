/*@@
   @header  NullPsiInt_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn NullPsiInt
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_NULLPSIINT_PRIVATE_FARGUMENTS \
INTEGER X0im_PsiInt&&\
INTEGER X0im_dotNewsB&&\
INTEGER X0re_PsiInt&&\
INTEGER X0re_dotNewsB&&\
INTEGER X1im_PsiInt&&\
INTEGER X1im_dotNewsB&&\
INTEGER X1re_PsiInt&&\
INTEGER X1re_dotNewsB&&\
INTEGER im_PsiInt_length&&\
INTEGER im_dotNewsB_length&&\
INTEGER re_PsiInt_length&&\
INTEGER re_dotNewsB_length&&\
CCTK_DECLARE(CCTK_REAL,im_PsiInt,(X0im_PsiInt,X1im_PsiInt,im_PsiInt_length))&&\
CCTK_DECLARE(CCTK_REAL,im_PsiInt_p,(X0im_PsiInt,X1im_PsiInt,im_PsiInt_length))&&\
CCTK_DECLARE(CCTK_REAL,im_dotNewsB,(X0im_dotNewsB,X1im_dotNewsB,im_dotNewsB_length))&&\
CCTK_DECLARE(CCTK_REAL,im_dotNewsB_p,(X0im_dotNewsB,X1im_dotNewsB,im_dotNewsB_length))&&\
CCTK_DECLARE(CCTK_REAL,re_PsiInt,(X0re_PsiInt,X1re_PsiInt,re_PsiInt_length))&&\
CCTK_DECLARE(CCTK_REAL,re_PsiInt_p,(X0re_PsiInt,X1re_PsiInt,re_PsiInt_length))&&\
CCTK_DECLARE(CCTK_REAL,re_dotNewsB,(X0re_dotNewsB,X1re_dotNewsB,re_dotNewsB_length))&&\
CCTK_DECLARE(CCTK_REAL,re_dotNewsB_p,(X0re_dotNewsB,X1re_dotNewsB,re_dotNewsB_length))&&\


#define NULLPSIINT_PRIVATE_FARGUMENTS \
X0im_PsiInt,X0im_dotNewsB,X0re_PsiInt,X0re_dotNewsB,X1im_PsiInt,X1im_dotNewsB,X1re_PsiInt,X1re_dotNewsB,im_PsiInt_length,im_dotNewsB_length,re_PsiInt_length,re_dotNewsB_length,im_PsiInt,im_PsiInt_p,im_dotNewsB,im_dotNewsB_p,re_PsiInt,re_PsiInt_p,re_dotNewsB,re_dotNewsB_p

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLPSIINT_PRIVATE_CARGUMENTS \
static int cctki_vi_im_PsiInt = -100; \
if (cctki_vi_im_PsiInt == -100) cctki_vi_im_PsiInt = CCTK_VarIndex("NullPsiInt::im_PsiInt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, im_PsiInt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_im_PsiInt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, im_PsiInt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_im_PsiInt)); \
static int cctki_vi_im_dotNewsB = -100; \
if (cctki_vi_im_dotNewsB == -100) cctki_vi_im_dotNewsB = CCTK_VarIndex("NullPsiInt::im_dotNewsB[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, im_dotNewsB, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_im_dotNewsB)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, im_dotNewsB_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_im_dotNewsB)); \
static int cctki_vi_re_PsiInt = -100; \
if (cctki_vi_re_PsiInt == -100) cctki_vi_re_PsiInt = CCTK_VarIndex("NullPsiInt::re_PsiInt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, re_PsiInt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_re_PsiInt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, re_PsiInt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_re_PsiInt)); \
static int cctki_vi_re_dotNewsB = -100; \
if (cctki_vi_re_dotNewsB == -100) cctki_vi_re_dotNewsB = CCTK_VarIndex("NullPsiInt::re_dotNewsB[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, re_dotNewsB, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_re_dotNewsB)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, re_dotNewsB_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_re_dotNewsB));

#define DECLARE_NULLPSIINT_PRIVATE_C2F \
static int CCTKARGNUM_im_PsiInt = -1; \
static int CCTKGROUPNUM_im_PsiInt = -1; \
static int CCTKARGNUM_im_dotNewsB = -1; \
static int CCTKGROUPNUM_im_dotNewsB = -1; \
static int CCTKARGNUM_re_PsiInt = -1; \
static int CCTKGROUPNUM_re_PsiInt = -1; \
static int CCTKARGNUM_re_dotNewsB = -1; \
static int CCTKGROUPNUM_re_dotNewsB = -1;

#define INITIALISE_NULLPSIINT_PRIVATE_C2F \
if(CCTKARGNUM_im_PsiInt == -1) CCTKARGNUM_im_PsiInt = CCTK_VarIndex("NullPsiInt::im_PsiInt[0]"); \
if(CCTKGROUPNUM_im_PsiInt == -1) CCTKGROUPNUM_im_PsiInt = CCTK_GroupIndex("NullPsiInt::im_PsiInt"); \
if(CCTKARGNUM_im_dotNewsB == -1) CCTKARGNUM_im_dotNewsB = CCTK_VarIndex("NullPsiInt::im_dotNewsB[0]"); \
if(CCTKGROUPNUM_im_dotNewsB == -1) CCTKGROUPNUM_im_dotNewsB = CCTK_GroupIndex("NullPsiInt::im_dotNewsB"); \
if(CCTKARGNUM_re_PsiInt == -1) CCTKARGNUM_re_PsiInt = CCTK_VarIndex("NullPsiInt::re_PsiInt[0]"); \
if(CCTKGROUPNUM_re_PsiInt == -1) CCTKGROUPNUM_re_PsiInt = CCTK_GroupIndex("NullPsiInt::re_PsiInt"); \
if(CCTKARGNUM_re_dotNewsB == -1) CCTKARGNUM_re_dotNewsB = CCTK_VarIndex("NullPsiInt::re_dotNewsB[0]"); \
if(CCTKGROUPNUM_re_dotNewsB == -1) CCTKGROUPNUM_re_dotNewsB = CCTK_GroupIndex("NullPsiInt::re_dotNewsB");

#define NULLPSIINT_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_NULLPSIINT_PRIVATE_C2F(GH) \
PASS_GROUPSIZE(im_PsiInt, 0),\
PASS_GROUPSIZE(im_dotNewsB, 0),\
PASS_GROUPSIZE(re_PsiInt, 0),\
PASS_GROUPSIZE(re_dotNewsB, 0),\
PASS_GROUPSIZE(im_PsiInt, 1),\
PASS_GROUPSIZE(im_dotNewsB, 1),\
PASS_GROUPSIZE(re_PsiInt, 1),\
PASS_GROUPSIZE(re_dotNewsB, 1),\
PASS_GROUPLEN(NullPsiInt, im_PsiInt),\
PASS_GROUPLEN(NullPsiInt, im_dotNewsB),\
PASS_GROUPLEN(NullPsiInt, re_PsiInt),\
PASS_GROUPLEN(NullPsiInt, re_dotNewsB),\
(CCTK_REAL *)(PASS_REFERENCE(im_PsiInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(im_PsiInt, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(im_dotNewsB, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(im_dotNewsB, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(re_PsiInt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(re_PsiInt, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(re_dotNewsB, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(re_dotNewsB, 1))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLPSIINT_PROTECTED_FARGUMENTS \


#define NULLPSIINT_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLPSIINT_PROTECTED_CARGUMENTS \


#define DECLARE_NULLPSIINT_PROTECTED_C2F \


#define INITIALISE_NULLPSIINT_PROTECTED_C2F \


#define NULLPSIINT_PROTECTED_C2F_PROTO \


#define PASS_NULLPSIINT_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLPSIINT_PUBLIC_FARGUMENTS \
INTEGER JJ_l_length&&\
INTEGER NewsB_Psi_length&&\
INTEGER NewsB_length&&\
INTEGER NewsB_mask_length&&\
INTEGER NewsB_past_length&&\
INTEGER NewsB_uBondi_length&&\
INTEGER News_length&&\
INTEGER News_past_length&&\
INTEGER News_uBondi_length&&\
INTEGER Psi4_length&&\
INTEGER Psi4_mask_length&&\
INTEGER Psi4_past_length&&\
INTEGER Psi4_uBondi_length&&\
INTEGER X0EG_mask&&\
INTEGER X0EQ_mask&&\
INTEGER X0EV_mask&&\
INTEGER X0JJ_l&&\
INTEGER X0News&&\
INTEGER X0NewsB&&\
INTEGER X0NewsB_Psi&&\
INTEGER X0NewsB_mask&&\
INTEGER X0NewsB_past&&\
INTEGER X0NewsB_uBondi&&\
INTEGER X0News_past&&\
INTEGER X0News_uBondi&&\
INTEGER X0NullGrParArrI&&\
INTEGER X0NullGrParArrR&&\
INTEGER X0Psi4&&\
INTEGER X0Psi4_mask&&\
INTEGER X0Psi4_past&&\
INTEGER X0Psi4_uBondi&&\
INTEGER X0RadCrd&&\
INTEGER X0StCmCrd&&\
INTEGER X0StCrd&&\
INTEGER X0cmplxcharfuncs_aux&&\
INTEGER X0cmplxcharfuncs_basic&&\
INTEGER X0guard_mask&&\
INTEGER X0linStrain&&\
INTEGER X0linStrain_past&&\
INTEGER X0linStrain_uBondi&&\
INTEGER X0null_mask&&\
INTEGER X0omega&&\
INTEGER X0realcharfuncs&&\
INTEGER X0tmp_cgf&&\
INTEGER X0tmp_cgf3&&\
INTEGER X0tmp_rgf&&\
INTEGER X0uBondi&&\
INTEGER X0uBondi_past&&\
INTEGER X1EG_mask&&\
INTEGER X1EQ_mask&&\
INTEGER X1EV_mask&&\
INTEGER X1JJ_l&&\
INTEGER X1News&&\
INTEGER X1NewsB&&\
INTEGER X1NewsB_Psi&&\
INTEGER X1NewsB_mask&&\
INTEGER X1NewsB_past&&\
INTEGER X1NewsB_uBondi&&\
INTEGER X1News_past&&\
INTEGER X1News_uBondi&&\
INTEGER X1Psi4&&\
INTEGER X1Psi4_mask&&\
INTEGER X1Psi4_past&&\
INTEGER X1Psi4_uBondi&&\
INTEGER X1StCmCrd&&\
INTEGER X1StCrd&&\
INTEGER X1cmplxcharfuncs_aux&&\
INTEGER X1cmplxcharfuncs_basic&&\
INTEGER X1guard_mask&&\
INTEGER X1linStrain&&\
INTEGER X1linStrain_past&&\
INTEGER X1linStrain_uBondi&&\
INTEGER X1null_mask&&\
INTEGER X1omega&&\
INTEGER X1realcharfuncs&&\
INTEGER X1tmp_cgf&&\
INTEGER X1tmp_cgf3&&\
INTEGER X1tmp_rgf&&\
INTEGER X1uBondi&&\
INTEGER X1uBondi_past&&\
INTEGER cmplxcharfuncs_aux_length&&\
INTEGER cmplxcharfuncs_basic_length&&\
INTEGER linStrain_length&&\
INTEGER linStrain_past_length&&\
INTEGER linStrain_uBondi_length&&\
INTEGER omega_length&&\
INTEGER realcharfuncs_length&&\
INTEGER uBondi_length&&\
INTEGER uBondi_past_length&&\
CCTK_DECLARE(CCTK_INT,EG_mask,(X0EG_mask,X1EG_mask))&&\
CCTK_DECLARE(CCTK_INT,EQ_mask,(X0EQ_mask,X1EQ_mask))&&\
CCTK_DECLARE(CCTK_INT,EV_mask,(X0EV_mask,X1EV_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,Jn_l,(X0JJ_l,X1JJ_l,JJ_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Jo_l,(X0JJ_l,X1JJ_l,JJ_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,News,(X0News,X1News,News_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,NewsB,(X0NewsB,X1NewsB,NewsB_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,NewsB_Psi,(X0NewsB_Psi,X1NewsB_Psi,NewsB_Psi_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,NewsB_mask,(X0NewsB_mask,X1NewsB_mask,NewsB_mask_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,NewsB_past,(X0NewsB_past,X1NewsB_past,NewsB_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,NewsB_uBondi,(X0NewsB_uBondi,X1NewsB_uBondi,NewsB_uBondi_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,News_past,(X0News_past,X1News_past,News_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,News_uBondi,(X0News_uBondi,X1News_uBondi,News_uBondi_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Psi4,(X0Psi4,X1Psi4,Psi4_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Psi4_mask,(X0Psi4_mask,X1Psi4_mask,Psi4_mask_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Psi4_past,(X0Psi4_past,X1Psi4_past,Psi4_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Psi4_uBondi,(X0Psi4_uBondi,X1Psi4_uBondi,Psi4_uBondi_length))&&\
CCTK_DECLARE(CCTK_REAL,bcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_INT,boundary_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,boundary_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_REAL,constant_uBondi,)&&\
CCTK_DECLARE(CCTK_REAL,courant_min_time,)&&\
CCTK_DECLARE(CCTK_REAL,courant_wave_speed,)&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_INT,evolution_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,evolution_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_REAL,evolution_radius,)&&\
CCTK_DECLARE(CCTK_INT,guard_mask,(X0guard_mask,X1guard_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,linStrain,(X0linStrain,X1linStrain,linStrain_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,linStrain_past,(X0linStrain_past,X1linStrain_past,linStrain_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,linStrain_uBondi,(X0linStrain_uBondi,X1linStrain_uBondi,linStrain_uBondi_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_REAL,null_delta,(X0NullGrParArrR))&&\
CCTK_DECLARE(CCTK_REAL,null_dx,)&&\
CCTK_DECLARE(CCTK_INT,null_gsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lbnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_rb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_rbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_INT,null_ubnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_xb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_xbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,omegan,(X0omega,X1omega,omega_length))&&\
CCTK_DECLARE(CCTK_REAL,omegao,(X0omega,X1omega,omega_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_REAL,qsize,)&&\
CCTK_DECLARE(CCTK_REAL,stereo_p,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_pp,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_q,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,time_of_news,)&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfn,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfs,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_REAL,uBondi,(X0uBondi,X1uBondi,uBondi_length))&&\
CCTK_DECLARE(CCTK_REAL,uBondi_past,(X0uBondi_past,X1uBondi_past,uBondi_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,zeta,(X0StCmCrd,X1StCmCrd))&&\


#define NULLPSIINT_PUBLIC_FARGUMENTS \
JJ_l_length,NewsB_Psi_length,NewsB_length,NewsB_mask_length,NewsB_past_length,NewsB_uBondi_length,News_length,News_past_length,News_uBondi_length,Psi4_length,Psi4_mask_length,Psi4_past_length,Psi4_uBondi_length,X0EG_mask,X0EQ_mask,X0EV_mask,X0JJ_l,X0News,X0NewsB,X0NewsB_Psi,X0NewsB_mask,X0NewsB_past,X0NewsB_uBondi,X0News_past,X0News_uBondi,X0NullGrParArrI,X0NullGrParArrR,X0Psi4,X0Psi4_mask,X0Psi4_past,X0Psi4_uBondi,X0RadCrd,X0StCmCrd,X0StCrd,X0cmplxcharfuncs_aux,X0cmplxcharfuncs_basic,X0guard_mask,X0linStrain,X0linStrain_past,X0linStrain_uBondi,X0null_mask,X0omega,X0realcharfuncs,X0tmp_cgf,X0tmp_cgf3,X0tmp_rgf,X0uBondi,X0uBondi_past,X1EG_mask,X1EQ_mask,X1EV_mask,X1JJ_l,X1News,X1NewsB,X1NewsB_Psi,X1NewsB_mask,X1NewsB_past,X1NewsB_uBondi,X1News_past,X1News_uBondi,X1Psi4,X1Psi4_mask,X1Psi4_past,X1Psi4_uBondi,X1StCmCrd,X1StCrd,X1cmplxcharfuncs_aux,X1cmplxcharfuncs_basic,X1guard_mask,X1linStrain,X1linStrain_past,X1linStrain_uBondi,X1null_mask,X1omega,X1realcharfuncs,X1tmp_cgf,X1tmp_cgf3,X1tmp_rgf,X1uBondi,X1uBondi_past,cmplxcharfuncs_aux_length,cmplxcharfuncs_basic_length,linStrain_length,linStrain_past_length,linStrain_uBondi_length,omega_length,realcharfuncs_length,uBondi_length,uBondi_past_length,EG_mask,EQ_mask,EV_mask,Jn_l,Jo_l,News,NewsB,NewsB_Psi,NewsB_mask,NewsB_past,NewsB_uBondi,News_past,News_uBondi,Psi4,Psi4_mask,Psi4_past,Psi4_uBondi,bcn,bcn_p,bcs,bcs_p,boundary_maskn,boundary_masks,cbcn,cbcn_p,cbcs,cbcs_p,ckcn,ckcn_p,ckcs,ckcs_p,constant_uBondi,courant_min_time,courant_wave_speed,dxjcn,dxjcn_p,dxjcs,dxjcs_p,eth2jcn,eth2jcn_p,eth2jcs,eth2jcs_p,evolution_maskn,evolution_masks,evolution_radius,guard_mask,jcn,jcn_p,jcs,jcs_p,linStrain,linStrain_past,linStrain_uBondi,nucn,nucn_p,nucs,nucs_p,null_delta,null_dx,null_gsh,null_lbnd,null_lsh,null_rb,null_rbh,null_ubnd,null_xb,null_xbh,omegan,omegao,qcn,qcn_p,qcs,qcs_p,qsize,stereo_p,stereo_pp,stereo_q,time_of_news,tmp_cgfn,tmp_cgfn1,tmp_cgfn2,tmp_cgfn3,tmp_cgfs,tmp_cgfs1,tmp_cgfs2,tmp_cgfs3,tmp_rgfn,tmp_rgfs,uBondi,uBondi_past,ucn,ucn_p,ucs,ucs_p,wcn,wcn_p,wcs,wcs_p,zeta

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLPSIINT_PUBLIC_CARGUMENTS \
static int cctki_vi_EG_mask = -100; \
if (cctki_vi_EG_mask == -100) cctki_vi_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EG_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EG_mask)); \
static int cctki_vi_EQ_mask = -100; \
if (cctki_vi_EQ_mask == -100) cctki_vi_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EQ_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EQ_mask)); \
static int cctki_vi_EV_mask = -100; \
if (cctki_vi_EV_mask == -100) cctki_vi_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EV_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EV_mask)); \
static int cctki_vi_Jn_l = -100; \
if (cctki_vi_Jn_l == -100) cctki_vi_Jn_l = CCTK_VarIndex("NULLNEWS::Jn_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Jn_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Jn_l)); \
static int cctki_vi_Jo_l = -100; \
if (cctki_vi_Jo_l == -100) cctki_vi_Jo_l = CCTK_VarIndex("NULLNEWS::Jo_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Jo_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Jo_l)); \
static int cctki_vi_News = -100; \
if (cctki_vi_News == -100) cctki_vi_News = CCTK_VarIndex("NULLNEWS::News[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, News, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_News)); \
static int cctki_vi_NewsB = -100; \
if (cctki_vi_NewsB == -100) cctki_vi_NewsB = CCTK_VarIndex("NULLNEWS::NewsB[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, NewsB, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsB)); \
static int cctki_vi_NewsB_Psi = -100; \
if (cctki_vi_NewsB_Psi == -100) cctki_vi_NewsB_Psi = CCTK_VarIndex("NullPsiInt::NewsB_Psi[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, NewsB_Psi, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsB_Psi)); \
static int cctki_vi_NewsB_mask = -100; \
if (cctki_vi_NewsB_mask == -100) cctki_vi_NewsB_mask = CCTK_VarIndex("NullPsiInt::NewsB_mask[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, NewsB_mask, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsB_mask)); \
static int cctki_vi_NewsB_past = -100; \
if (cctki_vi_NewsB_past == -100) cctki_vi_NewsB_past = CCTK_VarIndex("NULLNEWS::NewsB_past[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, NewsB_past, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsB_past)); \
static int cctki_vi_NewsB_uBondi = -100; \
if (cctki_vi_NewsB_uBondi == -100) cctki_vi_NewsB_uBondi = CCTK_VarIndex("NULLNEWS::NewsB_uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, NewsB_uBondi, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsB_uBondi)); \
static int cctki_vi_News_past = -100; \
if (cctki_vi_News_past == -100) cctki_vi_News_past = CCTK_VarIndex("NULLNEWS::News_past[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, News_past, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_News_past)); \
static int cctki_vi_News_uBondi = -100; \
if (cctki_vi_News_uBondi == -100) cctki_vi_News_uBondi = CCTK_VarIndex("NULLNEWS::News_uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, News_uBondi, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_News_uBondi)); \
static int cctki_vi_Psi4 = -100; \
if (cctki_vi_Psi4 == -100) cctki_vi_Psi4 = CCTK_VarIndex("NULLNEWS::Psi4[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Psi4, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4)); \
static int cctki_vi_Psi4_mask = -100; \
if (cctki_vi_Psi4_mask == -100) cctki_vi_Psi4_mask = CCTK_VarIndex("NullPsiInt::Psi4_mask[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Psi4_mask, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4_mask)); \
static int cctki_vi_Psi4_past = -100; \
if (cctki_vi_Psi4_past == -100) cctki_vi_Psi4_past = CCTK_VarIndex("NULLNEWS::Psi4_past[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Psi4_past, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4_past)); \
static int cctki_vi_Psi4_uBondi = -100; \
if (cctki_vi_Psi4_uBondi == -100) cctki_vi_Psi4_uBondi = CCTK_VarIndex("NULLNEWS::Psi4_uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Psi4_uBondi, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4_uBondi)); \
static int cctki_vi_bcn = -100; \
if (cctki_vi_bcn == -100) cctki_vi_bcn = CCTK_VarIndex("NULLVARS::bcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcn)); \
static int cctki_vi_bcs = -100; \
if (cctki_vi_bcs == -100) cctki_vi_bcs = CCTK_VarIndex("NULLVARS::bcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcs)); \
static int cctki_vi_boundary_maskn = -100; \
if (cctki_vi_boundary_maskn == -100) cctki_vi_boundary_maskn = CCTK_VarIndex("NULLVARS::boundary_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_maskn)); \
static int cctki_vi_boundary_masks = -100; \
if (cctki_vi_boundary_masks == -100) cctki_vi_boundary_masks = CCTK_VarIndex("NULLVARS::boundary_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_masks)); \
static int cctki_vi_cbcn = -100; \
if (cctki_vi_cbcn == -100) cctki_vi_cbcn = CCTK_VarIndex("NULLVARS::cbcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcn)); \
static int cctki_vi_cbcs = -100; \
if (cctki_vi_cbcs == -100) cctki_vi_cbcs = CCTK_VarIndex("NULLVARS::cbcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcs)); \
static int cctki_vi_ckcn = -100; \
if (cctki_vi_ckcn == -100) cctki_vi_ckcn = CCTK_VarIndex("NULLVARS::ckcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcn)); \
static int cctki_vi_ckcs = -100; \
if (cctki_vi_ckcs == -100) cctki_vi_ckcs = CCTK_VarIndex("NULLVARS::ckcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcs)); \
static int cctki_vi_constant_uBondi = -100; \
if (cctki_vi_constant_uBondi == -100) cctki_vi_constant_uBondi = CCTK_VarIndex("NULLNEWS::constant_uBondi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, constant_uBondi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_constant_uBondi)); \
static int cctki_vi_courant_min_time = -100; \
if (cctki_vi_courant_min_time == -100) cctki_vi_courant_min_time = CCTK_VarIndex("TIME::courant_min_time"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, courant_min_time, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_courant_min_time)); \
static int cctki_vi_courant_wave_speed = -100; \
if (cctki_vi_courant_wave_speed == -100) cctki_vi_courant_wave_speed = CCTK_VarIndex("TIME::courant_wave_speed"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, courant_wave_speed, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_courant_wave_speed)); \
static int cctki_vi_dxjcn = -100; \
if (cctki_vi_dxjcn == -100) cctki_vi_dxjcn = CCTK_VarIndex("NULLVARS::dxjcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcn)); \
static int cctki_vi_dxjcs = -100; \
if (cctki_vi_dxjcs == -100) cctki_vi_dxjcs = CCTK_VarIndex("NULLVARS::dxjcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcs)); \
static int cctki_vi_eth2jcn = -100; \
if (cctki_vi_eth2jcn == -100) cctki_vi_eth2jcn = CCTK_VarIndex("NULLVARS::eth2jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcn)); \
static int cctki_vi_eth2jcs = -100; \
if (cctki_vi_eth2jcs == -100) cctki_vi_eth2jcs = CCTK_VarIndex("NULLVARS::eth2jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcs)); \
static int cctki_vi_evolution_maskn = -100; \
if (cctki_vi_evolution_maskn == -100) cctki_vi_evolution_maskn = CCTK_VarIndex("NULLVARS::evolution_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_maskn)); \
static int cctki_vi_evolution_masks = -100; \
if (cctki_vi_evolution_masks == -100) cctki_vi_evolution_masks = CCTK_VarIndex("NULLVARS::evolution_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_masks)); \
static int cctki_vi_evolution_radius = -100; \
if (cctki_vi_evolution_radius == -100) cctki_vi_evolution_radius = CCTK_VarIndex("NULLINTERP::evolution_radius"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, evolution_radius, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_radius)); \
static int cctki_vi_guard_mask = -100; \
if (cctki_vi_guard_mask == -100) cctki_vi_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, guard_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_guard_mask)); \
static int cctki_vi_jcn = -100; \
if (cctki_vi_jcn == -100) cctki_vi_jcn = CCTK_VarIndex("NULLVARS::jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcn)); \
static int cctki_vi_jcs = -100; \
if (cctki_vi_jcs == -100) cctki_vi_jcs = CCTK_VarIndex("NULLVARS::jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcs)); \
static int cctki_vi_linStrain = -100; \
if (cctki_vi_linStrain == -100) cctki_vi_linStrain = CCTK_VarIndex("NULLNEWS::linStrain[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, linStrain, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_linStrain)); \
static int cctki_vi_linStrain_past = -100; \
if (cctki_vi_linStrain_past == -100) cctki_vi_linStrain_past = CCTK_VarIndex("NULLNEWS::linStrain_past[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, linStrain_past, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_linStrain_past)); \
static int cctki_vi_linStrain_uBondi = -100; \
if (cctki_vi_linStrain_uBondi == -100) cctki_vi_linStrain_uBondi = CCTK_VarIndex("NULLNEWS::linStrain_uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, linStrain_uBondi, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_linStrain_uBondi)); \
static int cctki_vi_nucn = -100; \
if (cctki_vi_nucn == -100) cctki_vi_nucn = CCTK_VarIndex("NULLVARS::nucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucn)); \
static int cctki_vi_nucs = -100; \
if (cctki_vi_nucs == -100) cctki_vi_nucs = CCTK_VarIndex("NULLVARS::nucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucs)); \
static int cctki_vi_null_delta = -100; \
if (cctki_vi_null_delta == -100) cctki_vi_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_delta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_delta)); \
static int cctki_vi_null_dx = -100; \
if (cctki_vi_null_dx == -100) cctki_vi_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_dx)); \
static int cctki_vi_null_gsh = -100; \
if (cctki_vi_null_gsh == -100) cctki_vi_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_gsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_gsh)); \
static int cctki_vi_null_lbnd = -100; \
if (cctki_vi_null_lbnd == -100) cctki_vi_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lbnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lbnd)); \
static int cctki_vi_null_lsh = -100; \
if (cctki_vi_null_lsh == -100) cctki_vi_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lsh)); \
static int cctki_vi_null_rb = -100; \
if (cctki_vi_null_rb == -100) cctki_vi_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rb)); \
static int cctki_vi_null_rbh = -100; \
if (cctki_vi_null_rbh == -100) cctki_vi_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rbh)); \
static int cctki_vi_null_ubnd = -100; \
if (cctki_vi_null_ubnd == -100) cctki_vi_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_ubnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_ubnd)); \
static int cctki_vi_null_xb = -100; \
if (cctki_vi_null_xb == -100) cctki_vi_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xb)); \
static int cctki_vi_null_xbh = -100; \
if (cctki_vi_null_xbh == -100) cctki_vi_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xbh)); \
static int cctki_vi_omegan = -100; \
if (cctki_vi_omegan == -100) cctki_vi_omegan = CCTK_VarIndex("NULLNEWS::omegan[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, omegan, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_omegan)); \
static int cctki_vi_omegao = -100; \
if (cctki_vi_omegao == -100) cctki_vi_omegao = CCTK_VarIndex("NULLNEWS::omegao[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, omegao, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_omegao)); \
static int cctki_vi_qcn = -100; \
if (cctki_vi_qcn == -100) cctki_vi_qcn = CCTK_VarIndex("NULLVARS::qcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcn)); \
static int cctki_vi_qcs = -100; \
if (cctki_vi_qcs == -100) cctki_vi_qcs = CCTK_VarIndex("NULLVARS::qcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcs)); \
static int cctki_vi_qsize = -100; \
if (cctki_vi_qsize == -100) cctki_vi_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, qsize, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qsize)); \
static int cctki_vi_stereo_p = -100; \
if (cctki_vi_stereo_p == -100) cctki_vi_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_p)); \
static int cctki_vi_stereo_pp = -100; \
if (cctki_vi_stereo_pp == -100) cctki_vi_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_pp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_pp)); \
static int cctki_vi_stereo_q = -100; \
if (cctki_vi_stereo_q == -100) cctki_vi_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_q, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_q)); \
static int cctki_vi_time_of_news = -100; \
if (cctki_vi_time_of_news == -100) cctki_vi_time_of_news = CCTK_VarIndex("NULLNEWS::time_of_news"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, time_of_news, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_time_of_news)); \
static int cctki_vi_tmp_cgfn = -100; \
if (cctki_vi_tmp_cgfn == -100) cctki_vi_tmp_cgfn = CCTK_VarIndex("NULLINTERP::tmp_cgfn"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn)); \
static int cctki_vi_tmp_cgfn1 = -100; \
if (cctki_vi_tmp_cgfn1 == -100) cctki_vi_tmp_cgfn1 = CCTK_VarIndex("NULLINTERP::tmp_cgfn1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn1)); \
static int cctki_vi_tmp_cgfn2 = -100; \
if (cctki_vi_tmp_cgfn2 == -100) cctki_vi_tmp_cgfn2 = CCTK_VarIndex("NULLINTERP::tmp_cgfn2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn2)); \
static int cctki_vi_tmp_cgfn3 = -100; \
if (cctki_vi_tmp_cgfn3 == -100) cctki_vi_tmp_cgfn3 = CCTK_VarIndex("NULLINTERP::tmp_cgfn3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn3)); \
static int cctki_vi_tmp_cgfs = -100; \
if (cctki_vi_tmp_cgfs == -100) cctki_vi_tmp_cgfs = CCTK_VarIndex("NULLINTERP::tmp_cgfs"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs)); \
static int cctki_vi_tmp_cgfs1 = -100; \
if (cctki_vi_tmp_cgfs1 == -100) cctki_vi_tmp_cgfs1 = CCTK_VarIndex("NULLINTERP::tmp_cgfs1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs1)); \
static int cctki_vi_tmp_cgfs2 = -100; \
if (cctki_vi_tmp_cgfs2 == -100) cctki_vi_tmp_cgfs2 = CCTK_VarIndex("NULLINTERP::tmp_cgfs2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs2)); \
static int cctki_vi_tmp_cgfs3 = -100; \
if (cctki_vi_tmp_cgfs3 == -100) cctki_vi_tmp_cgfs3 = CCTK_VarIndex("NULLINTERP::tmp_cgfs3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs3)); \
static int cctki_vi_tmp_rgfn = -100; \
if (cctki_vi_tmp_rgfn == -100) cctki_vi_tmp_rgfn = CCTK_VarIndex("NULLINTERP::tmp_rgfn"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfn)); \
static int cctki_vi_tmp_rgfs = -100; \
if (cctki_vi_tmp_rgfs == -100) cctki_vi_tmp_rgfs = CCTK_VarIndex("NULLINTERP::tmp_rgfs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfs)); \
static int cctki_vi_uBondi = -100; \
if (cctki_vi_uBondi == -100) cctki_vi_uBondi = CCTK_VarIndex("NULLNEWS::uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, uBondi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_uBondi)); \
static int cctki_vi_uBondi_past = -100; \
if (cctki_vi_uBondi_past == -100) cctki_vi_uBondi_past = CCTK_VarIndex("NULLNEWS::uBondi_past[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, uBondi_past, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_uBondi_past)); \
static int cctki_vi_ucn = -100; \
if (cctki_vi_ucn == -100) cctki_vi_ucn = CCTK_VarIndex("NULLVARS::ucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucn)); \
static int cctki_vi_ucs = -100; \
if (cctki_vi_ucs == -100) cctki_vi_ucs = CCTK_VarIndex("NULLVARS::ucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucs)); \
static int cctki_vi_wcn = -100; \
if (cctki_vi_wcn == -100) cctki_vi_wcn = CCTK_VarIndex("NULLVARS::wcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcn)); \
static int cctki_vi_wcs = -100; \
if (cctki_vi_wcs == -100) cctki_vi_wcs = CCTK_VarIndex("NULLVARS::wcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcs)); \
static int cctki_vi_zeta = -100; \
if (cctki_vi_zeta == -100) cctki_vi_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, zeta, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zeta));

#define DECLARE_NULLPSIINT_PUBLIC_C2F \
static int CCTKARGNUM_EG_mask = -1; \
static int CCTKGROUPNUM_EG_mask = -1; \
static int CCTKARGNUM_EQ_mask = -1; \
static int CCTKGROUPNUM_EQ_mask = -1; \
static int CCTKARGNUM_EV_mask = -1; \
static int CCTKGROUPNUM_EV_mask = -1; \
static int CCTKARGNUM_Jn_l = -1; \
static int CCTKGROUPNUM_JJ_l = -1; \
static int CCTKARGNUM_Jo_l = -1; \
static int CCTKARGNUM_News = -1; \
static int CCTKGROUPNUM_News = -1; \
static int CCTKARGNUM_NewsB = -1; \
static int CCTKGROUPNUM_NewsB = -1; \
static int CCTKARGNUM_NewsB_Psi = -1; \
static int CCTKGROUPNUM_NewsB_Psi = -1; \
static int CCTKARGNUM_NewsB_mask = -1; \
static int CCTKGROUPNUM_NewsB_mask = -1; \
static int CCTKARGNUM_NewsB_past = -1; \
static int CCTKGROUPNUM_NewsB_past = -1; \
static int CCTKARGNUM_NewsB_uBondi = -1; \
static int CCTKGROUPNUM_NewsB_uBondi = -1; \
static int CCTKARGNUM_News_past = -1; \
static int CCTKGROUPNUM_News_past = -1; \
static int CCTKARGNUM_News_uBondi = -1; \
static int CCTKGROUPNUM_News_uBondi = -1; \
static int CCTKARGNUM_Psi4 = -1; \
static int CCTKGROUPNUM_Psi4 = -1; \
static int CCTKARGNUM_Psi4_mask = -1; \
static int CCTKGROUPNUM_Psi4_mask = -1; \
static int CCTKARGNUM_Psi4_past = -1; \
static int CCTKGROUPNUM_Psi4_past = -1; \
static int CCTKARGNUM_Psi4_uBondi = -1; \
static int CCTKGROUPNUM_Psi4_uBondi = -1; \
static int CCTKARGNUM_bcn = -1; \
static int CCTKGROUPNUM_realcharfuncs = -1; \
static int CCTKARGNUM_bcs = -1; \
static int CCTKARGNUM_boundary_maskn = -1; \
static int CCTKGROUPNUM_null_mask = -1; \
static int CCTKARGNUM_boundary_masks = -1; \
static int CCTKARGNUM_cbcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_aux = -1; \
static int CCTKARGNUM_cbcs = -1; \
static int CCTKARGNUM_ckcn = -1; \
static int CCTKARGNUM_ckcs = -1; \
static int CCTKARGNUM_constant_uBondi = -1; \
static int CCTKGROUPNUM_constant_uBondi = -1; \
static int CCTKARGNUM_courant_min_time = -1; \
static int CCTKGROUPNUM_speedvars = -1; \
static int CCTKARGNUM_courant_wave_speed = -1; \
static int CCTKARGNUM_dxjcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_basic = -1; \
static int CCTKARGNUM_dxjcs = -1; \
static int CCTKARGNUM_eth2jcn = -1; \
static int CCTKARGNUM_eth2jcs = -1; \
static int CCTKARGNUM_evolution_maskn = -1; \
static int CCTKARGNUM_evolution_masks = -1; \
static int CCTKARGNUM_evolution_radius = -1; \
static int CCTKGROUPNUM_evolution_radius = -1; \
static int CCTKARGNUM_guard_mask = -1; \
static int CCTKGROUPNUM_guard_mask = -1; \
static int CCTKARGNUM_jcn = -1; \
static int CCTKARGNUM_jcs = -1; \
static int CCTKARGNUM_linStrain = -1; \
static int CCTKGROUPNUM_linStrain = -1; \
static int CCTKARGNUM_linStrain_past = -1; \
static int CCTKGROUPNUM_linStrain_past = -1; \
static int CCTKARGNUM_linStrain_uBondi = -1; \
static int CCTKGROUPNUM_linStrain_uBondi = -1; \
static int CCTKARGNUM_nucn = -1; \
static int CCTKARGNUM_nucs = -1; \
static int CCTKARGNUM_null_delta = -1; \
static int CCTKGROUPNUM_NullGrParArrR = -1; \
static int CCTKARGNUM_null_dx = -1; \
static int CCTKGROUPNUM_NullSclr = -1; \
static int CCTKARGNUM_null_gsh = -1; \
static int CCTKGROUPNUM_NullGrParArrI = -1; \
static int CCTKARGNUM_null_lbnd = -1; \
static int CCTKARGNUM_null_lsh = -1; \
static int CCTKARGNUM_null_rb = -1; \
static int CCTKGROUPNUM_RadCrd = -1; \
static int CCTKARGNUM_null_rbh = -1; \
static int CCTKARGNUM_null_ubnd = -1; \
static int CCTKARGNUM_null_xb = -1; \
static int CCTKARGNUM_null_xbh = -1; \
static int CCTKARGNUM_omegan = -1; \
static int CCTKGROUPNUM_omega = -1; \
static int CCTKARGNUM_omegao = -1; \
static int CCTKARGNUM_qcn = -1; \
static int CCTKARGNUM_qcs = -1; \
static int CCTKARGNUM_qsize = -1; \
static int CCTKARGNUM_stereo_p = -1; \
static int CCTKGROUPNUM_StCrd = -1; \
static int CCTKARGNUM_stereo_pp = -1; \
static int CCTKARGNUM_stereo_q = -1; \
static int CCTKARGNUM_time_of_news = -1; \
static int CCTKGROUPNUM_time_of_news = -1; \
static int CCTKARGNUM_tmp_cgfn = -1; \
static int CCTKGROUPNUM_tmp_cgf = -1; \
static int CCTKARGNUM_tmp_cgfn1 = -1; \
static int CCTKGROUPNUM_tmp_cgf3 = -1; \
static int CCTKARGNUM_tmp_cgfn2 = -1; \
static int CCTKARGNUM_tmp_cgfn3 = -1; \
static int CCTKARGNUM_tmp_cgfs = -1; \
static int CCTKARGNUM_tmp_cgfs1 = -1; \
static int CCTKARGNUM_tmp_cgfs2 = -1; \
static int CCTKARGNUM_tmp_cgfs3 = -1; \
static int CCTKARGNUM_tmp_rgfn = -1; \
static int CCTKGROUPNUM_tmp_rgf = -1; \
static int CCTKARGNUM_tmp_rgfs = -1; \
static int CCTKARGNUM_uBondi = -1; \
static int CCTKGROUPNUM_uBondi = -1; \
static int CCTKARGNUM_uBondi_past = -1; \
static int CCTKGROUPNUM_uBondi_past = -1; \
static int CCTKARGNUM_ucn = -1; \
static int CCTKARGNUM_ucs = -1; \
static int CCTKARGNUM_wcn = -1; \
static int CCTKARGNUM_wcs = -1; \
static int CCTKARGNUM_zeta = -1; \
static int CCTKGROUPNUM_StCmCrd = -1;

#define INITIALISE_NULLPSIINT_PUBLIC_C2F \
if(CCTKARGNUM_EG_mask == -1) CCTKARGNUM_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
if(CCTKGROUPNUM_EG_mask == -1) CCTKGROUPNUM_EG_mask = CCTK_GroupIndex("NULLGRID::EG_mask"); \
if(CCTKARGNUM_EQ_mask == -1) CCTKARGNUM_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
if(CCTKGROUPNUM_EQ_mask == -1) CCTKGROUPNUM_EQ_mask = CCTK_GroupIndex("NULLGRID::EQ_mask"); \
if(CCTKARGNUM_EV_mask == -1) CCTKARGNUM_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
if(CCTKGROUPNUM_EV_mask == -1) CCTKGROUPNUM_EV_mask = CCTK_GroupIndex("NULLGRID::EV_mask"); \
if(CCTKARGNUM_Jn_l == -1) CCTKARGNUM_Jn_l = CCTK_VarIndex("NULLNEWS::Jn_l[0]"); \
if(CCTKGROUPNUM_JJ_l == -1) CCTKGROUPNUM_JJ_l = CCTK_GroupIndex("NULLNEWS::JJ_l"); \
if(CCTKARGNUM_Jo_l == -1) CCTKARGNUM_Jo_l = CCTK_VarIndex("NULLNEWS::Jo_l[0]"); \
if(CCTKARGNUM_News == -1) CCTKARGNUM_News = CCTK_VarIndex("NULLNEWS::News[0]"); \
if(CCTKGROUPNUM_News == -1) CCTKGROUPNUM_News = CCTK_GroupIndex("NULLNEWS::News"); \
if(CCTKARGNUM_NewsB == -1) CCTKARGNUM_NewsB = CCTK_VarIndex("NULLNEWS::NewsB[0]"); \
if(CCTKGROUPNUM_NewsB == -1) CCTKGROUPNUM_NewsB = CCTK_GroupIndex("NULLNEWS::NewsB"); \
if(CCTKARGNUM_NewsB_Psi == -1) CCTKARGNUM_NewsB_Psi = CCTK_VarIndex("NullPsiInt::NewsB_Psi[0]"); \
if(CCTKGROUPNUM_NewsB_Psi == -1) CCTKGROUPNUM_NewsB_Psi = CCTK_GroupIndex("NullPsiInt::NewsB_Psi"); \
if(CCTKARGNUM_NewsB_mask == -1) CCTKARGNUM_NewsB_mask = CCTK_VarIndex("NullPsiInt::NewsB_mask[0]"); \
if(CCTKGROUPNUM_NewsB_mask == -1) CCTKGROUPNUM_NewsB_mask = CCTK_GroupIndex("NullPsiInt::NewsB_mask"); \
if(CCTKARGNUM_NewsB_past == -1) CCTKARGNUM_NewsB_past = CCTK_VarIndex("NULLNEWS::NewsB_past[0]"); \
if(CCTKGROUPNUM_NewsB_past == -1) CCTKGROUPNUM_NewsB_past = CCTK_GroupIndex("NULLNEWS::NewsB_past"); \
if(CCTKARGNUM_NewsB_uBondi == -1) CCTKARGNUM_NewsB_uBondi = CCTK_VarIndex("NULLNEWS::NewsB_uBondi[0]"); \
if(CCTKGROUPNUM_NewsB_uBondi == -1) CCTKGROUPNUM_NewsB_uBondi = CCTK_GroupIndex("NULLNEWS::NewsB_uBondi"); \
if(CCTKARGNUM_News_past == -1) CCTKARGNUM_News_past = CCTK_VarIndex("NULLNEWS::News_past[0]"); \
if(CCTKGROUPNUM_News_past == -1) CCTKGROUPNUM_News_past = CCTK_GroupIndex("NULLNEWS::News_past"); \
if(CCTKARGNUM_News_uBondi == -1) CCTKARGNUM_News_uBondi = CCTK_VarIndex("NULLNEWS::News_uBondi[0]"); \
if(CCTKGROUPNUM_News_uBondi == -1) CCTKGROUPNUM_News_uBondi = CCTK_GroupIndex("NULLNEWS::News_uBondi"); \
if(CCTKARGNUM_Psi4 == -1) CCTKARGNUM_Psi4 = CCTK_VarIndex("NULLNEWS::Psi4[0]"); \
if(CCTKGROUPNUM_Psi4 == -1) CCTKGROUPNUM_Psi4 = CCTK_GroupIndex("NULLNEWS::Psi4"); \
if(CCTKARGNUM_Psi4_mask == -1) CCTKARGNUM_Psi4_mask = CCTK_VarIndex("NullPsiInt::Psi4_mask[0]"); \
if(CCTKGROUPNUM_Psi4_mask == -1) CCTKGROUPNUM_Psi4_mask = CCTK_GroupIndex("NullPsiInt::Psi4_mask"); \
if(CCTKARGNUM_Psi4_past == -1) CCTKARGNUM_Psi4_past = CCTK_VarIndex("NULLNEWS::Psi4_past[0]"); \
if(CCTKGROUPNUM_Psi4_past == -1) CCTKGROUPNUM_Psi4_past = CCTK_GroupIndex("NULLNEWS::Psi4_past"); \
if(CCTKARGNUM_Psi4_uBondi == -1) CCTKARGNUM_Psi4_uBondi = CCTK_VarIndex("NULLNEWS::Psi4_uBondi[0]"); \
if(CCTKGROUPNUM_Psi4_uBondi == -1) CCTKGROUPNUM_Psi4_uBondi = CCTK_GroupIndex("NULLNEWS::Psi4_uBondi"); \
if(CCTKARGNUM_bcn == -1) CCTKARGNUM_bcn = CCTK_VarIndex("NULLVARS::bcn[0]"); \
if(CCTKGROUPNUM_realcharfuncs == -1) CCTKGROUPNUM_realcharfuncs = CCTK_GroupIndex("NULLVARS::realcharfuncs"); \
if(CCTKARGNUM_bcs == -1) CCTKARGNUM_bcs = CCTK_VarIndex("NULLVARS::bcs[0]"); \
if(CCTKARGNUM_boundary_maskn == -1) CCTKARGNUM_boundary_maskn = CCTK_VarIndex("NULLVARS::boundary_maskn"); \
if(CCTKGROUPNUM_null_mask == -1) CCTKGROUPNUM_null_mask = CCTK_GroupIndex("NULLVARS::null_mask"); \
if(CCTKARGNUM_boundary_masks == -1) CCTKARGNUM_boundary_masks = CCTK_VarIndex("NULLVARS::boundary_masks"); \
if(CCTKARGNUM_cbcn == -1) CCTKARGNUM_cbcn = CCTK_VarIndex("NULLVARS::cbcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_aux == -1) CCTKGROUPNUM_cmplxcharfuncs_aux = CCTK_GroupIndex("NULLVARS::cmplxcharfuncs_aux"); \
if(CCTKARGNUM_cbcs == -1) CCTKARGNUM_cbcs = CCTK_VarIndex("NULLVARS::cbcs[0]"); \
if(CCTKARGNUM_ckcn == -1) CCTKARGNUM_ckcn = CCTK_VarIndex("NULLVARS::ckcn[0]"); \
if(CCTKARGNUM_ckcs == -1) CCTKARGNUM_ckcs = CCTK_VarIndex("NULLVARS::ckcs[0]"); \
if(CCTKARGNUM_constant_uBondi == -1) CCTKARGNUM_constant_uBondi = CCTK_VarIndex("NULLNEWS::constant_uBondi"); \
if(CCTKGROUPNUM_constant_uBondi == -1) CCTKGROUPNUM_constant_uBondi = CCTK_GroupIndex("NULLNEWS::constant_uBondi"); \
if(CCTKARGNUM_courant_min_time == -1) CCTKARGNUM_courant_min_time = CCTK_VarIndex("TIME::courant_min_time"); \
if(CCTKGROUPNUM_speedvars == -1) CCTKGROUPNUM_speedvars = CCTK_GroupIndex("TIME::speedvars"); \
if(CCTKARGNUM_courant_wave_speed == -1) CCTKARGNUM_courant_wave_speed = CCTK_VarIndex("TIME::courant_wave_speed"); \
if(CCTKARGNUM_dxjcn == -1) CCTKARGNUM_dxjcn = CCTK_VarIndex("NULLVARS::dxjcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_basic == -1) CCTKGROUPNUM_cmplxcharfuncs_basic = CCTK_GroupIndex("NULLVARS::cmplxcharfuncs_basic"); \
if(CCTKARGNUM_dxjcs == -1) CCTKARGNUM_dxjcs = CCTK_VarIndex("NULLVARS::dxjcs[0]"); \
if(CCTKARGNUM_eth2jcn == -1) CCTKARGNUM_eth2jcn = CCTK_VarIndex("NULLVARS::eth2jcn[0]"); \
if(CCTKARGNUM_eth2jcs == -1) CCTKARGNUM_eth2jcs = CCTK_VarIndex("NULLVARS::eth2jcs[0]"); \
if(CCTKARGNUM_evolution_maskn == -1) CCTKARGNUM_evolution_maskn = CCTK_VarIndex("NULLVARS::evolution_maskn"); \
if(CCTKARGNUM_evolution_masks == -1) CCTKARGNUM_evolution_masks = CCTK_VarIndex("NULLVARS::evolution_masks"); \
if(CCTKARGNUM_evolution_radius == -1) CCTKARGNUM_evolution_radius = CCTK_VarIndex("NULLINTERP::evolution_radius"); \
if(CCTKGROUPNUM_evolution_radius == -1) CCTKGROUPNUM_evolution_radius = CCTK_GroupIndex("NULLINTERP::evolution_radius"); \
if(CCTKARGNUM_guard_mask == -1) CCTKARGNUM_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
if(CCTKGROUPNUM_guard_mask == -1) CCTKGROUPNUM_guard_mask = CCTK_GroupIndex("NULLGRID::guard_mask"); \
if(CCTKARGNUM_jcn == -1) CCTKARGNUM_jcn = CCTK_VarIndex("NULLVARS::jcn[0]"); \
if(CCTKARGNUM_jcs == -1) CCTKARGNUM_jcs = CCTK_VarIndex("NULLVARS::jcs[0]"); \
if(CCTKARGNUM_linStrain == -1) CCTKARGNUM_linStrain = CCTK_VarIndex("NULLNEWS::linStrain[0]"); \
if(CCTKGROUPNUM_linStrain == -1) CCTKGROUPNUM_linStrain = CCTK_GroupIndex("NULLNEWS::linStrain"); \
if(CCTKARGNUM_linStrain_past == -1) CCTKARGNUM_linStrain_past = CCTK_VarIndex("NULLNEWS::linStrain_past[0]"); \
if(CCTKGROUPNUM_linStrain_past == -1) CCTKGROUPNUM_linStrain_past = CCTK_GroupIndex("NULLNEWS::linStrain_past"); \
if(CCTKARGNUM_linStrain_uBondi == -1) CCTKARGNUM_linStrain_uBondi = CCTK_VarIndex("NULLNEWS::linStrain_uBondi[0]"); \
if(CCTKGROUPNUM_linStrain_uBondi == -1) CCTKGROUPNUM_linStrain_uBondi = CCTK_GroupIndex("NULLNEWS::linStrain_uBondi"); \
if(CCTKARGNUM_nucn == -1) CCTKARGNUM_nucn = CCTK_VarIndex("NULLVARS::nucn[0]"); \
if(CCTKARGNUM_nucs == -1) CCTKARGNUM_nucs = CCTK_VarIndex("NULLVARS::nucs[0]"); \
if(CCTKARGNUM_null_delta == -1) CCTKARGNUM_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
if(CCTKGROUPNUM_NullGrParArrR == -1) CCTKGROUPNUM_NullGrParArrR = CCTK_GroupIndex("NULLGRID::NullGrParArrR"); \
if(CCTKARGNUM_null_dx == -1) CCTKARGNUM_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
if(CCTKGROUPNUM_NullSclr == -1) CCTKGROUPNUM_NullSclr = CCTK_GroupIndex("NULLGRID::NullSclr"); \
if(CCTKARGNUM_null_gsh == -1) CCTKARGNUM_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
if(CCTKGROUPNUM_NullGrParArrI == -1) CCTKGROUPNUM_NullGrParArrI = CCTK_GroupIndex("NULLGRID::NullGrParArrI"); \
if(CCTKARGNUM_null_lbnd == -1) CCTKARGNUM_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
if(CCTKARGNUM_null_lsh == -1) CCTKARGNUM_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
if(CCTKARGNUM_null_rb == -1) CCTKARGNUM_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
if(CCTKGROUPNUM_RadCrd == -1) CCTKGROUPNUM_RadCrd = CCTK_GroupIndex("NULLGRID::RadCrd"); \
if(CCTKARGNUM_null_rbh == -1) CCTKARGNUM_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
if(CCTKARGNUM_null_ubnd == -1) CCTKARGNUM_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
if(CCTKARGNUM_null_xb == -1) CCTKARGNUM_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
if(CCTKARGNUM_null_xbh == -1) CCTKARGNUM_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
if(CCTKARGNUM_omegan == -1) CCTKARGNUM_omegan = CCTK_VarIndex("NULLNEWS::omegan[0]"); \
if(CCTKGROUPNUM_omega == -1) CCTKGROUPNUM_omega = CCTK_GroupIndex("NULLNEWS::omega"); \
if(CCTKARGNUM_omegao == -1) CCTKARGNUM_omegao = CCTK_VarIndex("NULLNEWS::omegao[0]"); \
if(CCTKARGNUM_qcn == -1) CCTKARGNUM_qcn = CCTK_VarIndex("NULLVARS::qcn[0]"); \
if(CCTKARGNUM_qcs == -1) CCTKARGNUM_qcs = CCTK_VarIndex("NULLVARS::qcs[0]"); \
if(CCTKARGNUM_qsize == -1) CCTKARGNUM_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
if(CCTKARGNUM_stereo_p == -1) CCTKARGNUM_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
if(CCTKGROUPNUM_StCrd == -1) CCTKGROUPNUM_StCrd = CCTK_GroupIndex("NULLGRID::StCrd"); \
if(CCTKARGNUM_stereo_pp == -1) CCTKARGNUM_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
if(CCTKARGNUM_stereo_q == -1) CCTKARGNUM_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
if(CCTKARGNUM_time_of_news == -1) CCTKARGNUM_time_of_news = CCTK_VarIndex("NULLNEWS::time_of_news"); \
if(CCTKGROUPNUM_time_of_news == -1) CCTKGROUPNUM_time_of_news = CCTK_GroupIndex("NULLNEWS::time_of_news"); \
if(CCTKARGNUM_tmp_cgfn == -1) CCTKARGNUM_tmp_cgfn = CCTK_VarIndex("NULLINTERP::tmp_cgfn"); \
if(CCTKGROUPNUM_tmp_cgf == -1) CCTKGROUPNUM_tmp_cgf = CCTK_GroupIndex("NULLINTERP::tmp_cgf"); \
if(CCTKARGNUM_tmp_cgfn1 == -1) CCTKARGNUM_tmp_cgfn1 = CCTK_VarIndex("NULLINTERP::tmp_cgfn1"); \
if(CCTKGROUPNUM_tmp_cgf3 == -1) CCTKGROUPNUM_tmp_cgf3 = CCTK_GroupIndex("NULLINTERP::tmp_cgf3"); \
if(CCTKARGNUM_tmp_cgfn2 == -1) CCTKARGNUM_tmp_cgfn2 = CCTK_VarIndex("NULLINTERP::tmp_cgfn2"); \
if(CCTKARGNUM_tmp_cgfn3 == -1) CCTKARGNUM_tmp_cgfn3 = CCTK_VarIndex("NULLINTERP::tmp_cgfn3"); \
if(CCTKARGNUM_tmp_cgfs == -1) CCTKARGNUM_tmp_cgfs = CCTK_VarIndex("NULLINTERP::tmp_cgfs"); \
if(CCTKARGNUM_tmp_cgfs1 == -1) CCTKARGNUM_tmp_cgfs1 = CCTK_VarIndex("NULLINTERP::tmp_cgfs1"); \
if(CCTKARGNUM_tmp_cgfs2 == -1) CCTKARGNUM_tmp_cgfs2 = CCTK_VarIndex("NULLINTERP::tmp_cgfs2"); \
if(CCTKARGNUM_tmp_cgfs3 == -1) CCTKARGNUM_tmp_cgfs3 = CCTK_VarIndex("NULLINTERP::tmp_cgfs3"); \
if(CCTKARGNUM_tmp_rgfn == -1) CCTKARGNUM_tmp_rgfn = CCTK_VarIndex("NULLINTERP::tmp_rgfn"); \
if(CCTKGROUPNUM_tmp_rgf == -1) CCTKGROUPNUM_tmp_rgf = CCTK_GroupIndex("NULLINTERP::tmp_rgf"); \
if(CCTKARGNUM_tmp_rgfs == -1) CCTKARGNUM_tmp_rgfs = CCTK_VarIndex("NULLINTERP::tmp_rgfs"); \
if(CCTKARGNUM_uBondi == -1) CCTKARGNUM_uBondi = CCTK_VarIndex("NULLNEWS::uBondi[0]"); \
if(CCTKGROUPNUM_uBondi == -1) CCTKGROUPNUM_uBondi = CCTK_GroupIndex("NULLNEWS::uBondi"); \
if(CCTKARGNUM_uBondi_past == -1) CCTKARGNUM_uBondi_past = CCTK_VarIndex("NULLNEWS::uBondi_past[0]"); \
if(CCTKGROUPNUM_uBondi_past == -1) CCTKGROUPNUM_uBondi_past = CCTK_GroupIndex("NULLNEWS::uBondi_past"); \
if(CCTKARGNUM_ucn == -1) CCTKARGNUM_ucn = CCTK_VarIndex("NULLVARS::ucn[0]"); \
if(CCTKARGNUM_ucs == -1) CCTKARGNUM_ucs = CCTK_VarIndex("NULLVARS::ucs[0]"); \
if(CCTKARGNUM_wcn == -1) CCTKARGNUM_wcn = CCTK_VarIndex("NULLVARS::wcn[0]"); \
if(CCTKARGNUM_wcs == -1) CCTKARGNUM_wcs = CCTK_VarIndex("NULLVARS::wcs[0]"); \
if(CCTKARGNUM_zeta == -1) CCTKARGNUM_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
if(CCTKGROUPNUM_StCmCrd == -1) CCTKGROUPNUM_StCmCrd = CCTK_GroupIndex("NULLGRID::StCmCrd");

#define NULLPSIINT_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *

#define PASS_NULLPSIINT_PUBLIC_C2F(GH) \
PASS_GROUPLEN(NULLNEWS, JJ_l),\
PASS_GROUPLEN(NullPsiInt, NewsB_Psi),\
PASS_GROUPLEN(NULLNEWS, NewsB),\
PASS_GROUPLEN(NullPsiInt, NewsB_mask),\
PASS_GROUPLEN(NULLNEWS, NewsB_past),\
PASS_GROUPLEN(NULLNEWS, NewsB_uBondi),\
PASS_GROUPLEN(NULLNEWS, News),\
PASS_GROUPLEN(NULLNEWS, News_past),\
PASS_GROUPLEN(NULLNEWS, News_uBondi),\
PASS_GROUPLEN(NULLNEWS, Psi4),\
PASS_GROUPLEN(NullPsiInt, Psi4_mask),\
PASS_GROUPLEN(NULLNEWS, Psi4_past),\
PASS_GROUPLEN(NULLNEWS, Psi4_uBondi),\
PASS_GROUPSIZE(EG_mask, 0),\
PASS_GROUPSIZE(EQ_mask, 0),\
PASS_GROUPSIZE(EV_mask, 0),\
PASS_GROUPSIZE(JJ_l, 0),\
PASS_GROUPSIZE(News, 0),\
PASS_GROUPSIZE(NewsB, 0),\
PASS_GROUPSIZE(NewsB_Psi, 0),\
PASS_GROUPSIZE(NewsB_mask, 0),\
PASS_GROUPSIZE(NewsB_past, 0),\
PASS_GROUPSIZE(NewsB_uBondi, 0),\
PASS_GROUPSIZE(News_past, 0),\
PASS_GROUPSIZE(News_uBondi, 0),\
PASS_GROUPSIZE(NullGrParArrI, 0),\
PASS_GROUPSIZE(NullGrParArrR, 0),\
PASS_GROUPSIZE(Psi4, 0),\
PASS_GROUPSIZE(Psi4_mask, 0),\
PASS_GROUPSIZE(Psi4_past, 0),\
PASS_GROUPSIZE(Psi4_uBondi, 0),\
PASS_GROUPSIZE(RadCrd, 0),\
PASS_GROUPSIZE(StCmCrd, 0),\
PASS_GROUPSIZE(StCrd, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_aux, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 0),\
PASS_GROUPSIZE(guard_mask, 0),\
PASS_GROUPSIZE(linStrain, 0),\
PASS_GROUPSIZE(linStrain_past, 0),\
PASS_GROUPSIZE(linStrain_uBondi, 0),\
PASS_GROUPSIZE(null_mask, 0),\
PASS_GROUPSIZE(omega, 0),\
PASS_GROUPSIZE(realcharfuncs, 0),\
PASS_GROUPSIZE(tmp_cgf, 0),\
PASS_GROUPSIZE(tmp_cgf3, 0),\
PASS_GROUPSIZE(tmp_rgf, 0),\
PASS_GROUPSIZE(uBondi, 0),\
PASS_GROUPSIZE(uBondi_past, 0),\
PASS_GROUPSIZE(EG_mask, 1),\
PASS_GROUPSIZE(EQ_mask, 1),\
PASS_GROUPSIZE(EV_mask, 1),\
PASS_GROUPSIZE(JJ_l, 1),\
PASS_GROUPSIZE(News, 1),\
PASS_GROUPSIZE(NewsB, 1),\
PASS_GROUPSIZE(NewsB_Psi, 1),\
PASS_GROUPSIZE(NewsB_mask, 1),\
PASS_GROUPSIZE(NewsB_past, 1),\
PASS_GROUPSIZE(NewsB_uBondi, 1),\
PASS_GROUPSIZE(News_past, 1),\
PASS_GROUPSIZE(News_uBondi, 1),\
PASS_GROUPSIZE(Psi4, 1),\
PASS_GROUPSIZE(Psi4_mask, 1),\
PASS_GROUPSIZE(Psi4_past, 1),\
PASS_GROUPSIZE(Psi4_uBondi, 1),\
PASS_GROUPSIZE(StCmCrd, 1),\
PASS_GROUPSIZE(StCrd, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_aux, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 1),\
PASS_GROUPSIZE(guard_mask, 1),\
PASS_GROUPSIZE(linStrain, 1),\
PASS_GROUPSIZE(linStrain_past, 1),\
PASS_GROUPSIZE(linStrain_uBondi, 1),\
PASS_GROUPSIZE(null_mask, 1),\
PASS_GROUPSIZE(omega, 1),\
PASS_GROUPSIZE(realcharfuncs, 1),\
PASS_GROUPSIZE(tmp_cgf, 1),\
PASS_GROUPSIZE(tmp_cgf3, 1),\
PASS_GROUPSIZE(tmp_rgf, 1),\
PASS_GROUPSIZE(uBondi, 1),\
PASS_GROUPSIZE(uBondi_past, 1),\
PASS_GROUPLEN(NULLVARS, cmplxcharfuncs_aux),\
PASS_GROUPLEN(NULLVARS, cmplxcharfuncs_basic),\
PASS_GROUPLEN(NULLNEWS, linStrain),\
PASS_GROUPLEN(NULLNEWS, linStrain_past),\
PASS_GROUPLEN(NULLNEWS, linStrain_uBondi),\
PASS_GROUPLEN(NULLNEWS, omega),\
PASS_GROUPLEN(NULLVARS, realcharfuncs),\
PASS_GROUPLEN(NULLNEWS, uBondi),\
PASS_GROUPLEN(NULLNEWS, uBondi_past),\
(CCTK_INT *)(PASS_REFERENCE(EG_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EQ_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EV_mask, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Jn_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Jo_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(News, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(NewsB, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(NewsB_Psi, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(NewsB_mask, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(NewsB_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(NewsB_uBondi, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(News_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(News_uBondi, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Psi4, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Psi4_mask, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Psi4_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Psi4_uBondi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_masks, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(constant_uBondi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(courant_min_time, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(courant_wave_speed, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_masks, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(evolution_radius, 0)),\
(CCTK_INT *)(PASS_REFERENCE(guard_mask, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(linStrain, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(linStrain_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(linStrain_uBondi, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(null_delta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_dx, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_gsh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lbnd, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lsh, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rbh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_ubnd, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xbh, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(omegan, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(omegao, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(qsize, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_pp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_q, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(time_of_news, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn3, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(uBondi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(uBondi_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(zeta, 0))

#endif /* CCODE */

#ifdef FCODE
#define NULLPSIINT_FARGUMENTS _CCTK_FARGUMENTS, NULLPSIINT_PRIVATE_FARGUMENTS, NULLPSIINT_PUBLIC_FARGUMENTS

#define DECLARE_NULLPSIINT_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_NULLPSIINT_PRIVATE_FARGUMENTS DECLARE_NULLPSIINT_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLPSIINT_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_NULLPSIINT_PRIVATE_CARGUMENTS DECLARE_NULLPSIINT_PUBLIC_CARGUMENTS

#define NULLPSIINT_C2F_PROTO _CCTK_C2F_PROTO, NULLPSIINT_PRIVATE_C2F_PROTO, NULLPSIINT_PUBLIC_C2F_PROTO

#define PASS_NULLPSIINT_C2F(GH) _PASS_CCTK_C2F(GH), PASS_NULLPSIINT_PRIVATE_C2F(GH), PASS_NULLPSIINT_PUBLIC_C2F(GH)

#define DECLARE_NULLPSIINT_C2F _DECLARE_CCTK_C2F DECLARE_NULLPSIINT_PRIVATE_C2F DECLARE_NULLPSIINT_PUBLIC_C2F

#define INITIALISE_NULLPSIINT_C2F _INITIALISE_CCTK_C2F INITIALISE_NULLPSIINT_PRIVATE_C2F INITIALISE_NULLPSIINT_PUBLIC_C2F

#define NULLPSIINT_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
