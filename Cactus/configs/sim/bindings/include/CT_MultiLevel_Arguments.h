/*@@
   @header  CT_MultiLevel_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn CT_MultiLevel
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_CT_MULTILEVEL_PRIVATE_FARGUMENTS \
INTEGER auxiliaries_length&&\
INTEGER cell_integral_length&&\
INTEGER coeffs_length&&\
INTEGER copies_length&&\
INTEGER err_length&&\
INTEGER psi_length&&\
INTEGER residual_length&&\
INTEGER rhs_length&&\
CCTK_DECLARE(CCTK_REAL,ct_a0,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a0_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a0_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a1,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a1_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a1_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a2,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a2_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a2_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a3,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a3_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a3_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a4,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a4_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_a4_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_auxiliary,(cctk_ash1,cctk_ash2,cctk_ash3,auxiliaries_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c0,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c0_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c0_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c1,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c1_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c1_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c2,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c2_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c2_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c3,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c3_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c3_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c4,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c4_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_c4_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cx,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cx_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cxx,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cxx_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cxy,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cxy_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cxz,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cxz_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cy,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cy_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cyy,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cyy_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cyz,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cyz_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cz,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cz_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_cz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_czz,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_czz_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_czz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,coeffs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_err,(cctk_ash1,cctk_ash2,cctk_ash3,err_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_err_p,(cctk_ash1,cctk_ash2,cctk_ash3,err_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_err_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,err_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_err_copy,(cctk_ash1,cctk_ash2,cctk_ash3,copies_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_integrand1,(cctk_ash1,cctk_ash2,cctk_ash3,cell_integral_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_integrand2,(cctk_ash1,cctk_ash2,cctk_ash3,cell_integral_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_integrand3,(cctk_ash1,cctk_ash2,cctk_ash3,cell_integral_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_integrand4,(cctk_ash1,cctk_ash2,cctk_ash3,cell_integral_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_psi,(cctk_ash1,cctk_ash2,cctk_ash3,psi_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_psi_p,(cctk_ash1,cctk_ash2,cctk_ash3,psi_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_psi_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,psi_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_psi_copy,(cctk_ash1,cctk_ash2,cctk_ash3,copies_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_residual,(cctk_ash1,cctk_ash2,cctk_ash3,residual_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_residual_p,(cctk_ash1,cctk_ash2,cctk_ash3,residual_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_residual_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,residual_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_residual_above,(cctk_ash1,cctk_ash2,cctk_ash3,residual_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_residual_above_p,(cctk_ash1,cctk_ash2,cctk_ash3,residual_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_residual_above_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,residual_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_residual_above_copy,(cctk_ash1,cctk_ash2,cctk_ash3,copies_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_residual_copy,(cctk_ash1,cctk_ash2,cctk_ash3,copies_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_rhs,(cctk_ash1,cctk_ash2,cctk_ash3,rhs_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_terr,(cctk_ash1,cctk_ash2,cctk_ash3,err_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_terr_p,(cctk_ash1,cctk_ash2,cctk_ash3,err_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_terr_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,err_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_trunc,(cctk_ash1,cctk_ash2,cctk_ash3,err_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_trunc_p,(cctk_ash1,cctk_ash2,cctk_ash3,err_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_trunc_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,err_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_trunc_copy,(cctk_ash1,cctk_ash2,cctk_ash3,copies_length))&&\
CCTK_DECLARE(CCTK_REAL,ct_zero,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define CT_MULTILEVEL_PRIVATE_FARGUMENTS \
auxiliaries_length,cell_integral_length,coeffs_length,copies_length,err_length,psi_length,residual_length,rhs_length,ct_a0,ct_a0_p,ct_a0_p_p,ct_a1,ct_a1_p,ct_a1_p_p,ct_a2,ct_a2_p,ct_a2_p_p,ct_a3,ct_a3_p,ct_a3_p_p,ct_a4,ct_a4_p,ct_a4_p_p,ct_auxiliary,ct_c0,ct_c0_p,ct_c0_p_p,ct_c1,ct_c1_p,ct_c1_p_p,ct_c2,ct_c2_p,ct_c2_p_p,ct_c3,ct_c3_p,ct_c3_p_p,ct_c4,ct_c4_p,ct_c4_p_p,ct_cx,ct_cx_p,ct_cx_p_p,ct_cxx,ct_cxx_p,ct_cxx_p_p,ct_cxy,ct_cxy_p,ct_cxy_p_p,ct_cxz,ct_cxz_p,ct_cxz_p_p,ct_cy,ct_cy_p,ct_cy_p_p,ct_cyy,ct_cyy_p,ct_cyy_p_p,ct_cyz,ct_cyz_p,ct_cyz_p_p,ct_cz,ct_cz_p,ct_cz_p_p,ct_czz,ct_czz_p,ct_czz_p_p,ct_err,ct_err_p,ct_err_p_p,ct_err_copy,ct_integrand1,ct_integrand2,ct_integrand3,ct_integrand4,ct_psi,ct_psi_p,ct_psi_p_p,ct_psi_copy,ct_residual,ct_residual_p,ct_residual_p_p,ct_residual_above,ct_residual_above_p,ct_residual_above_p_p,ct_residual_above_copy,ct_residual_copy,ct_rhs,ct_terr,ct_terr_p,ct_terr_p_p,ct_trunc,ct_trunc_p,ct_trunc_p_p,ct_trunc_copy,ct_zero

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CT_MULTILEVEL_PRIVATE_CARGUMENTS \
static int cctki_vi_ct_a0 = -100; \
if (cctki_vi_ct_a0 == -100) cctki_vi_ct_a0 = CCTK_VarIndex("CT_MultiLevel::ct_a0[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_a0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a0_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_a0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a0_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_a0)); \
static int cctki_vi_ct_a1 = -100; \
if (cctki_vi_ct_a1 == -100) cctki_vi_ct_a1 = CCTK_VarIndex("CT_MultiLevel::ct_a1[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_a1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a1_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_a1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a1_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_a1)); \
static int cctki_vi_ct_a2 = -100; \
if (cctki_vi_ct_a2 == -100) cctki_vi_ct_a2 = CCTK_VarIndex("CT_MultiLevel::ct_a2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_a2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_a2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_a2)); \
static int cctki_vi_ct_a3 = -100; \
if (cctki_vi_ct_a3 == -100) cctki_vi_ct_a3 = CCTK_VarIndex("CT_MultiLevel::ct_a3[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_a3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a3_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_a3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a3_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_a3)); \
static int cctki_vi_ct_a4 = -100; \
if (cctki_vi_ct_a4 == -100) cctki_vi_ct_a4 = CCTK_VarIndex("CT_MultiLevel::ct_a4[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a4, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_a4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a4_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_a4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_a4_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_a4)); \
static int cctki_vi_ct_auxiliary = -100; \
if (cctki_vi_ct_auxiliary == -100) cctki_vi_ct_auxiliary = CCTK_VarIndex("CT_MultiLevel::ct_auxiliary[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_auxiliary, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_auxiliary)); \
static int cctki_vi_ct_c0 = -100; \
if (cctki_vi_ct_c0 == -100) cctki_vi_ct_c0 = CCTK_VarIndex("CT_MultiLevel::ct_c0[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_c0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c0_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_c0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c0_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_c0)); \
static int cctki_vi_ct_c1 = -100; \
if (cctki_vi_ct_c1 == -100) cctki_vi_ct_c1 = CCTK_VarIndex("CT_MultiLevel::ct_c1[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_c1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c1_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_c1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c1_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_c1)); \
static int cctki_vi_ct_c2 = -100; \
if (cctki_vi_ct_c2 == -100) cctki_vi_ct_c2 = CCTK_VarIndex("CT_MultiLevel::ct_c2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_c2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_c2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_c2)); \
static int cctki_vi_ct_c3 = -100; \
if (cctki_vi_ct_c3 == -100) cctki_vi_ct_c3 = CCTK_VarIndex("CT_MultiLevel::ct_c3[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_c3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c3_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_c3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c3_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_c3)); \
static int cctki_vi_ct_c4 = -100; \
if (cctki_vi_ct_c4 == -100) cctki_vi_ct_c4 = CCTK_VarIndex("CT_MultiLevel::ct_c4[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c4, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_c4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c4_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_c4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_c4_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_c4)); \
static int cctki_vi_ct_cx = -100; \
if (cctki_vi_ct_cx == -100) cctki_vi_ct_cx = CCTK_VarIndex("CT_MultiLevel::ct_cx[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_cx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_cx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_cx)); \
static int cctki_vi_ct_cxx = -100; \
if (cctki_vi_ct_cxx == -100) cctki_vi_ct_cxx = CCTK_VarIndex("CT_MultiLevel::ct_cxx[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_cxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_cxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_cxx)); \
static int cctki_vi_ct_cxy = -100; \
if (cctki_vi_ct_cxy == -100) cctki_vi_ct_cxy = CCTK_VarIndex("CT_MultiLevel::ct_cxy[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_cxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_cxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_cxy)); \
static int cctki_vi_ct_cxz = -100; \
if (cctki_vi_ct_cxz == -100) cctki_vi_ct_cxz = CCTK_VarIndex("CT_MultiLevel::ct_cxz[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_cxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_cxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_cxz)); \
static int cctki_vi_ct_cy = -100; \
if (cctki_vi_ct_cy == -100) cctki_vi_ct_cy = CCTK_VarIndex("CT_MultiLevel::ct_cy[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_cy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_cy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_cy)); \
static int cctki_vi_ct_cyy = -100; \
if (cctki_vi_ct_cyy == -100) cctki_vi_ct_cyy = CCTK_VarIndex("CT_MultiLevel::ct_cyy[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_cyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_cyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_cyy)); \
static int cctki_vi_ct_cyz = -100; \
if (cctki_vi_ct_cyz == -100) cctki_vi_ct_cyz = CCTK_VarIndex("CT_MultiLevel::ct_cyz[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_cyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_cyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_cyz)); \
static int cctki_vi_ct_cz = -100; \
if (cctki_vi_ct_cz == -100) cctki_vi_ct_cz = CCTK_VarIndex("CT_MultiLevel::ct_cz[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_cz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_cz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_cz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_cz)); \
static int cctki_vi_ct_czz = -100; \
if (cctki_vi_ct_czz == -100) cctki_vi_ct_czz = CCTK_VarIndex("CT_MultiLevel::ct_czz[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_czz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_czz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_czz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_czz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_czz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_czz)); \
static int cctki_vi_ct_err = -100; \
if (cctki_vi_ct_err == -100) cctki_vi_ct_err = CCTK_VarIndex("CT_MultiLevel::ct_err[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_err, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_err)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_err_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_err)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_err_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_err)); \
static int cctki_vi_ct_err_copy = -100; \
if (cctki_vi_ct_err_copy == -100) cctki_vi_ct_err_copy = CCTK_VarIndex("CT_MultiLevel::ct_err_copy[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_err_copy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_err_copy)); \
static int cctki_vi_ct_integrand1 = -100; \
if (cctki_vi_ct_integrand1 == -100) cctki_vi_ct_integrand1 = CCTK_VarIndex("CT_MultiLevel::ct_integrand1[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_integrand1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_integrand1)); \
static int cctki_vi_ct_integrand2 = -100; \
if (cctki_vi_ct_integrand2 == -100) cctki_vi_ct_integrand2 = CCTK_VarIndex("CT_MultiLevel::ct_integrand2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_integrand2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_integrand2)); \
static int cctki_vi_ct_integrand3 = -100; \
if (cctki_vi_ct_integrand3 == -100) cctki_vi_ct_integrand3 = CCTK_VarIndex("CT_MultiLevel::ct_integrand3[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_integrand3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_integrand3)); \
static int cctki_vi_ct_integrand4 = -100; \
if (cctki_vi_ct_integrand4 == -100) cctki_vi_ct_integrand4 = CCTK_VarIndex("CT_MultiLevel::ct_integrand4[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_integrand4, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_integrand4)); \
static int cctki_vi_ct_psi = -100; \
if (cctki_vi_ct_psi == -100) cctki_vi_ct_psi = CCTK_VarIndex("CT_MultiLevel::ct_psi[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_psi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_psi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_psi_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_psi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_psi_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_psi)); \
static int cctki_vi_ct_psi_copy = -100; \
if (cctki_vi_ct_psi_copy == -100) cctki_vi_ct_psi_copy = CCTK_VarIndex("CT_MultiLevel::ct_psi_copy[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_psi_copy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_psi_copy)); \
static int cctki_vi_ct_residual = -100; \
if (cctki_vi_ct_residual == -100) cctki_vi_ct_residual = CCTK_VarIndex("CT_MultiLevel::ct_residual[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_residual, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_residual)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_residual_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_residual)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_residual_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_residual)); \
static int cctki_vi_ct_residual_above = -100; \
if (cctki_vi_ct_residual_above == -100) cctki_vi_ct_residual_above = CCTK_VarIndex("CT_MultiLevel::ct_residual_above[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_residual_above, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_residual_above)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_residual_above_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_residual_above)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_residual_above_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_residual_above)); \
static int cctki_vi_ct_residual_above_copy = -100; \
if (cctki_vi_ct_residual_above_copy == -100) cctki_vi_ct_residual_above_copy = CCTK_VarIndex("CT_MultiLevel::ct_residual_above_copy[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_residual_above_copy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_residual_above_copy)); \
static int cctki_vi_ct_residual_copy = -100; \
if (cctki_vi_ct_residual_copy == -100) cctki_vi_ct_residual_copy = CCTK_VarIndex("CT_MultiLevel::ct_residual_copy[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_residual_copy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_residual_copy)); \
static int cctki_vi_ct_rhs = -100; \
if (cctki_vi_ct_rhs == -100) cctki_vi_ct_rhs = CCTK_VarIndex("CT_MultiLevel::ct_rhs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_rhs)); \
static int cctki_vi_ct_terr = -100; \
if (cctki_vi_ct_terr == -100) cctki_vi_ct_terr = CCTK_VarIndex("CT_MultiLevel::ct_terr[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_terr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_terr)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_terr_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_terr)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_terr_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_terr)); \
static int cctki_vi_ct_trunc = -100; \
if (cctki_vi_ct_trunc == -100) cctki_vi_ct_trunc = CCTK_VarIndex("CT_MultiLevel::ct_trunc[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_trunc, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_trunc)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_trunc_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ct_trunc)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_trunc_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_ct_trunc)); \
static int cctki_vi_ct_trunc_copy = -100; \
if (cctki_vi_ct_trunc_copy == -100) cctki_vi_ct_trunc_copy = CCTK_VarIndex("CT_MultiLevel::ct_trunc_copy[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_trunc_copy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_trunc_copy)); \
static int cctki_vi_ct_zero = -100; \
if (cctki_vi_ct_zero == -100) cctki_vi_ct_zero = CCTK_VarIndex("CT_MultiLevel::ct_zero"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ct_zero, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ct_zero));

#define DECLARE_CT_MULTILEVEL_PRIVATE_C2F \
static int CCTKARGNUM_ct_a0 = -1; \
static int CCTKGROUPNUM_coeffs = -1; \
static int CCTKARGNUM_ct_a1 = -1; \
static int CCTKARGNUM_ct_a2 = -1; \
static int CCTKARGNUM_ct_a3 = -1; \
static int CCTKARGNUM_ct_a4 = -1; \
static int CCTKARGNUM_ct_auxiliary = -1; \
static int CCTKGROUPNUM_auxiliaries = -1; \
static int CCTKARGNUM_ct_c0 = -1; \
static int CCTKARGNUM_ct_c1 = -1; \
static int CCTKARGNUM_ct_c2 = -1; \
static int CCTKARGNUM_ct_c3 = -1; \
static int CCTKARGNUM_ct_c4 = -1; \
static int CCTKARGNUM_ct_cx = -1; \
static int CCTKARGNUM_ct_cxx = -1; \
static int CCTKARGNUM_ct_cxy = -1; \
static int CCTKARGNUM_ct_cxz = -1; \
static int CCTKARGNUM_ct_cy = -1; \
static int CCTKARGNUM_ct_cyy = -1; \
static int CCTKARGNUM_ct_cyz = -1; \
static int CCTKARGNUM_ct_cz = -1; \
static int CCTKARGNUM_ct_czz = -1; \
static int CCTKARGNUM_ct_err = -1; \
static int CCTKGROUPNUM_err = -1; \
static int CCTKARGNUM_ct_err_copy = -1; \
static int CCTKGROUPNUM_copies = -1; \
static int CCTKARGNUM_ct_integrand1 = -1; \
static int CCTKGROUPNUM_cell_integral = -1; \
static int CCTKARGNUM_ct_integrand2 = -1; \
static int CCTKARGNUM_ct_integrand3 = -1; \
static int CCTKARGNUM_ct_integrand4 = -1; \
static int CCTKARGNUM_ct_psi = -1; \
static int CCTKGROUPNUM_psi = -1; \
static int CCTKARGNUM_ct_psi_copy = -1; \
static int CCTKARGNUM_ct_residual = -1; \
static int CCTKGROUPNUM_residual = -1; \
static int CCTKARGNUM_ct_residual_above = -1; \
static int CCTKARGNUM_ct_residual_above_copy = -1; \
static int CCTKARGNUM_ct_residual_copy = -1; \
static int CCTKARGNUM_ct_rhs = -1; \
static int CCTKGROUPNUM_rhs = -1; \
static int CCTKARGNUM_ct_terr = -1; \
static int CCTKARGNUM_ct_trunc = -1; \
static int CCTKARGNUM_ct_trunc_copy = -1; \
static int CCTKARGNUM_ct_zero = -1; \
static int CCTKGROUPNUM_constants = -1;

#define INITIALISE_CT_MULTILEVEL_PRIVATE_C2F \
if(CCTKARGNUM_ct_a0 == -1) CCTKARGNUM_ct_a0 = CCTK_VarIndex("CT_MultiLevel::ct_a0[0]"); \
if(CCTKGROUPNUM_coeffs == -1) CCTKGROUPNUM_coeffs = CCTK_GroupIndex("CT_MultiLevel::coeffs"); \
if(CCTKARGNUM_ct_a1 == -1) CCTKARGNUM_ct_a1 = CCTK_VarIndex("CT_MultiLevel::ct_a1[0]"); \
if(CCTKARGNUM_ct_a2 == -1) CCTKARGNUM_ct_a2 = CCTK_VarIndex("CT_MultiLevel::ct_a2[0]"); \
if(CCTKARGNUM_ct_a3 == -1) CCTKARGNUM_ct_a3 = CCTK_VarIndex("CT_MultiLevel::ct_a3[0]"); \
if(CCTKARGNUM_ct_a4 == -1) CCTKARGNUM_ct_a4 = CCTK_VarIndex("CT_MultiLevel::ct_a4[0]"); \
if(CCTKARGNUM_ct_auxiliary == -1) CCTKARGNUM_ct_auxiliary = CCTK_VarIndex("CT_MultiLevel::ct_auxiliary[0]"); \
if(CCTKGROUPNUM_auxiliaries == -1) CCTKGROUPNUM_auxiliaries = CCTK_GroupIndex("CT_MultiLevel::auxiliaries"); \
if(CCTKARGNUM_ct_c0 == -1) CCTKARGNUM_ct_c0 = CCTK_VarIndex("CT_MultiLevel::ct_c0[0]"); \
if(CCTKARGNUM_ct_c1 == -1) CCTKARGNUM_ct_c1 = CCTK_VarIndex("CT_MultiLevel::ct_c1[0]"); \
if(CCTKARGNUM_ct_c2 == -1) CCTKARGNUM_ct_c2 = CCTK_VarIndex("CT_MultiLevel::ct_c2[0]"); \
if(CCTKARGNUM_ct_c3 == -1) CCTKARGNUM_ct_c3 = CCTK_VarIndex("CT_MultiLevel::ct_c3[0]"); \
if(CCTKARGNUM_ct_c4 == -1) CCTKARGNUM_ct_c4 = CCTK_VarIndex("CT_MultiLevel::ct_c4[0]"); \
if(CCTKARGNUM_ct_cx == -1) CCTKARGNUM_ct_cx = CCTK_VarIndex("CT_MultiLevel::ct_cx[0]"); \
if(CCTKARGNUM_ct_cxx == -1) CCTKARGNUM_ct_cxx = CCTK_VarIndex("CT_MultiLevel::ct_cxx[0]"); \
if(CCTKARGNUM_ct_cxy == -1) CCTKARGNUM_ct_cxy = CCTK_VarIndex("CT_MultiLevel::ct_cxy[0]"); \
if(CCTKARGNUM_ct_cxz == -1) CCTKARGNUM_ct_cxz = CCTK_VarIndex("CT_MultiLevel::ct_cxz[0]"); \
if(CCTKARGNUM_ct_cy == -1) CCTKARGNUM_ct_cy = CCTK_VarIndex("CT_MultiLevel::ct_cy[0]"); \
if(CCTKARGNUM_ct_cyy == -1) CCTKARGNUM_ct_cyy = CCTK_VarIndex("CT_MultiLevel::ct_cyy[0]"); \
if(CCTKARGNUM_ct_cyz == -1) CCTKARGNUM_ct_cyz = CCTK_VarIndex("CT_MultiLevel::ct_cyz[0]"); \
if(CCTKARGNUM_ct_cz == -1) CCTKARGNUM_ct_cz = CCTK_VarIndex("CT_MultiLevel::ct_cz[0]"); \
if(CCTKARGNUM_ct_czz == -1) CCTKARGNUM_ct_czz = CCTK_VarIndex("CT_MultiLevel::ct_czz[0]"); \
if(CCTKARGNUM_ct_err == -1) CCTKARGNUM_ct_err = CCTK_VarIndex("CT_MultiLevel::ct_err[0]"); \
if(CCTKGROUPNUM_err == -1) CCTKGROUPNUM_err = CCTK_GroupIndex("CT_MultiLevel::err"); \
if(CCTKARGNUM_ct_err_copy == -1) CCTKARGNUM_ct_err_copy = CCTK_VarIndex("CT_MultiLevel::ct_err_copy[0]"); \
if(CCTKGROUPNUM_copies == -1) CCTKGROUPNUM_copies = CCTK_GroupIndex("CT_MultiLevel::copies"); \
if(CCTKARGNUM_ct_integrand1 == -1) CCTKARGNUM_ct_integrand1 = CCTK_VarIndex("CT_MultiLevel::ct_integrand1[0]"); \
if(CCTKGROUPNUM_cell_integral == -1) CCTKGROUPNUM_cell_integral = CCTK_GroupIndex("CT_MultiLevel::cell_integral"); \
if(CCTKARGNUM_ct_integrand2 == -1) CCTKARGNUM_ct_integrand2 = CCTK_VarIndex("CT_MultiLevel::ct_integrand2[0]"); \
if(CCTKARGNUM_ct_integrand3 == -1) CCTKARGNUM_ct_integrand3 = CCTK_VarIndex("CT_MultiLevel::ct_integrand3[0]"); \
if(CCTKARGNUM_ct_integrand4 == -1) CCTKARGNUM_ct_integrand4 = CCTK_VarIndex("CT_MultiLevel::ct_integrand4[0]"); \
if(CCTKARGNUM_ct_psi == -1) CCTKARGNUM_ct_psi = CCTK_VarIndex("CT_MultiLevel::ct_psi[0]"); \
if(CCTKGROUPNUM_psi == -1) CCTKGROUPNUM_psi = CCTK_GroupIndex("CT_MultiLevel::psi"); \
if(CCTKARGNUM_ct_psi_copy == -1) CCTKARGNUM_ct_psi_copy = CCTK_VarIndex("CT_MultiLevel::ct_psi_copy[0]"); \
if(CCTKARGNUM_ct_residual == -1) CCTKARGNUM_ct_residual = CCTK_VarIndex("CT_MultiLevel::ct_residual[0]"); \
if(CCTKGROUPNUM_residual == -1) CCTKGROUPNUM_residual = CCTK_GroupIndex("CT_MultiLevel::residual"); \
if(CCTKARGNUM_ct_residual_above == -1) CCTKARGNUM_ct_residual_above = CCTK_VarIndex("CT_MultiLevel::ct_residual_above[0]"); \
if(CCTKARGNUM_ct_residual_above_copy == -1) CCTKARGNUM_ct_residual_above_copy = CCTK_VarIndex("CT_MultiLevel::ct_residual_above_copy[0]"); \
if(CCTKARGNUM_ct_residual_copy == -1) CCTKARGNUM_ct_residual_copy = CCTK_VarIndex("CT_MultiLevel::ct_residual_copy[0]"); \
if(CCTKARGNUM_ct_rhs == -1) CCTKARGNUM_ct_rhs = CCTK_VarIndex("CT_MultiLevel::ct_rhs[0]"); \
if(CCTKGROUPNUM_rhs == -1) CCTKGROUPNUM_rhs = CCTK_GroupIndex("CT_MultiLevel::rhs"); \
if(CCTKARGNUM_ct_terr == -1) CCTKARGNUM_ct_terr = CCTK_VarIndex("CT_MultiLevel::ct_terr[0]"); \
if(CCTKARGNUM_ct_trunc == -1) CCTKARGNUM_ct_trunc = CCTK_VarIndex("CT_MultiLevel::ct_trunc[0]"); \
if(CCTKARGNUM_ct_trunc_copy == -1) CCTKARGNUM_ct_trunc_copy = CCTK_VarIndex("CT_MultiLevel::ct_trunc_copy[0]"); \
if(CCTKARGNUM_ct_zero == -1) CCTKARGNUM_ct_zero = CCTK_VarIndex("CT_MultiLevel::ct_zero"); \
if(CCTKGROUPNUM_constants == -1) CCTKGROUPNUM_constants = CCTK_GroupIndex("CT_MultiLevel::constants");

#define CT_MULTILEVEL_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int

#define PASS_CT_MULTILEVEL_PRIVATE_C2F(GH) \
PASS_GROUPLEN(CT_MultiLevel, auxiliaries),\
PASS_GROUPLEN(CT_MultiLevel, cell_integral),\
PASS_GROUPLEN(CT_MultiLevel, coeffs),\
PASS_GROUPLEN(CT_MultiLevel, copies),\
PASS_GROUPLEN(CT_MultiLevel, err),\
PASS_GROUPLEN(CT_MultiLevel, psi),\
PASS_GROUPLEN(CT_MultiLevel, residual),\
PASS_GROUPLEN(CT_MultiLevel, rhs),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a0, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a0, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a3, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a3, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a4, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_a4, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_auxiliary, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c0, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c0, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c3, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c3, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c4, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_c4, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_cz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_czz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_czz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_czz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_err, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_err, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_err, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_err_copy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_integrand1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_integrand2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_integrand3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_integrand4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_psi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_psi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_psi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_psi_copy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_residual, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_residual, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_residual, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_residual_above, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_residual_above, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_residual_above, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_residual_above_copy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_residual_copy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_terr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_terr, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_terr, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_trunc, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_trunc, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_trunc, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_trunc_copy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ct_zero, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_CT_MULTILEVEL_PROTECTED_FARGUMENTS \


#define CT_MULTILEVEL_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CT_MULTILEVEL_PROTECTED_CARGUMENTS \


#define DECLARE_CT_MULTILEVEL_PROTECTED_C2F \


#define INITIALISE_CT_MULTILEVEL_PROTECTED_C2F \


#define CT_MULTILEVEL_PROTECTED_C2F_PROTO \


#define PASS_CT_MULTILEVEL_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_CT_MULTILEVEL_PUBLIC_FARGUMENTS \
CCTK_DECLARE(CCTK_REAL,coarse_dx,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dy,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dz,)&&\
CCTK_DECLARE(CCTK_REAL,r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,x,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,y,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,z,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define CT_MULTILEVEL_PUBLIC_FARGUMENTS \
coarse_dx,coarse_dy,coarse_dz,r,x,y,z

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CT_MULTILEVEL_PUBLIC_CARGUMENTS \
static int cctki_vi_coarse_dx = -100; \
if (cctki_vi_coarse_dx == -100) cctki_vi_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dx)); \
static int cctki_vi_coarse_dy = -100; \
if (cctki_vi_coarse_dy == -100) cctki_vi_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dy)); \
static int cctki_vi_coarse_dz = -100; \
if (cctki_vi_coarse_dz == -100) cctki_vi_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dz)); \
static int cctki_vi_r = -100; \
if (cctki_vi_r == -100) cctki_vi_r = CCTK_VarIndex("GRID::r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_r)); \
static int cctki_vi_x = -100; \
if (cctki_vi_x == -100) cctki_vi_x = CCTK_VarIndex("GRID::x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x)); \
static int cctki_vi_y = -100; \
if (cctki_vi_y == -100) cctki_vi_y = CCTK_VarIndex("GRID::y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_y)); \
static int cctki_vi_z = -100; \
if (cctki_vi_z == -100) cctki_vi_z = CCTK_VarIndex("GRID::z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_z));

#define DECLARE_CT_MULTILEVEL_PUBLIC_C2F \
static int CCTKARGNUM_coarse_dx = -1; \
static int CCTKGROUPNUM_gridspacings = -1; \
static int CCTKARGNUM_coarse_dy = -1; \
static int CCTKARGNUM_coarse_dz = -1; \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_coordinates = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_z = -1;

#define INITIALISE_CT_MULTILEVEL_PUBLIC_C2F \
if(CCTKARGNUM_coarse_dx == -1) CCTKARGNUM_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
if(CCTKGROUPNUM_gridspacings == -1) CCTKGROUPNUM_gridspacings = CCTK_GroupIndex("GRID::gridspacings"); \
if(CCTKARGNUM_coarse_dy == -1) CCTKARGNUM_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
if(CCTKARGNUM_coarse_dz == -1) CCTKARGNUM_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("GRID::r"); \
if(CCTKGROUPNUM_coordinates == -1) CCTKGROUPNUM_coordinates = CCTK_GroupIndex("GRID::coordinates"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("GRID::x"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("GRID::y"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("GRID::z");

#define CT_MULTILEVEL_PUBLIC_C2F_PROTO \
CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_CT_MULTILEVEL_PUBLIC_C2F(GH) \
(CCTK_REAL *)(PASS_REFERENCE(coarse_dx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0))

#endif /* CCODE */

#ifdef FCODE
#define CT_MULTILEVEL_FARGUMENTS _CCTK_FARGUMENTS, CT_MULTILEVEL_PRIVATE_FARGUMENTS, CT_MULTILEVEL_PUBLIC_FARGUMENTS

#define DECLARE_CT_MULTILEVEL_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_CT_MULTILEVEL_PRIVATE_FARGUMENTS DECLARE_CT_MULTILEVEL_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CT_MULTILEVEL_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_CT_MULTILEVEL_PRIVATE_CARGUMENTS DECLARE_CT_MULTILEVEL_PUBLIC_CARGUMENTS

#define CT_MULTILEVEL_C2F_PROTO _CCTK_C2F_PROTO, CT_MULTILEVEL_PRIVATE_C2F_PROTO, CT_MULTILEVEL_PUBLIC_C2F_PROTO

#define PASS_CT_MULTILEVEL_C2F(GH) _PASS_CCTK_C2F(GH), PASS_CT_MULTILEVEL_PRIVATE_C2F(GH), PASS_CT_MULTILEVEL_PUBLIC_C2F(GH)

#define DECLARE_CT_MULTILEVEL_C2F _DECLARE_CCTK_C2F DECLARE_CT_MULTILEVEL_PRIVATE_C2F DECLARE_CT_MULTILEVEL_PUBLIC_C2F

#define INITIALISE_CT_MULTILEVEL_C2F _INITIALISE_CCTK_C2F INITIALISE_CT_MULTILEVEL_PRIVATE_C2F INITIALISE_CT_MULTILEVEL_PUBLIC_C2F

#define CT_MULTILEVEL_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
