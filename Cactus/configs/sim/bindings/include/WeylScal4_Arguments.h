/*@@
   @header  WeylScal4_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn WeylScal4
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_WEYLSCAL4_PRIVATE_FARGUMENTS \


#define WEYLSCAL4_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WEYLSCAL4_PRIVATE_CARGUMENTS \


#define DECLARE_WEYLSCAL4_PRIVATE_C2F \


#define INITIALISE_WEYLSCAL4_PRIVATE_C2F \


#define WEYLSCAL4_PRIVATE_C2F_PROTO \


#define PASS_WEYLSCAL4_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_WEYLSCAL4_PROTECTED_FARGUMENTS \


#define WEYLSCAL4_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WEYLSCAL4_PROTECTED_CARGUMENTS \


#define DECLARE_WEYLSCAL4_PROTECTED_C2F \


#define INITIALISE_WEYLSCAL4_PROTECTED_C2F \


#define WEYLSCAL4_PROTECTED_C2F_PROTO \


#define PASS_WEYLSCAL4_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_WEYLSCAL4_PUBLIC_FARGUMENTS \
CCTK_DECLARE(CCTK_REAL,Psi0i,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi0i_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi0i_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi0r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi0r_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi0r_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi1i,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi1i_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi1i_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi1r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi1r_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi1r_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi2i,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi2i_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi2i_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi2r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi2r_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi2r_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi3i,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi3i_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi3i_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi3r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi3r_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi3r_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi4i,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi4i_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi4i_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi4r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi4r_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Psi4r_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,coarse_dx,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dy,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dz,)&&\
CCTK_DECLARE(CCTK_REAL,curvIi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvIi_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvIi_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvIr,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvIr_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvIr_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ1,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ1_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ1_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ2_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ2_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ3_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ3_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ4,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ4_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJ4_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJi_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJi_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJr,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJr_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,curvJr_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,dtlapse_state,)&&\
CCTK_DECLARE(CCTK_INT,dtshift_state,)&&\
CCTK_DECLARE(CCTK_REAL,gxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,shift_state,)&&\
CCTK_DECLARE(CCTK_REAL,x,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,y,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,z,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define WEYLSCAL4_PUBLIC_FARGUMENTS \
Psi0i,Psi0i_p,Psi0i_p_p,Psi0r,Psi0r_p,Psi0r_p_p,Psi1i,Psi1i_p,Psi1i_p_p,Psi1r,Psi1r_p,Psi1r_p_p,Psi2i,Psi2i_p,Psi2i_p_p,Psi2r,Psi2r_p,Psi2r_p_p,Psi3i,Psi3i_p,Psi3i_p_p,Psi3r,Psi3r_p,Psi3r_p_p,Psi4i,Psi4i_p,Psi4i_p_p,Psi4r,Psi4r_p,Psi4r_p_p,alp,alp_p,alp_p_p,betax,betax_p,betax_p_p,betay,betay_p,betay_p_p,betaz,betaz_p,betaz_p_p,coarse_dx,coarse_dy,coarse_dz,curvIi,curvIi_p,curvIi_p_p,curvIr,curvIr_p,curvIr_p_p,curvJ1,curvJ1_p,curvJ1_p_p,curvJ2,curvJ2_p,curvJ2_p_p,curvJ3,curvJ3_p,curvJ3_p_p,curvJ4,curvJ4_p,curvJ4_p_p,curvJi,curvJi_p,curvJi_p_p,curvJr,curvJr_p,curvJr_p_p,dtalp,dtalp_p,dtalp_p_p,dtbetax,dtbetax_p,dtbetax_p_p,dtbetay,dtbetay_p,dtbetay_p_p,dtbetaz,dtbetaz_p,dtbetaz_p_p,dtlapse_state,dtshift_state,gxx,gxx_p,gxx_p_p,gxy,gxy_p,gxy_p_p,gxz,gxz_p,gxz_p_p,gyy,gyy_p,gyy_p_p,gyz,gyz_p,gyz_p_p,gzz,gzz_p,gzz_p_p,kxx,kxx_p,kxx_p_p,kxy,kxy_p,kxy_p_p,kxz,kxz_p,kxz_p_p,kyy,kyy_p,kyy_p_p,kyz,kyz_p,kyz_p_p,kzz,kzz_p,kzz_p_p,r,shift_state,x,y,z

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WEYLSCAL4_PUBLIC_CARGUMENTS \
static int cctki_vi_Psi0i = -100; \
if (cctki_vi_Psi0i == -100) cctki_vi_Psi0i = CCTK_VarIndex("WeylScal4::Psi0i"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi0i, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi0i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi0i_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi0i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi0i_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi0i)); \
static int cctki_vi_Psi0r = -100; \
if (cctki_vi_Psi0r == -100) cctki_vi_Psi0r = CCTK_VarIndex("WeylScal4::Psi0r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi0r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi0r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi0r_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi0r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi0r_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi0r)); \
static int cctki_vi_Psi1i = -100; \
if (cctki_vi_Psi1i == -100) cctki_vi_Psi1i = CCTK_VarIndex("WeylScal4::Psi1i"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi1i, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi1i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi1i_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi1i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi1i_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi1i)); \
static int cctki_vi_Psi1r = -100; \
if (cctki_vi_Psi1r == -100) cctki_vi_Psi1r = CCTK_VarIndex("WeylScal4::Psi1r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi1r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi1r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi1r_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi1r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi1r_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi1r)); \
static int cctki_vi_Psi2i = -100; \
if (cctki_vi_Psi2i == -100) cctki_vi_Psi2i = CCTK_VarIndex("WeylScal4::Psi2i"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi2i, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi2i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi2i_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi2i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi2i_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi2i)); \
static int cctki_vi_Psi2r = -100; \
if (cctki_vi_Psi2r == -100) cctki_vi_Psi2r = CCTK_VarIndex("WeylScal4::Psi2r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi2r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi2r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi2r_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi2r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi2r_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi2r)); \
static int cctki_vi_Psi3i = -100; \
if (cctki_vi_Psi3i == -100) cctki_vi_Psi3i = CCTK_VarIndex("WeylScal4::Psi3i"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi3i, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi3i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi3i_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi3i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi3i_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi3i)); \
static int cctki_vi_Psi3r = -100; \
if (cctki_vi_Psi3r == -100) cctki_vi_Psi3r = CCTK_VarIndex("WeylScal4::Psi3r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi3r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi3r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi3r_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi3r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi3r_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi3r)); \
static int cctki_vi_Psi4i = -100; \
if (cctki_vi_Psi4i == -100) cctki_vi_Psi4i = CCTK_VarIndex("WeylScal4::Psi4i"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi4i, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi4i_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi4i)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi4i_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi4i)); \
static int cctki_vi_Psi4r = -100; \
if (cctki_vi_Psi4r == -100) cctki_vi_Psi4r = CCTK_VarIndex("WeylScal4::Psi4r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi4r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi4r_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Psi4r)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi4r_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Psi4r)); \
static int cctki_vi_alp = -100; \
if (cctki_vi_alp == -100) cctki_vi_alp = CCTK_VarIndex("ADMBASE::alp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_alp)); \
static int cctki_vi_betax = -100; \
if (cctki_vi_betax == -100) cctki_vi_betax = CCTK_VarIndex("ADMBASE::betax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betax)); \
static int cctki_vi_betay = -100; \
if (cctki_vi_betay == -100) cctki_vi_betay = CCTK_VarIndex("ADMBASE::betay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betay)); \
static int cctki_vi_betaz = -100; \
if (cctki_vi_betaz == -100) cctki_vi_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betaz)); \
static int cctki_vi_coarse_dx = -100; \
if (cctki_vi_coarse_dx == -100) cctki_vi_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dx)); \
static int cctki_vi_coarse_dy = -100; \
if (cctki_vi_coarse_dy == -100) cctki_vi_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dy)); \
static int cctki_vi_coarse_dz = -100; \
if (cctki_vi_coarse_dz == -100) cctki_vi_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dz)); \
static int cctki_vi_curvIi = -100; \
if (cctki_vi_curvIi == -100) cctki_vi_curvIi = CCTK_VarIndex("WeylScal4::curvIi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvIi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_curvIi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvIi_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_curvIi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvIi_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_curvIi)); \
static int cctki_vi_curvIr = -100; \
if (cctki_vi_curvIr == -100) cctki_vi_curvIr = CCTK_VarIndex("WeylScal4::curvIr"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvIr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_curvIr)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvIr_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_curvIr)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvIr_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_curvIr)); \
static int cctki_vi_curvJ1 = -100; \
if (cctki_vi_curvJ1 == -100) cctki_vi_curvJ1 = CCTK_VarIndex("WeylScal4::curvJ1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_curvJ1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ1_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_curvJ1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ1_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_curvJ1)); \
static int cctki_vi_curvJ2 = -100; \
if (cctki_vi_curvJ2 == -100) cctki_vi_curvJ2 = CCTK_VarIndex("WeylScal4::curvJ2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_curvJ2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_curvJ2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_curvJ2)); \
static int cctki_vi_curvJ3 = -100; \
if (cctki_vi_curvJ3 == -100) cctki_vi_curvJ3 = CCTK_VarIndex("WeylScal4::curvJ3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_curvJ3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ3_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_curvJ3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ3_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_curvJ3)); \
static int cctki_vi_curvJ4 = -100; \
if (cctki_vi_curvJ4 == -100) cctki_vi_curvJ4 = CCTK_VarIndex("WeylScal4::curvJ4"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ4, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_curvJ4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ4_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_curvJ4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJ4_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_curvJ4)); \
static int cctki_vi_curvJi = -100; \
if (cctki_vi_curvJi == -100) cctki_vi_curvJi = CCTK_VarIndex("WeylScal4::curvJi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_curvJi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJi_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_curvJi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJi_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_curvJi)); \
static int cctki_vi_curvJr = -100; \
if (cctki_vi_curvJr == -100) cctki_vi_curvJr = CCTK_VarIndex("WeylScal4::curvJr"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_curvJr)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJr_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_curvJr)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, curvJr_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_curvJr)); \
static int cctki_vi_dtalp = -100; \
if (cctki_vi_dtalp == -100) cctki_vi_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtalp)); \
static int cctki_vi_dtbetax = -100; \
if (cctki_vi_dtbetax == -100) cctki_vi_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetax)); \
static int cctki_vi_dtbetay = -100; \
if (cctki_vi_dtbetay == -100) cctki_vi_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetay)); \
static int cctki_vi_dtbetaz = -100; \
if (cctki_vi_dtbetaz == -100) cctki_vi_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetaz)); \
static int cctki_vi_dtlapse_state = -100; \
if (cctki_vi_dtlapse_state == -100) cctki_vi_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtlapse_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtlapse_state)); \
static int cctki_vi_dtshift_state = -100; \
if (cctki_vi_dtshift_state == -100) cctki_vi_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtshift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtshift_state)); \
static int cctki_vi_gxx = -100; \
if (cctki_vi_gxx == -100) cctki_vi_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxx)); \
static int cctki_vi_gxy = -100; \
if (cctki_vi_gxy == -100) cctki_vi_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxy)); \
static int cctki_vi_gxz = -100; \
if (cctki_vi_gxz == -100) cctki_vi_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxz)); \
static int cctki_vi_gyy = -100; \
if (cctki_vi_gyy == -100) cctki_vi_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyy)); \
static int cctki_vi_gyz = -100; \
if (cctki_vi_gyz == -100) cctki_vi_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyz)); \
static int cctki_vi_gzz = -100; \
if (cctki_vi_gzz == -100) cctki_vi_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gzz)); \
static int cctki_vi_kxx = -100; \
if (cctki_vi_kxx == -100) cctki_vi_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxx)); \
static int cctki_vi_kxy = -100; \
if (cctki_vi_kxy == -100) cctki_vi_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxy)); \
static int cctki_vi_kxz = -100; \
if (cctki_vi_kxz == -100) cctki_vi_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxz)); \
static int cctki_vi_kyy = -100; \
if (cctki_vi_kyy == -100) cctki_vi_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyy)); \
static int cctki_vi_kyz = -100; \
if (cctki_vi_kyz == -100) cctki_vi_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyz)); \
static int cctki_vi_kzz = -100; \
if (cctki_vi_kzz == -100) cctki_vi_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kzz)); \
static int cctki_vi_r = -100; \
if (cctki_vi_r == -100) cctki_vi_r = CCTK_VarIndex("GRID::r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_r)); \
static int cctki_vi_shift_state = -100; \
if (cctki_vi_shift_state == -100) cctki_vi_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, shift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_shift_state)); \
static int cctki_vi_x = -100; \
if (cctki_vi_x == -100) cctki_vi_x = CCTK_VarIndex("GRID::x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x)); \
static int cctki_vi_y = -100; \
if (cctki_vi_y == -100) cctki_vi_y = CCTK_VarIndex("GRID::y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_y)); \
static int cctki_vi_z = -100; \
if (cctki_vi_z == -100) cctki_vi_z = CCTK_VarIndex("GRID::z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_z));

#define DECLARE_WEYLSCAL4_PUBLIC_C2F \
static int CCTKARGNUM_Psi0i = -1; \
static int CCTKGROUPNUM_Psi0i_group = -1; \
static int CCTKARGNUM_Psi0r = -1; \
static int CCTKGROUPNUM_Psi0r_group = -1; \
static int CCTKARGNUM_Psi1i = -1; \
static int CCTKGROUPNUM_Psi1i_group = -1; \
static int CCTKARGNUM_Psi1r = -1; \
static int CCTKGROUPNUM_Psi1r_group = -1; \
static int CCTKARGNUM_Psi2i = -1; \
static int CCTKGROUPNUM_Psi2i_group = -1; \
static int CCTKARGNUM_Psi2r = -1; \
static int CCTKGROUPNUM_Psi2r_group = -1; \
static int CCTKARGNUM_Psi3i = -1; \
static int CCTKGROUPNUM_Psi3i_group = -1; \
static int CCTKARGNUM_Psi3r = -1; \
static int CCTKGROUPNUM_Psi3r_group = -1; \
static int CCTKARGNUM_Psi4i = -1; \
static int CCTKGROUPNUM_Psi4i_group = -1; \
static int CCTKARGNUM_Psi4r = -1; \
static int CCTKGROUPNUM_Psi4r_group = -1; \
static int CCTKARGNUM_alp = -1; \
static int CCTKGROUPNUM_lapse = -1; \
static int CCTKARGNUM_betax = -1; \
static int CCTKGROUPNUM_shift = -1; \
static int CCTKARGNUM_betay = -1; \
static int CCTKARGNUM_betaz = -1; \
static int CCTKARGNUM_coarse_dx = -1; \
static int CCTKGROUPNUM_gridspacings = -1; \
static int CCTKARGNUM_coarse_dy = -1; \
static int CCTKARGNUM_coarse_dz = -1; \
static int CCTKARGNUM_curvIi = -1; \
static int CCTKGROUPNUM_curvIi_group = -1; \
static int CCTKARGNUM_curvIr = -1; \
static int CCTKGROUPNUM_curvIr_group = -1; \
static int CCTKARGNUM_curvJ1 = -1; \
static int CCTKGROUPNUM_curvJ1_group = -1; \
static int CCTKARGNUM_curvJ2 = -1; \
static int CCTKGROUPNUM_curvJ2_group = -1; \
static int CCTKARGNUM_curvJ3 = -1; \
static int CCTKGROUPNUM_curvJ3_group = -1; \
static int CCTKARGNUM_curvJ4 = -1; \
static int CCTKGROUPNUM_curvJ4_group = -1; \
static int CCTKARGNUM_curvJi = -1; \
static int CCTKGROUPNUM_curvJi_group = -1; \
static int CCTKARGNUM_curvJr = -1; \
static int CCTKGROUPNUM_curvJr_group = -1; \
static int CCTKARGNUM_dtalp = -1; \
static int CCTKGROUPNUM_dtlapse = -1; \
static int CCTKARGNUM_dtbetax = -1; \
static int CCTKGROUPNUM_dtshift = -1; \
static int CCTKARGNUM_dtbetay = -1; \
static int CCTKARGNUM_dtbetaz = -1; \
static int CCTKARGNUM_dtlapse_state = -1; \
static int CCTKGROUPNUM_dtlapse_state = -1; \
static int CCTKARGNUM_dtshift_state = -1; \
static int CCTKGROUPNUM_dtshift_state = -1; \
static int CCTKARGNUM_gxx = -1; \
static int CCTKGROUPNUM_metric = -1; \
static int CCTKARGNUM_gxy = -1; \
static int CCTKARGNUM_gxz = -1; \
static int CCTKARGNUM_gyy = -1; \
static int CCTKARGNUM_gyz = -1; \
static int CCTKARGNUM_gzz = -1; \
static int CCTKARGNUM_kxx = -1; \
static int CCTKGROUPNUM_curv = -1; \
static int CCTKARGNUM_kxy = -1; \
static int CCTKARGNUM_kxz = -1; \
static int CCTKARGNUM_kyy = -1; \
static int CCTKARGNUM_kyz = -1; \
static int CCTKARGNUM_kzz = -1; \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_coordinates = -1; \
static int CCTKARGNUM_shift_state = -1; \
static int CCTKGROUPNUM_shift_state = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_z = -1;

#define INITIALISE_WEYLSCAL4_PUBLIC_C2F \
if(CCTKARGNUM_Psi0i == -1) CCTKARGNUM_Psi0i = CCTK_VarIndex("WeylScal4::Psi0i"); \
if(CCTKGROUPNUM_Psi0i_group == -1) CCTKGROUPNUM_Psi0i_group = CCTK_GroupIndex("WeylScal4::Psi0i_group"); \
if(CCTKARGNUM_Psi0r == -1) CCTKARGNUM_Psi0r = CCTK_VarIndex("WeylScal4::Psi0r"); \
if(CCTKGROUPNUM_Psi0r_group == -1) CCTKGROUPNUM_Psi0r_group = CCTK_GroupIndex("WeylScal4::Psi0r_group"); \
if(CCTKARGNUM_Psi1i == -1) CCTKARGNUM_Psi1i = CCTK_VarIndex("WeylScal4::Psi1i"); \
if(CCTKGROUPNUM_Psi1i_group == -1) CCTKGROUPNUM_Psi1i_group = CCTK_GroupIndex("WeylScal4::Psi1i_group"); \
if(CCTKARGNUM_Psi1r == -1) CCTKARGNUM_Psi1r = CCTK_VarIndex("WeylScal4::Psi1r"); \
if(CCTKGROUPNUM_Psi1r_group == -1) CCTKGROUPNUM_Psi1r_group = CCTK_GroupIndex("WeylScal4::Psi1r_group"); \
if(CCTKARGNUM_Psi2i == -1) CCTKARGNUM_Psi2i = CCTK_VarIndex("WeylScal4::Psi2i"); \
if(CCTKGROUPNUM_Psi2i_group == -1) CCTKGROUPNUM_Psi2i_group = CCTK_GroupIndex("WeylScal4::Psi2i_group"); \
if(CCTKARGNUM_Psi2r == -1) CCTKARGNUM_Psi2r = CCTK_VarIndex("WeylScal4::Psi2r"); \
if(CCTKGROUPNUM_Psi2r_group == -1) CCTKGROUPNUM_Psi2r_group = CCTK_GroupIndex("WeylScal4::Psi2r_group"); \
if(CCTKARGNUM_Psi3i == -1) CCTKARGNUM_Psi3i = CCTK_VarIndex("WeylScal4::Psi3i"); \
if(CCTKGROUPNUM_Psi3i_group == -1) CCTKGROUPNUM_Psi3i_group = CCTK_GroupIndex("WeylScal4::Psi3i_group"); \
if(CCTKARGNUM_Psi3r == -1) CCTKARGNUM_Psi3r = CCTK_VarIndex("WeylScal4::Psi3r"); \
if(CCTKGROUPNUM_Psi3r_group == -1) CCTKGROUPNUM_Psi3r_group = CCTK_GroupIndex("WeylScal4::Psi3r_group"); \
if(CCTKARGNUM_Psi4i == -1) CCTKARGNUM_Psi4i = CCTK_VarIndex("WeylScal4::Psi4i"); \
if(CCTKGROUPNUM_Psi4i_group == -1) CCTKGROUPNUM_Psi4i_group = CCTK_GroupIndex("WeylScal4::Psi4i_group"); \
if(CCTKARGNUM_Psi4r == -1) CCTKARGNUM_Psi4r = CCTK_VarIndex("WeylScal4::Psi4r"); \
if(CCTKGROUPNUM_Psi4r_group == -1) CCTKGROUPNUM_Psi4r_group = CCTK_GroupIndex("WeylScal4::Psi4r_group"); \
if(CCTKARGNUM_alp == -1) CCTKARGNUM_alp = CCTK_VarIndex("ADMBASE::alp"); \
if(CCTKGROUPNUM_lapse == -1) CCTKGROUPNUM_lapse = CCTK_GroupIndex("ADMBASE::lapse"); \
if(CCTKARGNUM_betax == -1) CCTKARGNUM_betax = CCTK_VarIndex("ADMBASE::betax"); \
if(CCTKGROUPNUM_shift == -1) CCTKGROUPNUM_shift = CCTK_GroupIndex("ADMBASE::shift"); \
if(CCTKARGNUM_betay == -1) CCTKARGNUM_betay = CCTK_VarIndex("ADMBASE::betay"); \
if(CCTKARGNUM_betaz == -1) CCTKARGNUM_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
if(CCTKARGNUM_coarse_dx == -1) CCTKARGNUM_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
if(CCTKGROUPNUM_gridspacings == -1) CCTKGROUPNUM_gridspacings = CCTK_GroupIndex("GRID::gridspacings"); \
if(CCTKARGNUM_coarse_dy == -1) CCTKARGNUM_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
if(CCTKARGNUM_coarse_dz == -1) CCTKARGNUM_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
if(CCTKARGNUM_curvIi == -1) CCTKARGNUM_curvIi = CCTK_VarIndex("WeylScal4::curvIi"); \
if(CCTKGROUPNUM_curvIi_group == -1) CCTKGROUPNUM_curvIi_group = CCTK_GroupIndex("WeylScal4::curvIi_group"); \
if(CCTKARGNUM_curvIr == -1) CCTKARGNUM_curvIr = CCTK_VarIndex("WeylScal4::curvIr"); \
if(CCTKGROUPNUM_curvIr_group == -1) CCTKGROUPNUM_curvIr_group = CCTK_GroupIndex("WeylScal4::curvIr_group"); \
if(CCTKARGNUM_curvJ1 == -1) CCTKARGNUM_curvJ1 = CCTK_VarIndex("WeylScal4::curvJ1"); \
if(CCTKGROUPNUM_curvJ1_group == -1) CCTKGROUPNUM_curvJ1_group = CCTK_GroupIndex("WeylScal4::curvJ1_group"); \
if(CCTKARGNUM_curvJ2 == -1) CCTKARGNUM_curvJ2 = CCTK_VarIndex("WeylScal4::curvJ2"); \
if(CCTKGROUPNUM_curvJ2_group == -1) CCTKGROUPNUM_curvJ2_group = CCTK_GroupIndex("WeylScal4::curvJ2_group"); \
if(CCTKARGNUM_curvJ3 == -1) CCTKARGNUM_curvJ3 = CCTK_VarIndex("WeylScal4::curvJ3"); \
if(CCTKGROUPNUM_curvJ3_group == -1) CCTKGROUPNUM_curvJ3_group = CCTK_GroupIndex("WeylScal4::curvJ3_group"); \
if(CCTKARGNUM_curvJ4 == -1) CCTKARGNUM_curvJ4 = CCTK_VarIndex("WeylScal4::curvJ4"); \
if(CCTKGROUPNUM_curvJ4_group == -1) CCTKGROUPNUM_curvJ4_group = CCTK_GroupIndex("WeylScal4::curvJ4_group"); \
if(CCTKARGNUM_curvJi == -1) CCTKARGNUM_curvJi = CCTK_VarIndex("WeylScal4::curvJi"); \
if(CCTKGROUPNUM_curvJi_group == -1) CCTKGROUPNUM_curvJi_group = CCTK_GroupIndex("WeylScal4::curvJi_group"); \
if(CCTKARGNUM_curvJr == -1) CCTKARGNUM_curvJr = CCTK_VarIndex("WeylScal4::curvJr"); \
if(CCTKGROUPNUM_curvJr_group == -1) CCTKGROUPNUM_curvJr_group = CCTK_GroupIndex("WeylScal4::curvJr_group"); \
if(CCTKARGNUM_dtalp == -1) CCTKARGNUM_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
if(CCTKGROUPNUM_dtlapse == -1) CCTKGROUPNUM_dtlapse = CCTK_GroupIndex("ADMBASE::dtlapse"); \
if(CCTKARGNUM_dtbetax == -1) CCTKARGNUM_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
if(CCTKGROUPNUM_dtshift == -1) CCTKGROUPNUM_dtshift = CCTK_GroupIndex("ADMBASE::dtshift"); \
if(CCTKARGNUM_dtbetay == -1) CCTKARGNUM_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
if(CCTKARGNUM_dtbetaz == -1) CCTKARGNUM_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
if(CCTKARGNUM_dtlapse_state == -1) CCTKARGNUM_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
if(CCTKGROUPNUM_dtlapse_state == -1) CCTKGROUPNUM_dtlapse_state = CCTK_GroupIndex("ADMBASE::dtlapse_state"); \
if(CCTKARGNUM_dtshift_state == -1) CCTKARGNUM_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
if(CCTKGROUPNUM_dtshift_state == -1) CCTKGROUPNUM_dtshift_state = CCTK_GroupIndex("ADMBASE::dtshift_state"); \
if(CCTKARGNUM_gxx == -1) CCTKARGNUM_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
if(CCTKGROUPNUM_metric == -1) CCTKGROUPNUM_metric = CCTK_GroupIndex("ADMBASE::metric"); \
if(CCTKARGNUM_gxy == -1) CCTKARGNUM_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
if(CCTKARGNUM_gxz == -1) CCTKARGNUM_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
if(CCTKARGNUM_gyy == -1) CCTKARGNUM_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
if(CCTKARGNUM_gyz == -1) CCTKARGNUM_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
if(CCTKARGNUM_gzz == -1) CCTKARGNUM_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
if(CCTKARGNUM_kxx == -1) CCTKARGNUM_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
if(CCTKGROUPNUM_curv == -1) CCTKGROUPNUM_curv = CCTK_GroupIndex("ADMBASE::curv"); \
if(CCTKARGNUM_kxy == -1) CCTKARGNUM_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
if(CCTKARGNUM_kxz == -1) CCTKARGNUM_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
if(CCTKARGNUM_kyy == -1) CCTKARGNUM_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
if(CCTKARGNUM_kyz == -1) CCTKARGNUM_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
if(CCTKARGNUM_kzz == -1) CCTKARGNUM_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("GRID::r"); \
if(CCTKGROUPNUM_coordinates == -1) CCTKGROUPNUM_coordinates = CCTK_GroupIndex("GRID::coordinates"); \
if(CCTKARGNUM_shift_state == -1) CCTKARGNUM_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
if(CCTKGROUPNUM_shift_state == -1) CCTKGROUPNUM_shift_state = CCTK_GroupIndex("ADMBASE::shift_state"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("GRID::x"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("GRID::y"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("GRID::z");

#define WEYLSCAL4_PUBLIC_C2F_PROTO \


#define PASS_WEYLSCAL4_PUBLIC_C2F(GH) \
(CCTK_REAL *)(PASS_REFERENCE(Psi0i, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi0i, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi0i, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi0r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi0r, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi0r, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi1i, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi1i, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi1i, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi1r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi1r, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi1r, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi2i, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi2i, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi2i, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi2r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi2r, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi2r, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi3i, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi3i, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi3i, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi3r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi3r, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi3r, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi4i, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi4i, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi4i, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi4r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi4r, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi4r, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(curvIi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(curvIi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(curvIi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(curvIr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(curvIr, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(curvIr, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ3, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ3, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ4, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJ4, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJr, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(curvJr, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 2)),\
(CCTK_INT *)(PASS_REFERENCE(dtlapse_state, 0)),\
(CCTK_INT *)(PASS_REFERENCE(dtshift_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_INT *)(PASS_REFERENCE(shift_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0))

#endif /* CCODE */

#ifdef FCODE
#define WEYLSCAL4_FARGUMENTS _CCTK_FARGUMENTS, WEYLSCAL4_PUBLIC_FARGUMENTS

#define DECLARE_WEYLSCAL4_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_WEYLSCAL4_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WEYLSCAL4_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_WEYLSCAL4_PUBLIC_CARGUMENTS

#define WEYLSCAL4_C2F_PROTO _CCTK_C2F_PROTO, WEYLSCAL4_PUBLIC_C2F_PROTO

#define PASS_WEYLSCAL4_C2F(GH) _PASS_CCTK_C2F(GH), PASS_WEYLSCAL4_PUBLIC_C2F(GH)

#define DECLARE_WEYLSCAL4_C2F _DECLARE_CCTK_C2F DECLARE_WEYLSCAL4_PUBLIC_C2F

#define INITIALISE_WEYLSCAL4_C2F _INITIALISE_CCTK_C2F INITIALISE_WEYLSCAL4_PUBLIC_C2F

#define WEYLSCAL4_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
