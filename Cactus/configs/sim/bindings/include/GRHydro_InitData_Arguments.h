/*@@
   @header  GRHydro_InitData_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn GRHydro_InitData
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_GRHYDRO_INITDATA_PRIVATE_FARGUMENTS \
CCTK_DECLARE(CCTK_INT,GRHydro_init_data_reflevel,)&&\


#define GRHYDRO_INITDATA_PRIVATE_FARGUMENTS \
GRHydro_init_data_reflevel

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_GRHYDRO_INITDATA_PRIVATE_CARGUMENTS \
static int cctki_vi_GRHydro_init_data_reflevel = -100; \
if (cctki_vi_GRHydro_init_data_reflevel == -100) cctki_vi_GRHydro_init_data_reflevel = CCTK_VarIndex("GRHydro_InitData::GRHydro_init_data_reflevel"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, GRHydro_init_data_reflevel, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_GRHydro_init_data_reflevel));

#define DECLARE_GRHYDRO_INITDATA_PRIVATE_C2F \
static int CCTKARGNUM_GRHydro_init_data_reflevel = -1; \
static int CCTKGROUPNUM_GRHydro_init_data_reflevel = -1;

#define INITIALISE_GRHYDRO_INITDATA_PRIVATE_C2F \
if(CCTKARGNUM_GRHydro_init_data_reflevel == -1) CCTKARGNUM_GRHydro_init_data_reflevel = CCTK_VarIndex("GRHydro_InitData::GRHydro_init_data_reflevel"); \
if(CCTKGROUPNUM_GRHydro_init_data_reflevel == -1) CCTKGROUPNUM_GRHydro_init_data_reflevel = CCTK_GroupIndex("GRHydro_InitData::GRHydro_init_data_reflevel");

#define GRHYDRO_INITDATA_PRIVATE_C2F_PROTO \
CCTK_INT *

#define PASS_GRHYDRO_INITDATA_PRIVATE_C2F(GH) \
(CCTK_INT *)(PASS_REFERENCE(GRHydro_init_data_reflevel, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_GRHYDRO_INITDATA_PROTECTED_FARGUMENTS \
CCTK_DECLARE(CCTK_REAL,c_s,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,simple_eps,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,simple_eps_0,)&&\
CCTK_DECLARE(CCTK_REAL,simple_rho,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,simple_rho_0,)&&\
CCTK_DECLARE(CCTK_REAL,simple_tmp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define GRHYDRO_INITDATA_PROTECTED_FARGUMENTS \
c_s,simple_eps,simple_eps_0,simple_rho,simple_rho_0,simple_tmp

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_GRHYDRO_INITDATA_PROTECTED_CARGUMENTS \
static int cctki_vi_c_s = -100; \
if (cctki_vi_c_s == -100) cctki_vi_c_s = CCTK_VarIndex("GRHydro_init_data::c_s"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, c_s, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_c_s)); \
static int cctki_vi_simple_eps = -100; \
if (cctki_vi_simple_eps == -100) cctki_vi_simple_eps = CCTK_VarIndex("GRHydro_init_data::simple_eps"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, simple_eps, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_simple_eps)); \
static int cctki_vi_simple_eps_0 = -100; \
if (cctki_vi_simple_eps_0 == -100) cctki_vi_simple_eps_0 = CCTK_VarIndex("GRHydro_init_data::simple_eps_0"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, simple_eps_0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_simple_eps_0)); \
static int cctki_vi_simple_rho = -100; \
if (cctki_vi_simple_rho == -100) cctki_vi_simple_rho = CCTK_VarIndex("GRHydro_init_data::simple_rho"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, simple_rho, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_simple_rho)); \
static int cctki_vi_simple_rho_0 = -100; \
if (cctki_vi_simple_rho_0 == -100) cctki_vi_simple_rho_0 = CCTK_VarIndex("GRHydro_init_data::simple_rho_0"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, simple_rho_0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_simple_rho_0)); \
static int cctki_vi_simple_tmp = -100; \
if (cctki_vi_simple_tmp == -100) cctki_vi_simple_tmp = CCTK_VarIndex("GRHydro_init_data::simple_tmp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, simple_tmp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_simple_tmp));

#define DECLARE_GRHYDRO_INITDATA_PROTECTED_C2F \
static int CCTKARGNUM_c_s = -1; \
static int CCTKGROUPNUM_simple_wave_grid_functions = -1; \
static int CCTKARGNUM_simple_eps = -1; \
static int CCTKGROUPNUM_simple_wave_output = -1; \
static int CCTKARGNUM_simple_eps_0 = -1; \
static int CCTKGROUPNUM_simple_wave_scalars = -1; \
static int CCTKARGNUM_simple_rho = -1; \
static int CCTKARGNUM_simple_rho_0 = -1; \
static int CCTKARGNUM_simple_tmp = -1;

#define INITIALISE_GRHYDRO_INITDATA_PROTECTED_C2F \
if(CCTKARGNUM_c_s == -1) CCTKARGNUM_c_s = CCTK_VarIndex("GRHydro_init_data::c_s"); \
if(CCTKGROUPNUM_simple_wave_grid_functions == -1) CCTKGROUPNUM_simple_wave_grid_functions = CCTK_GroupIndex("GRHydro_init_data::simple_wave_grid_functions"); \
if(CCTKARGNUM_simple_eps == -1) CCTKARGNUM_simple_eps = CCTK_VarIndex("GRHydro_init_data::simple_eps"); \
if(CCTKGROUPNUM_simple_wave_output == -1) CCTKGROUPNUM_simple_wave_output = CCTK_GroupIndex("GRHydro_init_data::simple_wave_output"); \
if(CCTKARGNUM_simple_eps_0 == -1) CCTKARGNUM_simple_eps_0 = CCTK_VarIndex("GRHydro_init_data::simple_eps_0"); \
if(CCTKGROUPNUM_simple_wave_scalars == -1) CCTKGROUPNUM_simple_wave_scalars = CCTK_GroupIndex("GRHydro_init_data::simple_wave_scalars"); \
if(CCTKARGNUM_simple_rho == -1) CCTKARGNUM_simple_rho = CCTK_VarIndex("GRHydro_init_data::simple_rho"); \
if(CCTKARGNUM_simple_rho_0 == -1) CCTKARGNUM_simple_rho_0 = CCTK_VarIndex("GRHydro_init_data::simple_rho_0"); \
if(CCTKARGNUM_simple_tmp == -1) CCTKARGNUM_simple_tmp = CCTK_VarIndex("GRHydro_init_data::simple_tmp");

#define GRHYDRO_INITDATA_PROTECTED_C2F_PROTO \
CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_GRHYDRO_INITDATA_PROTECTED_C2F(GH) \
(CCTK_REAL *)(PASS_REFERENCE(c_s, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(simple_eps, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(simple_eps_0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(simple_rho, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(simple_rho_0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(simple_tmp, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_GRHYDRO_INITDATA_PUBLIC_FARGUMENTS \
INTEGER Avec_length&&\
INTEGER Avecrhs_length&&\
INTEGER Bcons_length&&\
INTEGER Bconsrhs_length&&\
INTEGER Bvec_length&&\
INTEGER Evec_length&&\
INTEGER GRHydro_cons_tracers_length&&\
INTEGER GRHydro_tracers_length&&\
INTEGER bcom_length&&\
INTEGER lBvec_length&&\
INTEGER lvel_length&&\
INTEGER scon_length&&\
INTEGER srhs_length&&\
INTEGER vel_length&&\
CCTK_DECLARE(CCTK_REAL,Abar,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Abar_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Abar_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Aphi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Aphi_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Aphi_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Aphiflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Aphirhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Avec,(cctk_ash1,cctk_ash2,cctk_ash3,Avec_length))&&\
CCTK_DECLARE(CCTK_REAL,Avec_p,(cctk_ash1,cctk_ash2,cctk_ash3,Avec_length))&&\
CCTK_DECLARE(CCTK_REAL,Avec_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,Avec_length))&&\
CCTK_DECLARE(CCTK_REAL,Avecrhs,(cctk_ash1,cctk_ash2,cctk_ash3,Avecrhs_length))&&\
CCTK_DECLARE(CCTK_REAL,Avecxflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Avecyflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Aveczflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Bcons,(cctk_ash1,cctk_ash2,cctk_ash3,Bcons_length))&&\
CCTK_DECLARE(CCTK_REAL,Bcons_p,(cctk_ash1,cctk_ash2,cctk_ash3,Bcons_length))&&\
CCTK_DECLARE(CCTK_REAL,Bcons_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,Bcons_length))&&\
CCTK_DECLARE(CCTK_REAL,Bconsrhs,(cctk_ash1,cctk_ash2,cctk_ash3,Bconsrhs_length))&&\
CCTK_DECLARE(CCTK_REAL,Bconsxflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Bconsyflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Bconszflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Bvec,(cctk_ash1,cctk_ash2,cctk_ash3,Bvec_length))&&\
CCTK_DECLARE(CCTK_REAL,Bvec_p,(cctk_ash1,cctk_ash2,cctk_ash3,Bvec_length))&&\
CCTK_DECLARE(CCTK_REAL,Bvec_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,Bvec_length))&&\
CCTK_DECLARE(CCTK_REAL,Evec,(cctk_ash1,cctk_ash2,cctk_ash3,Evec_length))&&\
CCTK_DECLARE(CCTK_REAL,GRHydro_C2P_failed,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,GRHydro_eos_handle,)&&\
CCTK_DECLARE(CCTK_INT,GRHydro_polytrope_handle,)&&\
CCTK_DECLARE(CCTK_INT,GRHydro_reflevel,)&&\
CCTK_DECLARE(CCTK_REAL,GRHydro_rho_min,)&&\
CCTK_DECLARE(CCTK_REAL,GRHydro_tau_min,)&&\
CCTK_DECLARE(CCTK_REAL,Y_e,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Y_e_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Y_e_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Y_e_con,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Y_e_con_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Y_e_con_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Y_e_con_flux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,Y_e_con_rhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,atmosphere_atmosp_descriptor,)&&\
CCTK_DECLARE(CCTK_INT,atmosphere_field_descriptor,)&&\
CCTK_DECLARE(CCTK_INT,atmosphere_mask,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,atmosphere_mask_real,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,atmosphere_normal_descriptor,)&&\
CCTK_DECLARE(CCTK_REAL,bcom,(cctk_ash1,cctk_ash2,cctk_ash3,bcom_length))&&\
CCTK_DECLARE(CCTK_REAL,bcom_p,(cctk_ash1,cctk_ash2,cctk_ash3,bcom_length))&&\
CCTK_DECLARE(CCTK_REAL,bcom_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,bcom_length))&&\
CCTK_DECLARE(CCTK_REAL,bcom0,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,bcom0_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,bcom0_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,bcom_sq,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,bcom_sq_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,bcom_sq_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaa,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betab,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betac,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,coarse_dx,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dy,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dz,)&&\
CCTK_DECLARE(CCTK_INT,conformal_state,)&&\
CCTK_DECLARE(CCTK_REAL,cons_tracer,(cctk_ash1,cctk_ash2,cctk_ash3,GRHydro_cons_tracers_length))&&\
CCTK_DECLARE(CCTK_REAL,cons_tracer_p,(cctk_ash1,cctk_ash2,cctk_ash3,GRHydro_cons_tracers_length))&&\
CCTK_DECLARE(CCTK_REAL,cons_tracer_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,GRHydro_cons_tracers_length))&&\
CCTK_DECLARE(CCTK_REAL,cs2minus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,cs2plus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dens,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dens_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dens_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,densflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,densrhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,divB,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,dtlapse_state,)&&\
CCTK_DECLARE(CCTK_INT,dtshift_state,)&&\
CCTK_DECLARE(CCTK_REAL,eTtt,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTtt_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTtt_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTtx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTtx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTtx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTty,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTty_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTty_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTtz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTtz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTtz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eTzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,emask,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,entropy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,entropy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,entropy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,entropycons,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,entropycons_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,entropycons_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,entropyflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,entropyrhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eps,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eps_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,eps_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,epsminus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,epsplus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,evolve_Lorenz_gge,)&&\
CCTK_DECLARE(CCTK_INT,evolve_MHD,)&&\
CCTK_DECLARE(CCTK_INT,evolve_Y_e,)&&\
CCTK_DECLARE(CCTK_INT,evolve_entropy,)&&\
CCTK_DECLARE(CCTK_INT,evolve_temper,)&&\
CCTK_DECLARE(CCTK_INT,flux_direction,)&&\
CCTK_DECLARE(CCTK_REAL,gaa,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gaa_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gaa_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gab,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gab_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gab_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gac,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gac_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gac_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gbb,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gbb_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gbb_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gbc,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gbc_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gbc_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gcc,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gcc_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gcc_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,hydro_excision_mask,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kaa,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kab,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kac,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kbb,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kbc,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kcc,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,lBvec,(cctk_ash1,cctk_ash2,cctk_ash3,lBvec_length))&&\
CCTK_DECLARE(CCTK_REAL,lBvec_p,(cctk_ash1,cctk_ash2,cctk_ash3,lBvec_length))&&\
CCTK_DECLARE(CCTK_REAL,lBvec_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,lBvec_length))&&\
CCTK_DECLARE(CCTK_REAL,lvel,(cctk_ash1,cctk_ash2,cctk_ash3,lvel_length))&&\
CCTK_DECLARE(CCTK_REAL,lvel_p,(cctk_ash1,cctk_ash2,cctk_ash3,lvel_length))&&\
CCTK_DECLARE(CCTK_REAL,lvel_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,lvel_length))&&\
CCTK_DECLARE(CCTK_REAL,maxima_x,)&&\
CCTK_DECLARE(CCTK_REAL,maxima_y,)&&\
CCTK_DECLARE(CCTK_REAL,maxima_z,)&&\
CCTK_DECLARE(CCTK_REAL,maximum_density,)&&\
CCTK_DECLARE(CCTK_REAL,maxrho_global,)&&\
CCTK_DECLARE(CCTK_REAL,press,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,press_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,press_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,pressminus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,pressplus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psidc,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psidc_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psidc_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psidcflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psidcrhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psix,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psixx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psixy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psixz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psizz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,rho,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,rho_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,rho_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,rhominus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,rhoplus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,scon,(cctk_ash1,cctk_ash2,cctk_ash3,scon_length))&&\
CCTK_DECLARE(CCTK_REAL,scon_p,(cctk_ash1,cctk_ash2,cctk_ash3,scon_length))&&\
CCTK_DECLARE(CCTK_REAL,scon_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,scon_length))&&\
CCTK_DECLARE(CCTK_REAL,sdetg,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,shift_state,)&&\
CCTK_DECLARE(CCTK_INT,space_mask,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,srhs,(cctk_ash1,cctk_ash2,cctk_ash3,srhs_length))&&\
CCTK_DECLARE(CCTK_INT,stress_energy_state,)&&\
CCTK_DECLARE(CCTK_REAL,sxflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,syflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,szflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,tau,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,tau_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,tau_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,tauflux,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,taurhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,temperature,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,temperature_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,temperature_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,tracer,(cctk_ash1,cctk_ash2,cctk_ash3,GRHydro_tracers_length))&&\
CCTK_DECLARE(CCTK_REAL,tracer_p,(cctk_ash1,cctk_ash2,cctk_ash3,GRHydro_tracers_length))&&\
CCTK_DECLARE(CCTK_REAL,tracer_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,GRHydro_tracers_length))&&\
CCTK_DECLARE(CCTK_REAL,vel,(cctk_ash1,cctk_ash2,cctk_ash3,vel_length))&&\
CCTK_DECLARE(CCTK_REAL,vel_p,(cctk_ash1,cctk_ash2,cctk_ash3,vel_length))&&\
CCTK_DECLARE(CCTK_REAL,vel_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,vel_length))&&\
CCTK_DECLARE(CCTK_REAL,velxminus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,velxplus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,velyminus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,velyplus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,velzminus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,velzplus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,w_lorentz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,w_lorentz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,w_lorentz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,w_lorentzminus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,w_lorentzplus,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,x,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,xoffset,)&&\
CCTK_DECLARE(CCTK_REAL,y,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,yoffset,)&&\
CCTK_DECLARE(CCTK_REAL,z,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,zoffset,)&&\


#define GRHYDRO_INITDATA_PUBLIC_FARGUMENTS \
Avec_length,Avecrhs_length,Bcons_length,Bconsrhs_length,Bvec_length,Evec_length,GRHydro_cons_tracers_length,GRHydro_tracers_length,bcom_length,lBvec_length,lvel_length,scon_length,srhs_length,vel_length,Abar,Abar_p,Abar_p_p,Aphi,Aphi_p,Aphi_p_p,Aphiflux,Aphirhs,Avec,Avec_p,Avec_p_p,Avecrhs,Avecxflux,Avecyflux,Aveczflux,Bcons,Bcons_p,Bcons_p_p,Bconsrhs,Bconsxflux,Bconsyflux,Bconszflux,Bvec,Bvec_p,Bvec_p_p,Evec,GRHydro_C2P_failed,GRHydro_eos_handle,GRHydro_polytrope_handle,GRHydro_reflevel,GRHydro_rho_min,GRHydro_tau_min,Y_e,Y_e_p,Y_e_p_p,Y_e_con,Y_e_con_p,Y_e_con_p_p,Y_e_con_flux,Y_e_con_rhs,alp,alp_p,alp_p_p,atmosphere_atmosp_descriptor,atmosphere_field_descriptor,atmosphere_mask,atmosphere_mask_real,atmosphere_normal_descriptor,bcom,bcom_p,bcom_p_p,bcom0,bcom0_p,bcom0_p_p,bcom_sq,bcom_sq_p,bcom_sq_p_p,betaa,betab,betac,betax,betax_p,betax_p_p,betay,betay_p,betay_p_p,betaz,betaz_p,betaz_p_p,coarse_dx,coarse_dy,coarse_dz,conformal_state,cons_tracer,cons_tracer_p,cons_tracer_p_p,cs2minus,cs2plus,dens,dens_p,dens_p_p,densflux,densrhs,divB,dtalp,dtalp_p,dtalp_p_p,dtbetax,dtbetax_p,dtbetax_p_p,dtbetay,dtbetay_p,dtbetay_p_p,dtbetaz,dtbetaz_p,dtbetaz_p_p,dtlapse_state,dtshift_state,eTtt,eTtt_p,eTtt_p_p,eTtx,eTtx_p,eTtx_p_p,eTty,eTty_p,eTty_p_p,eTtz,eTtz_p,eTtz_p_p,eTxx,eTxx_p,eTxx_p_p,eTxy,eTxy_p,eTxy_p_p,eTxz,eTxz_p,eTxz_p_p,eTyy,eTyy_p,eTyy_p_p,eTyz,eTyz_p,eTyz_p_p,eTzz,eTzz_p,eTzz_p_p,emask,entropy,entropy_p,entropy_p_p,entropycons,entropycons_p,entropycons_p_p,entropyflux,entropyrhs,eps,eps_p,eps_p_p,epsminus,epsplus,evolve_Lorenz_gge,evolve_MHD,evolve_Y_e,evolve_entropy,evolve_temper,flux_direction,gaa,gaa_p,gaa_p_p,gab,gab_p,gab_p_p,gac,gac_p,gac_p_p,gbb,gbb_p,gbb_p_p,gbc,gbc_p,gbc_p_p,gcc,gcc_p,gcc_p_p,gxx,gxx_p,gxx_p_p,gxy,gxy_p,gxy_p_p,gxz,gxz_p,gxz_p_p,gyy,gyy_p,gyy_p_p,gyz,gyz_p,gyz_p_p,gzz,gzz_p,gzz_p_p,hydro_excision_mask,kaa,kab,kac,kbb,kbc,kcc,kxx,kxx_p,kxx_p_p,kxy,kxy_p,kxy_p_p,kxz,kxz_p,kxz_p_p,kyy,kyy_p,kyy_p_p,kyz,kyz_p,kyz_p_p,kzz,kzz_p,kzz_p_p,lBvec,lBvec_p,lBvec_p_p,lvel,lvel_p,lvel_p_p,maxima_x,maxima_y,maxima_z,maximum_density,maxrho_global,press,press_p,press_p_p,pressminus,pressplus,psi,psidc,psidc_p,psidc_p_p,psidcflux,psidcrhs,psix,psixx,psixy,psixz,psiy,psiyy,psiyz,psiz,psizz,r,rho,rho_p,rho_p_p,rhominus,rhoplus,scon,scon_p,scon_p_p,sdetg,shift_state,space_mask,srhs,stress_energy_state,sxflux,syflux,szflux,tau,tau_p,tau_p_p,tauflux,taurhs,temperature,temperature_p,temperature_p_p,tracer,tracer_p,tracer_p_p,vel,vel_p,vel_p_p,velxminus,velxplus,velyminus,velyplus,velzminus,velzplus,w_lorentz,w_lorentz_p,w_lorentz_p_p,w_lorentzminus,w_lorentzplus,x,xoffset,y,yoffset,z,zoffset

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_GRHYDRO_INITDATA_PUBLIC_CARGUMENTS \
static int cctki_vi_Abar = -100; \
if (cctki_vi_Abar == -100) cctki_vi_Abar = CCTK_VarIndex("HYDROBASE::Abar"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Abar, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Abar)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Abar_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Abar)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Abar_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Abar)); \
static int cctki_vi_Aphi = -100; \
if (cctki_vi_Aphi == -100) cctki_vi_Aphi = CCTK_VarIndex("HYDROBASE::Aphi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Aphi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Aphi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Aphi_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Aphi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Aphi_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Aphi)); \
static int cctki_vi_Aphiflux = -100; \
if (cctki_vi_Aphiflux == -100) cctki_vi_Aphiflux = CCTK_VarIndex("GRHYDRO::Aphiflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Aphiflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Aphiflux)); \
static int cctki_vi_Aphirhs = -100; \
if (cctki_vi_Aphirhs == -100) cctki_vi_Aphirhs = CCTK_VarIndex("GRHYDRO::Aphirhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Aphirhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Aphirhs)); \
static int cctki_vi_Avec = -100; \
if (cctki_vi_Avec == -100) cctki_vi_Avec = CCTK_VarIndex("HYDROBASE::Avec[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Avec, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Avec)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Avec_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Avec)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Avec_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Avec)); \
static int cctki_vi_Avecrhs = -100; \
if (cctki_vi_Avecrhs == -100) cctki_vi_Avecrhs = CCTK_VarIndex("GRHYDRO::Avecrhs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Avecrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Avecrhs)); \
static int cctki_vi_Avecxflux = -100; \
if (cctki_vi_Avecxflux == -100) cctki_vi_Avecxflux = CCTK_VarIndex("GRHYDRO::Avecxflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Avecxflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Avecxflux)); \
static int cctki_vi_Avecyflux = -100; \
if (cctki_vi_Avecyflux == -100) cctki_vi_Avecyflux = CCTK_VarIndex("GRHYDRO::Avecyflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Avecyflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Avecyflux)); \
static int cctki_vi_Aveczflux = -100; \
if (cctki_vi_Aveczflux == -100) cctki_vi_Aveczflux = CCTK_VarIndex("GRHYDRO::Aveczflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Aveczflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Aveczflux)); \
static int cctki_vi_Bcons = -100; \
if (cctki_vi_Bcons == -100) cctki_vi_Bcons = CCTK_VarIndex("GRHYDRO::Bcons[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bcons, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Bcons)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bcons_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Bcons)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bcons_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Bcons)); \
static int cctki_vi_Bconsrhs = -100; \
if (cctki_vi_Bconsrhs == -100) cctki_vi_Bconsrhs = CCTK_VarIndex("GRHYDRO::Bconsrhs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bconsrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Bconsrhs)); \
static int cctki_vi_Bconsxflux = -100; \
if (cctki_vi_Bconsxflux == -100) cctki_vi_Bconsxflux = CCTK_VarIndex("GRHYDRO::Bconsxflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bconsxflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Bconsxflux)); \
static int cctki_vi_Bconsyflux = -100; \
if (cctki_vi_Bconsyflux == -100) cctki_vi_Bconsyflux = CCTK_VarIndex("GRHYDRO::Bconsyflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bconsyflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Bconsyflux)); \
static int cctki_vi_Bconszflux = -100; \
if (cctki_vi_Bconszflux == -100) cctki_vi_Bconszflux = CCTK_VarIndex("GRHYDRO::Bconszflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bconszflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Bconszflux)); \
static int cctki_vi_Bvec = -100; \
if (cctki_vi_Bvec == -100) cctki_vi_Bvec = CCTK_VarIndex("HYDROBASE::Bvec[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bvec, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Bvec)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bvec_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Bvec)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Bvec_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Bvec)); \
static int cctki_vi_Evec = -100; \
if (cctki_vi_Evec == -100) cctki_vi_Evec = CCTK_VarIndex("GRHYDRO::Evec[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Evec, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Evec)); \
static int cctki_vi_GRHydro_C2P_failed = -100; \
if (cctki_vi_GRHydro_C2P_failed == -100) cctki_vi_GRHydro_C2P_failed = CCTK_VarIndex("GRHYDRO::GRHydro_C2P_failed"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, GRHydro_C2P_failed, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_GRHydro_C2P_failed)); \
static int cctki_vi_GRHydro_eos_handle = -100; \
if (cctki_vi_GRHydro_eos_handle == -100) cctki_vi_GRHydro_eos_handle = CCTK_VarIndex("GRHYDRO::GRHydro_eos_handle"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, GRHydro_eos_handle, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_GRHydro_eos_handle)); \
static int cctki_vi_GRHydro_polytrope_handle = -100; \
if (cctki_vi_GRHydro_polytrope_handle == -100) cctki_vi_GRHydro_polytrope_handle = CCTK_VarIndex("GRHYDRO::GRHydro_polytrope_handle"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, GRHydro_polytrope_handle, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_GRHydro_polytrope_handle)); \
static int cctki_vi_GRHydro_reflevel = -100; \
if (cctki_vi_GRHydro_reflevel == -100) cctki_vi_GRHydro_reflevel = CCTK_VarIndex("GRHYDRO::GRHydro_reflevel"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, GRHydro_reflevel, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_GRHydro_reflevel)); \
static int cctki_vi_GRHydro_rho_min = -100; \
if (cctki_vi_GRHydro_rho_min == -100) cctki_vi_GRHydro_rho_min = CCTK_VarIndex("GRHYDRO::GRHydro_rho_min"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, GRHydro_rho_min, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_GRHydro_rho_min)); \
static int cctki_vi_GRHydro_tau_min = -100; \
if (cctki_vi_GRHydro_tau_min == -100) cctki_vi_GRHydro_tau_min = CCTK_VarIndex("GRHYDRO::GRHydro_tau_min"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, GRHydro_tau_min, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_GRHydro_tau_min)); \
static int cctki_vi_Y_e = -100; \
if (cctki_vi_Y_e == -100) cctki_vi_Y_e = CCTK_VarIndex("HYDROBASE::Y_e"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Y_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Y_e)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Y_e_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Y_e)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Y_e_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Y_e)); \
static int cctki_vi_Y_e_con = -100; \
if (cctki_vi_Y_e_con == -100) cctki_vi_Y_e_con = CCTK_VarIndex("GRHYDRO::Y_e_con"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Y_e_con, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Y_e_con)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Y_e_con_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_Y_e_con)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Y_e_con_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_Y_e_con)); \
static int cctki_vi_Y_e_con_flux = -100; \
if (cctki_vi_Y_e_con_flux == -100) cctki_vi_Y_e_con_flux = CCTK_VarIndex("GRHYDRO::Y_e_con_flux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Y_e_con_flux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Y_e_con_flux)); \
static int cctki_vi_Y_e_con_rhs = -100; \
if (cctki_vi_Y_e_con_rhs == -100) cctki_vi_Y_e_con_rhs = CCTK_VarIndex("GRHYDRO::Y_e_con_rhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Y_e_con_rhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Y_e_con_rhs)); \
static int cctki_vi_alp = -100; \
if (cctki_vi_alp == -100) cctki_vi_alp = CCTK_VarIndex("ADMBASE::alp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_alp)); \
static int cctki_vi_atmosphere_atmosp_descriptor = -100; \
if (cctki_vi_atmosphere_atmosp_descriptor == -100) cctki_vi_atmosphere_atmosp_descriptor = CCTK_VarIndex("GRHYDRO::atmosphere_atmosp_descriptor"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, atmosphere_atmosp_descriptor, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_atmosphere_atmosp_descriptor)); \
static int cctki_vi_atmosphere_field_descriptor = -100; \
if (cctki_vi_atmosphere_field_descriptor == -100) cctki_vi_atmosphere_field_descriptor = CCTK_VarIndex("GRHYDRO::atmosphere_field_descriptor"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, atmosphere_field_descriptor, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_atmosphere_field_descriptor)); \
static int cctki_vi_atmosphere_mask = -100; \
if (cctki_vi_atmosphere_mask == -100) cctki_vi_atmosphere_mask = CCTK_VarIndex("GRHYDRO::atmosphere_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, atmosphere_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_atmosphere_mask)); \
static int cctki_vi_atmosphere_mask_real = -100; \
if (cctki_vi_atmosphere_mask_real == -100) cctki_vi_atmosphere_mask_real = CCTK_VarIndex("GRHYDRO::atmosphere_mask_real"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, atmosphere_mask_real, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_atmosphere_mask_real)); \
static int cctki_vi_atmosphere_normal_descriptor = -100; \
if (cctki_vi_atmosphere_normal_descriptor == -100) cctki_vi_atmosphere_normal_descriptor = CCTK_VarIndex("GRHYDRO::atmosphere_normal_descriptor"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, atmosphere_normal_descriptor, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_atmosphere_normal_descriptor)); \
static int cctki_vi_bcom = -100; \
if (cctki_vi_bcom == -100) cctki_vi_bcom = CCTK_VarIndex("GRHYDRO::bcom[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcom, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcom)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcom_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcom)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcom_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_bcom)); \
static int cctki_vi_bcom0 = -100; \
if (cctki_vi_bcom0 == -100) cctki_vi_bcom0 = CCTK_VarIndex("GRHYDRO::bcom0"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcom0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcom0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcom0_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcom0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcom0_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_bcom0)); \
static int cctki_vi_bcom_sq = -100; \
if (cctki_vi_bcom_sq == -100) cctki_vi_bcom_sq = CCTK_VarIndex("GRHYDRO::bcom_sq"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcom_sq, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcom_sq)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcom_sq_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcom_sq)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcom_sq_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_bcom_sq)); \
static int cctki_vi_betaa = -100; \
if (cctki_vi_betaa == -100) cctki_vi_betaa = CCTK_VarIndex("GRHYDRO::betaa"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaa, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betaa)); \
static int cctki_vi_betab = -100; \
if (cctki_vi_betab == -100) cctki_vi_betab = CCTK_VarIndex("GRHYDRO::betab"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betab, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betab)); \
static int cctki_vi_betac = -100; \
if (cctki_vi_betac == -100) cctki_vi_betac = CCTK_VarIndex("GRHYDRO::betac"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betac, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betac)); \
static int cctki_vi_betax = -100; \
if (cctki_vi_betax == -100) cctki_vi_betax = CCTK_VarIndex("ADMBASE::betax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betax)); \
static int cctki_vi_betay = -100; \
if (cctki_vi_betay == -100) cctki_vi_betay = CCTK_VarIndex("ADMBASE::betay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betay)); \
static int cctki_vi_betaz = -100; \
if (cctki_vi_betaz == -100) cctki_vi_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betaz)); \
static int cctki_vi_coarse_dx = -100; \
if (cctki_vi_coarse_dx == -100) cctki_vi_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dx)); \
static int cctki_vi_coarse_dy = -100; \
if (cctki_vi_coarse_dy == -100) cctki_vi_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dy)); \
static int cctki_vi_coarse_dz = -100; \
if (cctki_vi_coarse_dz == -100) cctki_vi_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dz)); \
static int cctki_vi_conformal_state = -100; \
if (cctki_vi_conformal_state == -100) cctki_vi_conformal_state = CCTK_VarIndex("STATICCONFORMAL::conformal_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, conformal_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_conformal_state)); \
static int cctki_vi_cons_tracer = -100; \
if (cctki_vi_cons_tracer == -100) cctki_vi_cons_tracer = CCTK_VarIndex("GRHYDRO::cons_tracer[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cons_tracer, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cons_tracer)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cons_tracer_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cons_tracer)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cons_tracer_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_cons_tracer)); \
static int cctki_vi_cs2minus = -100; \
if (cctki_vi_cs2minus == -100) cctki_vi_cs2minus = CCTK_VarIndex("GRHYDRO::cs2minus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cs2minus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cs2minus)); \
static int cctki_vi_cs2plus = -100; \
if (cctki_vi_cs2plus == -100) cctki_vi_cs2plus = CCTK_VarIndex("GRHYDRO::cs2plus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cs2plus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cs2plus)); \
static int cctki_vi_dens = -100; \
if (cctki_vi_dens == -100) cctki_vi_dens = CCTK_VarIndex("GRHYDRO::dens"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dens, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dens)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dens_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dens)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dens_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dens)); \
static int cctki_vi_densflux = -100; \
if (cctki_vi_densflux == -100) cctki_vi_densflux = CCTK_VarIndex("GRHYDRO::densflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, densflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_densflux)); \
static int cctki_vi_densrhs = -100; \
if (cctki_vi_densrhs == -100) cctki_vi_densrhs = CCTK_VarIndex("GRHYDRO::densrhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, densrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_densrhs)); \
static int cctki_vi_divB = -100; \
if (cctki_vi_divB == -100) cctki_vi_divB = CCTK_VarIndex("GRHYDRO::divB"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, divB, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_divB)); \
static int cctki_vi_dtalp = -100; \
if (cctki_vi_dtalp == -100) cctki_vi_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtalp)); \
static int cctki_vi_dtbetax = -100; \
if (cctki_vi_dtbetax == -100) cctki_vi_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetax)); \
static int cctki_vi_dtbetay = -100; \
if (cctki_vi_dtbetay == -100) cctki_vi_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetay)); \
static int cctki_vi_dtbetaz = -100; \
if (cctki_vi_dtbetaz == -100) cctki_vi_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetaz)); \
static int cctki_vi_dtlapse_state = -100; \
if (cctki_vi_dtlapse_state == -100) cctki_vi_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtlapse_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtlapse_state)); \
static int cctki_vi_dtshift_state = -100; \
if (cctki_vi_dtshift_state == -100) cctki_vi_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtshift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtshift_state)); \
static int cctki_vi_eTtt = -100; \
if (cctki_vi_eTtt == -100) cctki_vi_eTtt = CCTK_VarIndex("TMUNUBASE::eTtt"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTtt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTtt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTtt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTtt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTtt_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTtt)); \
static int cctki_vi_eTtx = -100; \
if (cctki_vi_eTtx == -100) cctki_vi_eTtx = CCTK_VarIndex("TMUNUBASE::eTtx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTtx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTtx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTtx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTtx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTtx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTtx)); \
static int cctki_vi_eTty = -100; \
if (cctki_vi_eTty == -100) cctki_vi_eTty = CCTK_VarIndex("TMUNUBASE::eTty"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTty, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTty)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTty_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTty)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTty_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTty)); \
static int cctki_vi_eTtz = -100; \
if (cctki_vi_eTtz == -100) cctki_vi_eTtz = CCTK_VarIndex("TMUNUBASE::eTtz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTtz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTtz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTtz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTtz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTtz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTtz)); \
static int cctki_vi_eTxx = -100; \
if (cctki_vi_eTxx == -100) cctki_vi_eTxx = CCTK_VarIndex("TMUNUBASE::eTxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTxx)); \
static int cctki_vi_eTxy = -100; \
if (cctki_vi_eTxy == -100) cctki_vi_eTxy = CCTK_VarIndex("TMUNUBASE::eTxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTxy)); \
static int cctki_vi_eTxz = -100; \
if (cctki_vi_eTxz == -100) cctki_vi_eTxz = CCTK_VarIndex("TMUNUBASE::eTxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTxz)); \
static int cctki_vi_eTyy = -100; \
if (cctki_vi_eTyy == -100) cctki_vi_eTyy = CCTK_VarIndex("TMUNUBASE::eTyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTyy)); \
static int cctki_vi_eTyz = -100; \
if (cctki_vi_eTyz == -100) cctki_vi_eTyz = CCTK_VarIndex("TMUNUBASE::eTyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTyz)); \
static int cctki_vi_eTzz = -100; \
if (cctki_vi_eTzz == -100) cctki_vi_eTzz = CCTK_VarIndex("TMUNUBASE::eTzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eTzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eTzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eTzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eTzz)); \
static int cctki_vi_emask = -100; \
if (cctki_vi_emask == -100) cctki_vi_emask = CCTK_VarIndex("SPACEMASK::emask"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, emask, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_emask)); \
static int cctki_vi_entropy = -100; \
if (cctki_vi_entropy == -100) cctki_vi_entropy = CCTK_VarIndex("HYDROBASE::entropy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, entropy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_entropy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, entropy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_entropy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, entropy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_entropy)); \
static int cctki_vi_entropycons = -100; \
if (cctki_vi_entropycons == -100) cctki_vi_entropycons = CCTK_VarIndex("GRHYDRO::entropycons"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, entropycons, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_entropycons)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, entropycons_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_entropycons)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, entropycons_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_entropycons)); \
static int cctki_vi_entropyflux = -100; \
if (cctki_vi_entropyflux == -100) cctki_vi_entropyflux = CCTK_VarIndex("GRHYDRO::entropyflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, entropyflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_entropyflux)); \
static int cctki_vi_entropyrhs = -100; \
if (cctki_vi_entropyrhs == -100) cctki_vi_entropyrhs = CCTK_VarIndex("GRHYDRO::entropyrhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, entropyrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_entropyrhs)); \
static int cctki_vi_eps = -100; \
if (cctki_vi_eps == -100) cctki_vi_eps = CCTK_VarIndex("HYDROBASE::eps"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eps, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eps)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eps_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eps)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eps_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_eps)); \
static int cctki_vi_epsminus = -100; \
if (cctki_vi_epsminus == -100) cctki_vi_epsminus = CCTK_VarIndex("GRHYDRO::epsminus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, epsminus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_epsminus)); \
static int cctki_vi_epsplus = -100; \
if (cctki_vi_epsplus == -100) cctki_vi_epsplus = CCTK_VarIndex("GRHYDRO::epsplus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, epsplus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_epsplus)); \
static int cctki_vi_evolve_Lorenz_gge = -100; \
if (cctki_vi_evolve_Lorenz_gge == -100) cctki_vi_evolve_Lorenz_gge = CCTK_VarIndex("GRHYDRO::evolve_Lorenz_gge"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolve_Lorenz_gge, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolve_Lorenz_gge)); \
static int cctki_vi_evolve_MHD = -100; \
if (cctki_vi_evolve_MHD == -100) cctki_vi_evolve_MHD = CCTK_VarIndex("GRHYDRO::evolve_MHD"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolve_MHD, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolve_MHD)); \
static int cctki_vi_evolve_Y_e = -100; \
if (cctki_vi_evolve_Y_e == -100) cctki_vi_evolve_Y_e = CCTK_VarIndex("GRHYDRO::evolve_Y_e"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolve_Y_e, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolve_Y_e)); \
static int cctki_vi_evolve_entropy = -100; \
if (cctki_vi_evolve_entropy == -100) cctki_vi_evolve_entropy = CCTK_VarIndex("GRHYDRO::evolve_entropy"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolve_entropy, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolve_entropy)); \
static int cctki_vi_evolve_temper = -100; \
if (cctki_vi_evolve_temper == -100) cctki_vi_evolve_temper = CCTK_VarIndex("GRHYDRO::evolve_temper"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolve_temper, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolve_temper)); \
static int cctki_vi_flux_direction = -100; \
if (cctki_vi_flux_direction == -100) cctki_vi_flux_direction = CCTK_VarIndex("GRHYDRO::flux_direction"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, flux_direction, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_flux_direction)); \
static int cctki_vi_gaa = -100; \
if (cctki_vi_gaa == -100) cctki_vi_gaa = CCTK_VarIndex("GRHYDRO::gaa"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gaa, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gaa)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gaa_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gaa)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gaa_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gaa)); \
static int cctki_vi_gab = -100; \
if (cctki_vi_gab == -100) cctki_vi_gab = CCTK_VarIndex("GRHYDRO::gab"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gab, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gab)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gab_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gab)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gab_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gab)); \
static int cctki_vi_gac = -100; \
if (cctki_vi_gac == -100) cctki_vi_gac = CCTK_VarIndex("GRHYDRO::gac"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gac, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gac)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gac_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gac)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gac_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gac)); \
static int cctki_vi_gbb = -100; \
if (cctki_vi_gbb == -100) cctki_vi_gbb = CCTK_VarIndex("GRHYDRO::gbb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gbb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gbb)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gbb_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gbb)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gbb_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gbb)); \
static int cctki_vi_gbc = -100; \
if (cctki_vi_gbc == -100) cctki_vi_gbc = CCTK_VarIndex("GRHYDRO::gbc"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gbc, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gbc)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gbc_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gbc)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gbc_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gbc)); \
static int cctki_vi_gcc = -100; \
if (cctki_vi_gcc == -100) cctki_vi_gcc = CCTK_VarIndex("GRHYDRO::gcc"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gcc, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gcc)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gcc_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gcc)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gcc_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gcc)); \
static int cctki_vi_gxx = -100; \
if (cctki_vi_gxx == -100) cctki_vi_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxx)); \
static int cctki_vi_gxy = -100; \
if (cctki_vi_gxy == -100) cctki_vi_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxy)); \
static int cctki_vi_gxz = -100; \
if (cctki_vi_gxz == -100) cctki_vi_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxz)); \
static int cctki_vi_gyy = -100; \
if (cctki_vi_gyy == -100) cctki_vi_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyy)); \
static int cctki_vi_gyz = -100; \
if (cctki_vi_gyz == -100) cctki_vi_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyz)); \
static int cctki_vi_gzz = -100; \
if (cctki_vi_gzz == -100) cctki_vi_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gzz)); \
static int cctki_vi_hydro_excision_mask = -100; \
if (cctki_vi_hydro_excision_mask == -100) cctki_vi_hydro_excision_mask = CCTK_VarIndex("HYDROBASE::hydro_excision_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, hydro_excision_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_hydro_excision_mask)); \
static int cctki_vi_kaa = -100; \
if (cctki_vi_kaa == -100) cctki_vi_kaa = CCTK_VarIndex("GRHYDRO::kaa"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kaa, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kaa)); \
static int cctki_vi_kab = -100; \
if (cctki_vi_kab == -100) cctki_vi_kab = CCTK_VarIndex("GRHYDRO::kab"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kab, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kab)); \
static int cctki_vi_kac = -100; \
if (cctki_vi_kac == -100) cctki_vi_kac = CCTK_VarIndex("GRHYDRO::kac"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kac, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kac)); \
static int cctki_vi_kbb = -100; \
if (cctki_vi_kbb == -100) cctki_vi_kbb = CCTK_VarIndex("GRHYDRO::kbb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kbb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kbb)); \
static int cctki_vi_kbc = -100; \
if (cctki_vi_kbc == -100) cctki_vi_kbc = CCTK_VarIndex("GRHYDRO::kbc"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kbc, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kbc)); \
static int cctki_vi_kcc = -100; \
if (cctki_vi_kcc == -100) cctki_vi_kcc = CCTK_VarIndex("GRHYDRO::kcc"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kcc, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kcc)); \
static int cctki_vi_kxx = -100; \
if (cctki_vi_kxx == -100) cctki_vi_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxx)); \
static int cctki_vi_kxy = -100; \
if (cctki_vi_kxy == -100) cctki_vi_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxy)); \
static int cctki_vi_kxz = -100; \
if (cctki_vi_kxz == -100) cctki_vi_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxz)); \
static int cctki_vi_kyy = -100; \
if (cctki_vi_kyy == -100) cctki_vi_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyy)); \
static int cctki_vi_kyz = -100; \
if (cctki_vi_kyz == -100) cctki_vi_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyz)); \
static int cctki_vi_kzz = -100; \
if (cctki_vi_kzz == -100) cctki_vi_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kzz)); \
static int cctki_vi_lBvec = -100; \
if (cctki_vi_lBvec == -100) cctki_vi_lBvec = CCTK_VarIndex("GRHYDRO::lBvec[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, lBvec, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_lBvec)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, lBvec_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_lBvec)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, lBvec_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_lBvec)); \
static int cctki_vi_lvel = -100; \
if (cctki_vi_lvel == -100) cctki_vi_lvel = CCTK_VarIndex("GRHYDRO::lvel[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, lvel, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_lvel)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, lvel_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_lvel)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, lvel_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_lvel)); \
static int cctki_vi_maxima_x = -100; \
if (cctki_vi_maxima_x == -100) cctki_vi_maxima_x = CCTK_VarIndex("GRHYDRO::maxima_x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, maxima_x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_maxima_x)); \
static int cctki_vi_maxima_y = -100; \
if (cctki_vi_maxima_y == -100) cctki_vi_maxima_y = CCTK_VarIndex("GRHYDRO::maxima_y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, maxima_y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_maxima_y)); \
static int cctki_vi_maxima_z = -100; \
if (cctki_vi_maxima_z == -100) cctki_vi_maxima_z = CCTK_VarIndex("GRHYDRO::maxima_z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, maxima_z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_maxima_z)); \
static int cctki_vi_maximum_density = -100; \
if (cctki_vi_maximum_density == -100) cctki_vi_maximum_density = CCTK_VarIndex("GRHYDRO::maximum_density"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, maximum_density, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_maximum_density)); \
static int cctki_vi_maxrho_global = -100; \
if (cctki_vi_maxrho_global == -100) cctki_vi_maxrho_global = CCTK_VarIndex("GRHYDRO::maxrho_global"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, maxrho_global, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_maxrho_global)); \
static int cctki_vi_press = -100; \
if (cctki_vi_press == -100) cctki_vi_press = CCTK_VarIndex("HYDROBASE::press"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, press, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_press)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, press_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_press)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, press_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_press)); \
static int cctki_vi_pressminus = -100; \
if (cctki_vi_pressminus == -100) cctki_vi_pressminus = CCTK_VarIndex("GRHYDRO::pressminus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, pressminus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_pressminus)); \
static int cctki_vi_pressplus = -100; \
if (cctki_vi_pressplus == -100) cctki_vi_pressplus = CCTK_VarIndex("GRHYDRO::pressplus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, pressplus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_pressplus)); \
static int cctki_vi_psi = -100; \
if (cctki_vi_psi == -100) cctki_vi_psi = CCTK_VarIndex("STATICCONFORMAL::psi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psi)); \
static int cctki_vi_psidc = -100; \
if (cctki_vi_psidc == -100) cctki_vi_psidc = CCTK_VarIndex("GRHYDRO::psidc"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psidc, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psidc)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psidc_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_psidc)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psidc_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_psidc)); \
static int cctki_vi_psidcflux = -100; \
if (cctki_vi_psidcflux == -100) cctki_vi_psidcflux = CCTK_VarIndex("GRHYDRO::psidcflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psidcflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psidcflux)); \
static int cctki_vi_psidcrhs = -100; \
if (cctki_vi_psidcrhs == -100) cctki_vi_psidcrhs = CCTK_VarIndex("GRHYDRO::psidcrhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psidcrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psidcrhs)); \
static int cctki_vi_psix = -100; \
if (cctki_vi_psix == -100) cctki_vi_psix = CCTK_VarIndex("STATICCONFORMAL::psix"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psix, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psix)); \
static int cctki_vi_psixx = -100; \
if (cctki_vi_psixx == -100) cctki_vi_psixx = CCTK_VarIndex("STATICCONFORMAL::psixx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psixx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psixx)); \
static int cctki_vi_psixy = -100; \
if (cctki_vi_psixy == -100) cctki_vi_psixy = CCTK_VarIndex("STATICCONFORMAL::psixy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psixy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psixy)); \
static int cctki_vi_psixz = -100; \
if (cctki_vi_psixz == -100) cctki_vi_psixz = CCTK_VarIndex("STATICCONFORMAL::psixz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psixz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psixz)); \
static int cctki_vi_psiy = -100; \
if (cctki_vi_psiy == -100) cctki_vi_psiy = CCTK_VarIndex("STATICCONFORMAL::psiy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiy)); \
static int cctki_vi_psiyy = -100; \
if (cctki_vi_psiyy == -100) cctki_vi_psiyy = CCTK_VarIndex("STATICCONFORMAL::psiyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiyy)); \
static int cctki_vi_psiyz = -100; \
if (cctki_vi_psiyz == -100) cctki_vi_psiyz = CCTK_VarIndex("STATICCONFORMAL::psiyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiyz)); \
static int cctki_vi_psiz = -100; \
if (cctki_vi_psiz == -100) cctki_vi_psiz = CCTK_VarIndex("STATICCONFORMAL::psiz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiz)); \
static int cctki_vi_psizz = -100; \
if (cctki_vi_psizz == -100) cctki_vi_psizz = CCTK_VarIndex("STATICCONFORMAL::psizz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psizz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psizz)); \
static int cctki_vi_r = -100; \
if (cctki_vi_r == -100) cctki_vi_r = CCTK_VarIndex("GRID::r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_r)); \
static int cctki_vi_rho = -100; \
if (cctki_vi_rho == -100) cctki_vi_rho = CCTK_VarIndex("HYDROBASE::rho"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, rho, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_rho)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, rho_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_rho)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, rho_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_rho)); \
static int cctki_vi_rhominus = -100; \
if (cctki_vi_rhominus == -100) cctki_vi_rhominus = CCTK_VarIndex("GRHYDRO::rhominus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, rhominus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_rhominus)); \
static int cctki_vi_rhoplus = -100; \
if (cctki_vi_rhoplus == -100) cctki_vi_rhoplus = CCTK_VarIndex("GRHYDRO::rhoplus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, rhoplus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_rhoplus)); \
static int cctki_vi_scon = -100; \
if (cctki_vi_scon == -100) cctki_vi_scon = CCTK_VarIndex("GRHYDRO::scon[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, scon, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_scon)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, scon_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_scon)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, scon_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_scon)); \
static int cctki_vi_sdetg = -100; \
if (cctki_vi_sdetg == -100) cctki_vi_sdetg = CCTK_VarIndex("GRHYDRO::sdetg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, sdetg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sdetg)); \
static int cctki_vi_shift_state = -100; \
if (cctki_vi_shift_state == -100) cctki_vi_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, shift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_shift_state)); \
static int cctki_vi_space_mask = -100; \
if (cctki_vi_space_mask == -100) cctki_vi_space_mask = CCTK_VarIndex("SPACEMASK::space_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, space_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_space_mask)); \
static int cctki_vi_srhs = -100; \
if (cctki_vi_srhs == -100) cctki_vi_srhs = CCTK_VarIndex("GRHYDRO::srhs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, srhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_srhs)); \
static int cctki_vi_stress_energy_state = -100; \
if (cctki_vi_stress_energy_state == -100) cctki_vi_stress_energy_state = CCTK_VarIndex("TMUNUBASE::stress_energy_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, stress_energy_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stress_energy_state)); \
static int cctki_vi_sxflux = -100; \
if (cctki_vi_sxflux == -100) cctki_vi_sxflux = CCTK_VarIndex("GRHYDRO::sxflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, sxflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sxflux)); \
static int cctki_vi_syflux = -100; \
if (cctki_vi_syflux == -100) cctki_vi_syflux = CCTK_VarIndex("GRHYDRO::syflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, syflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_syflux)); \
static int cctki_vi_szflux = -100; \
if (cctki_vi_szflux == -100) cctki_vi_szflux = CCTK_VarIndex("GRHYDRO::szflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, szflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_szflux)); \
static int cctki_vi_tau = -100; \
if (cctki_vi_tau == -100) cctki_vi_tau = CCTK_VarIndex("GRHYDRO::tau"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tau, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tau)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tau_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_tau)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tau_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_tau)); \
static int cctki_vi_tauflux = -100; \
if (cctki_vi_tauflux == -100) cctki_vi_tauflux = CCTK_VarIndex("GRHYDRO::tauflux"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tauflux, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tauflux)); \
static int cctki_vi_taurhs = -100; \
if (cctki_vi_taurhs == -100) cctki_vi_taurhs = CCTK_VarIndex("GRHYDRO::taurhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, taurhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_taurhs)); \
static int cctki_vi_temperature = -100; \
if (cctki_vi_temperature == -100) cctki_vi_temperature = CCTK_VarIndex("HYDROBASE::temperature"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, temperature, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_temperature)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, temperature_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_temperature)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, temperature_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_temperature)); \
static int cctki_vi_tracer = -100; \
if (cctki_vi_tracer == -100) cctki_vi_tracer = CCTK_VarIndex("GRHYDRO::tracer[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tracer, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tracer)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tracer_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_tracer)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tracer_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_tracer)); \
static int cctki_vi_vel = -100; \
if (cctki_vi_vel == -100) cctki_vi_vel = CCTK_VarIndex("HYDROBASE::vel[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, vel, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_vel)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, vel_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_vel)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, vel_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_vel)); \
static int cctki_vi_velxminus = -100; \
if (cctki_vi_velxminus == -100) cctki_vi_velxminus = CCTK_VarIndex("GRHYDRO::velxminus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, velxminus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_velxminus)); \
static int cctki_vi_velxplus = -100; \
if (cctki_vi_velxplus == -100) cctki_vi_velxplus = CCTK_VarIndex("GRHYDRO::velxplus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, velxplus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_velxplus)); \
static int cctki_vi_velyminus = -100; \
if (cctki_vi_velyminus == -100) cctki_vi_velyminus = CCTK_VarIndex("GRHYDRO::velyminus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, velyminus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_velyminus)); \
static int cctki_vi_velyplus = -100; \
if (cctki_vi_velyplus == -100) cctki_vi_velyplus = CCTK_VarIndex("GRHYDRO::velyplus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, velyplus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_velyplus)); \
static int cctki_vi_velzminus = -100; \
if (cctki_vi_velzminus == -100) cctki_vi_velzminus = CCTK_VarIndex("GRHYDRO::velzminus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, velzminus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_velzminus)); \
static int cctki_vi_velzplus = -100; \
if (cctki_vi_velzplus == -100) cctki_vi_velzplus = CCTK_VarIndex("GRHYDRO::velzplus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, velzplus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_velzplus)); \
static int cctki_vi_w_lorentz = -100; \
if (cctki_vi_w_lorentz == -100) cctki_vi_w_lorentz = CCTK_VarIndex("HYDROBASE::w_lorentz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_lorentz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_w_lorentz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_lorentz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_w_lorentz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_lorentz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_w_lorentz)); \
static int cctki_vi_w_lorentzminus = -100; \
if (cctki_vi_w_lorentzminus == -100) cctki_vi_w_lorentzminus = CCTK_VarIndex("GRHYDRO::w_lorentzminus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_lorentzminus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_w_lorentzminus)); \
static int cctki_vi_w_lorentzplus = -100; \
if (cctki_vi_w_lorentzplus == -100) cctki_vi_w_lorentzplus = CCTK_VarIndex("GRHYDRO::w_lorentzplus"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_lorentzplus, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_w_lorentzplus)); \
static int cctki_vi_x = -100; \
if (cctki_vi_x == -100) cctki_vi_x = CCTK_VarIndex("GRID::x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x)); \
static int cctki_vi_xoffset = -100; \
if (cctki_vi_xoffset == -100) cctki_vi_xoffset = CCTK_VarIndex("GRHYDRO::xoffset"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, xoffset, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_xoffset)); \
static int cctki_vi_y = -100; \
if (cctki_vi_y == -100) cctki_vi_y = CCTK_VarIndex("GRID::y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_y)); \
static int cctki_vi_yoffset = -100; \
if (cctki_vi_yoffset == -100) cctki_vi_yoffset = CCTK_VarIndex("GRHYDRO::yoffset"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, yoffset, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_yoffset)); \
static int cctki_vi_z = -100; \
if (cctki_vi_z == -100) cctki_vi_z = CCTK_VarIndex("GRID::z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_z)); \
static int cctki_vi_zoffset = -100; \
if (cctki_vi_zoffset == -100) cctki_vi_zoffset = CCTK_VarIndex("GRHYDRO::zoffset"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, zoffset, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zoffset));

#define DECLARE_GRHYDRO_INITDATA_PUBLIC_C2F \
static int CCTKARGNUM_Abar = -1; \
static int CCTKGROUPNUM_Abar = -1; \
static int CCTKARGNUM_Aphi = -1; \
static int CCTKGROUPNUM_Aphi = -1; \
static int CCTKARGNUM_Aphiflux = -1; \
static int CCTKGROUPNUM_GRHydro_Aphifluxes = -1; \
static int CCTKARGNUM_Aphirhs = -1; \
static int CCTKGROUPNUM_Aphirhs = -1; \
static int CCTKARGNUM_Avec = -1; \
static int CCTKGROUPNUM_Avec = -1; \
static int CCTKARGNUM_Avecrhs = -1; \
static int CCTKGROUPNUM_Avecrhs = -1; \
static int CCTKARGNUM_Avecxflux = -1; \
static int CCTKGROUPNUM_GRHydro_Avecfluxes = -1; \
static int CCTKARGNUM_Avecyflux = -1; \
static int CCTKARGNUM_Aveczflux = -1; \
static int CCTKARGNUM_Bcons = -1; \
static int CCTKGROUPNUM_Bcons = -1; \
static int CCTKARGNUM_Bconsrhs = -1; \
static int CCTKGROUPNUM_Bconsrhs = -1; \
static int CCTKARGNUM_Bconsxflux = -1; \
static int CCTKGROUPNUM_GRHydro_Bfluxes = -1; \
static int CCTKARGNUM_Bconsyflux = -1; \
static int CCTKARGNUM_Bconszflux = -1; \
static int CCTKARGNUM_Bvec = -1; \
static int CCTKGROUPNUM_Bvec = -1; \
static int CCTKARGNUM_Evec = -1; \
static int CCTKGROUPNUM_Evec = -1; \
static int CCTKARGNUM_GRHydro_C2P_failed = -1; \
static int CCTKGROUPNUM_GRHydro_C2P_failed = -1; \
static int CCTKARGNUM_GRHydro_eos_handle = -1; \
static int CCTKGROUPNUM_GRHydro_eos_scalars = -1; \
static int CCTKARGNUM_GRHydro_polytrope_handle = -1; \
static int CCTKARGNUM_GRHydro_reflevel = -1; \
static int CCTKGROUPNUM_GRHydro_reflevel = -1; \
static int CCTKARGNUM_GRHydro_rho_min = -1; \
static int CCTKGROUPNUM_GRHydro_minima = -1; \
static int CCTKARGNUM_GRHydro_tau_min = -1; \
static int CCTKARGNUM_Y_e = -1; \
static int CCTKGROUPNUM_Y_e = -1; \
static int CCTKARGNUM_Y_e_con = -1; \
static int CCTKGROUPNUM_Y_e_con = -1; \
static int CCTKARGNUM_Y_e_con_flux = -1; \
static int CCTKGROUPNUM_Y_e_con_flux = -1; \
static int CCTKARGNUM_Y_e_con_rhs = -1; \
static int CCTKGROUPNUM_Y_e_con_rhs = -1; \
static int CCTKARGNUM_alp = -1; \
static int CCTKGROUPNUM_lapse = -1; \
static int CCTKARGNUM_atmosphere_atmosp_descriptor = -1; \
static int CCTKGROUPNUM_GRHydro_atmosphere_descriptors = -1; \
static int CCTKARGNUM_atmosphere_field_descriptor = -1; \
static int CCTKARGNUM_atmosphere_mask = -1; \
static int CCTKGROUPNUM_GRHydro_atmosphere_mask = -1; \
static int CCTKARGNUM_atmosphere_mask_real = -1; \
static int CCTKGROUPNUM_GRHydro_atmosphere_mask_real = -1; \
static int CCTKARGNUM_atmosphere_normal_descriptor = -1; \
static int CCTKARGNUM_bcom = -1; \
static int CCTKGROUPNUM_bcom = -1; \
static int CCTKARGNUM_bcom0 = -1; \
static int CCTKGROUPNUM_bcom0 = -1; \
static int CCTKARGNUM_bcom_sq = -1; \
static int CCTKGROUPNUM_bcom_sq = -1; \
static int CCTKARGNUM_betaa = -1; \
static int CCTKGROUPNUM_local_shift = -1; \
static int CCTKARGNUM_betab = -1; \
static int CCTKARGNUM_betac = -1; \
static int CCTKARGNUM_betax = -1; \
static int CCTKGROUPNUM_shift = -1; \
static int CCTKARGNUM_betay = -1; \
static int CCTKARGNUM_betaz = -1; \
static int CCTKARGNUM_coarse_dx = -1; \
static int CCTKGROUPNUM_gridspacings = -1; \
static int CCTKARGNUM_coarse_dy = -1; \
static int CCTKARGNUM_coarse_dz = -1; \
static int CCTKARGNUM_conformal_state = -1; \
static int CCTKGROUPNUM_conformal_state = -1; \
static int CCTKARGNUM_cons_tracer = -1; \
static int CCTKGROUPNUM_GRHydro_cons_tracers = -1; \
static int CCTKARGNUM_cs2minus = -1; \
static int CCTKGROUPNUM_GRHydro_prim_bext = -1; \
static int CCTKARGNUM_cs2plus = -1; \
static int CCTKARGNUM_dens = -1; \
static int CCTKGROUPNUM_dens = -1; \
static int CCTKARGNUM_densflux = -1; \
static int CCTKGROUPNUM_GRHydro_fluxes = -1; \
static int CCTKARGNUM_densrhs = -1; \
static int CCTKGROUPNUM_densrhs = -1; \
static int CCTKARGNUM_divB = -1; \
static int CCTKGROUPNUM_divB = -1; \
static int CCTKARGNUM_dtalp = -1; \
static int CCTKGROUPNUM_dtlapse = -1; \
static int CCTKARGNUM_dtbetax = -1; \
static int CCTKGROUPNUM_dtshift = -1; \
static int CCTKARGNUM_dtbetay = -1; \
static int CCTKARGNUM_dtbetaz = -1; \
static int CCTKARGNUM_dtlapse_state = -1; \
static int CCTKGROUPNUM_dtlapse_state = -1; \
static int CCTKARGNUM_dtshift_state = -1; \
static int CCTKGROUPNUM_dtshift_state = -1; \
static int CCTKARGNUM_eTtt = -1; \
static int CCTKGROUPNUM_stress_energy_scalar = -1; \
static int CCTKARGNUM_eTtx = -1; \
static int CCTKGROUPNUM_stress_energy_vector = -1; \
static int CCTKARGNUM_eTty = -1; \
static int CCTKARGNUM_eTtz = -1; \
static int CCTKARGNUM_eTxx = -1; \
static int CCTKGROUPNUM_stress_energy_tensor = -1; \
static int CCTKARGNUM_eTxy = -1; \
static int CCTKARGNUM_eTxz = -1; \
static int CCTKARGNUM_eTyy = -1; \
static int CCTKARGNUM_eTyz = -1; \
static int CCTKARGNUM_eTzz = -1; \
static int CCTKARGNUM_emask = -1; \
static int CCTKGROUPNUM_mask = -1; \
static int CCTKARGNUM_entropy = -1; \
static int CCTKGROUPNUM_entropy = -1; \
static int CCTKARGNUM_entropycons = -1; \
static int CCTKGROUPNUM_entropycons = -1; \
static int CCTKARGNUM_entropyflux = -1; \
static int CCTKGROUPNUM_GRHydro_entropyfluxes = -1; \
static int CCTKARGNUM_entropyrhs = -1; \
static int CCTKGROUPNUM_entropyrhs = -1; \
static int CCTKARGNUM_eps = -1; \
static int CCTKGROUPNUM_eps = -1; \
static int CCTKARGNUM_epsminus = -1; \
static int CCTKARGNUM_epsplus = -1; \
static int CCTKARGNUM_evolve_Lorenz_gge = -1; \
static int CCTKGROUPNUM_evolve_Lorenz_gge = -1; \
static int CCTKARGNUM_evolve_MHD = -1; \
static int CCTKGROUPNUM_evolve_MHD = -1; \
static int CCTKARGNUM_evolve_Y_e = -1; \
static int CCTKGROUPNUM_evolve_Y_e = -1; \
static int CCTKARGNUM_evolve_entropy = -1; \
static int CCTKGROUPNUM_evolve_entropy = -1; \
static int CCTKARGNUM_evolve_temper = -1; \
static int CCTKGROUPNUM_evolve_temper = -1; \
static int CCTKARGNUM_flux_direction = -1; \
static int CCTKGROUPNUM_GRHydro_scalars = -1; \
static int CCTKARGNUM_gaa = -1; \
static int CCTKGROUPNUM_local_metric = -1; \
static int CCTKARGNUM_gab = -1; \
static int CCTKARGNUM_gac = -1; \
static int CCTKARGNUM_gbb = -1; \
static int CCTKARGNUM_gbc = -1; \
static int CCTKARGNUM_gcc = -1; \
static int CCTKARGNUM_gxx = -1; \
static int CCTKGROUPNUM_metric = -1; \
static int CCTKARGNUM_gxy = -1; \
static int CCTKARGNUM_gxz = -1; \
static int CCTKARGNUM_gyy = -1; \
static int CCTKARGNUM_gyz = -1; \
static int CCTKARGNUM_gzz = -1; \
static int CCTKARGNUM_hydro_excision_mask = -1; \
static int CCTKGROUPNUM_hydro_excision_mask = -1; \
static int CCTKARGNUM_kaa = -1; \
static int CCTKGROUPNUM_local_extrinsic_curvature = -1; \
static int CCTKARGNUM_kab = -1; \
static int CCTKARGNUM_kac = -1; \
static int CCTKARGNUM_kbb = -1; \
static int CCTKARGNUM_kbc = -1; \
static int CCTKARGNUM_kcc = -1; \
static int CCTKARGNUM_kxx = -1; \
static int CCTKGROUPNUM_curv = -1; \
static int CCTKARGNUM_kxy = -1; \
static int CCTKARGNUM_kxz = -1; \
static int CCTKARGNUM_kyy = -1; \
static int CCTKARGNUM_kyz = -1; \
static int CCTKARGNUM_kzz = -1; \
static int CCTKARGNUM_lBvec = -1; \
static int CCTKGROUPNUM_lBvec = -1; \
static int CCTKARGNUM_lvel = -1; \
static int CCTKGROUPNUM_lvel = -1; \
static int CCTKARGNUM_maxima_x = -1; \
static int CCTKGROUPNUM_GRHydro_maxima_position = -1; \
static int CCTKARGNUM_maxima_y = -1; \
static int CCTKARGNUM_maxima_z = -1; \
static int CCTKARGNUM_maximum_density = -1; \
static int CCTKARGNUM_maxrho_global = -1; \
static int CCTKGROUPNUM_maxrho_global = -1; \
static int CCTKARGNUM_press = -1; \
static int CCTKGROUPNUM_press = -1; \
static int CCTKARGNUM_pressminus = -1; \
static int CCTKARGNUM_pressplus = -1; \
static int CCTKARGNUM_psi = -1; \
static int CCTKGROUPNUM_confac = -1; \
static int CCTKARGNUM_psidc = -1; \
static int CCTKGROUPNUM_psidc = -1; \
static int CCTKARGNUM_psidcflux = -1; \
static int CCTKGROUPNUM_GRHydro_psifluxes = -1; \
static int CCTKARGNUM_psidcrhs = -1; \
static int CCTKGROUPNUM_psidcrhs = -1; \
static int CCTKARGNUM_psix = -1; \
static int CCTKGROUPNUM_confac_1derivs = -1; \
static int CCTKARGNUM_psixx = -1; \
static int CCTKGROUPNUM_confac_2derivs = -1; \
static int CCTKARGNUM_psixy = -1; \
static int CCTKARGNUM_psixz = -1; \
static int CCTKARGNUM_psiy = -1; \
static int CCTKARGNUM_psiyy = -1; \
static int CCTKARGNUM_psiyz = -1; \
static int CCTKARGNUM_psiz = -1; \
static int CCTKARGNUM_psizz = -1; \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_coordinates = -1; \
static int CCTKARGNUM_rho = -1; \
static int CCTKGROUPNUM_rho = -1; \
static int CCTKARGNUM_rhominus = -1; \
static int CCTKARGNUM_rhoplus = -1; \
static int CCTKARGNUM_scon = -1; \
static int CCTKGROUPNUM_scon = -1; \
static int CCTKARGNUM_sdetg = -1; \
static int CCTKGROUPNUM_sdetg = -1; \
static int CCTKARGNUM_shift_state = -1; \
static int CCTKGROUPNUM_shift_state = -1; \
static int CCTKARGNUM_space_mask = -1; \
static int CCTKGROUPNUM_space_mask_group = -1; \
static int CCTKARGNUM_srhs = -1; \
static int CCTKGROUPNUM_srhs = -1; \
static int CCTKARGNUM_stress_energy_state = -1; \
static int CCTKGROUPNUM_stress_energy_state = -1; \
static int CCTKARGNUM_sxflux = -1; \
static int CCTKARGNUM_syflux = -1; \
static int CCTKARGNUM_szflux = -1; \
static int CCTKARGNUM_tau = -1; \
static int CCTKGROUPNUM_tau = -1; \
static int CCTKARGNUM_tauflux = -1; \
static int CCTKARGNUM_taurhs = -1; \
static int CCTKGROUPNUM_taurhs = -1; \
static int CCTKARGNUM_temperature = -1; \
static int CCTKGROUPNUM_temperature = -1; \
static int CCTKARGNUM_tracer = -1; \
static int CCTKGROUPNUM_GRHydro_tracers = -1; \
static int CCTKARGNUM_vel = -1; \
static int CCTKGROUPNUM_vel = -1; \
static int CCTKARGNUM_velxminus = -1; \
static int CCTKARGNUM_velxplus = -1; \
static int CCTKARGNUM_velyminus = -1; \
static int CCTKARGNUM_velyplus = -1; \
static int CCTKARGNUM_velzminus = -1; \
static int CCTKARGNUM_velzplus = -1; \
static int CCTKARGNUM_w_lorentz = -1; \
static int CCTKGROUPNUM_w_lorentz = -1; \
static int CCTKARGNUM_w_lorentzminus = -1; \
static int CCTKARGNUM_w_lorentzplus = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKARGNUM_xoffset = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_yoffset = -1; \
static int CCTKARGNUM_z = -1; \
static int CCTKARGNUM_zoffset = -1;

#define INITIALISE_GRHYDRO_INITDATA_PUBLIC_C2F \
if(CCTKARGNUM_Abar == -1) CCTKARGNUM_Abar = CCTK_VarIndex("HYDROBASE::Abar"); \
if(CCTKGROUPNUM_Abar == -1) CCTKGROUPNUM_Abar = CCTK_GroupIndex("HYDROBASE::Abar"); \
if(CCTKARGNUM_Aphi == -1) CCTKARGNUM_Aphi = CCTK_VarIndex("HYDROBASE::Aphi"); \
if(CCTKGROUPNUM_Aphi == -1) CCTKGROUPNUM_Aphi = CCTK_GroupIndex("HYDROBASE::Aphi"); \
if(CCTKARGNUM_Aphiflux == -1) CCTKARGNUM_Aphiflux = CCTK_VarIndex("GRHYDRO::Aphiflux"); \
if(CCTKGROUPNUM_GRHydro_Aphifluxes == -1) CCTKGROUPNUM_GRHydro_Aphifluxes = CCTK_GroupIndex("GRHYDRO::GRHydro_Aphifluxes"); \
if(CCTKARGNUM_Aphirhs == -1) CCTKARGNUM_Aphirhs = CCTK_VarIndex("GRHYDRO::Aphirhs"); \
if(CCTKGROUPNUM_Aphirhs == -1) CCTKGROUPNUM_Aphirhs = CCTK_GroupIndex("GRHYDRO::Aphirhs"); \
if(CCTKARGNUM_Avec == -1) CCTKARGNUM_Avec = CCTK_VarIndex("HYDROBASE::Avec[0]"); \
if(CCTKGROUPNUM_Avec == -1) CCTKGROUPNUM_Avec = CCTK_GroupIndex("HYDROBASE::Avec"); \
if(CCTKARGNUM_Avecrhs == -1) CCTKARGNUM_Avecrhs = CCTK_VarIndex("GRHYDRO::Avecrhs[0]"); \
if(CCTKGROUPNUM_Avecrhs == -1) CCTKGROUPNUM_Avecrhs = CCTK_GroupIndex("GRHYDRO::Avecrhs"); \
if(CCTKARGNUM_Avecxflux == -1) CCTKARGNUM_Avecxflux = CCTK_VarIndex("GRHYDRO::Avecxflux"); \
if(CCTKGROUPNUM_GRHydro_Avecfluxes == -1) CCTKGROUPNUM_GRHydro_Avecfluxes = CCTK_GroupIndex("GRHYDRO::GRHydro_Avecfluxes"); \
if(CCTKARGNUM_Avecyflux == -1) CCTKARGNUM_Avecyflux = CCTK_VarIndex("GRHYDRO::Avecyflux"); \
if(CCTKARGNUM_Aveczflux == -1) CCTKARGNUM_Aveczflux = CCTK_VarIndex("GRHYDRO::Aveczflux"); \
if(CCTKARGNUM_Bcons == -1) CCTKARGNUM_Bcons = CCTK_VarIndex("GRHYDRO::Bcons[0]"); \
if(CCTKGROUPNUM_Bcons == -1) CCTKGROUPNUM_Bcons = CCTK_GroupIndex("GRHYDRO::Bcons"); \
if(CCTKARGNUM_Bconsrhs == -1) CCTKARGNUM_Bconsrhs = CCTK_VarIndex("GRHYDRO::Bconsrhs[0]"); \
if(CCTKGROUPNUM_Bconsrhs == -1) CCTKGROUPNUM_Bconsrhs = CCTK_GroupIndex("GRHYDRO::Bconsrhs"); \
if(CCTKARGNUM_Bconsxflux == -1) CCTKARGNUM_Bconsxflux = CCTK_VarIndex("GRHYDRO::Bconsxflux"); \
if(CCTKGROUPNUM_GRHydro_Bfluxes == -1) CCTKGROUPNUM_GRHydro_Bfluxes = CCTK_GroupIndex("GRHYDRO::GRHydro_Bfluxes"); \
if(CCTKARGNUM_Bconsyflux == -1) CCTKARGNUM_Bconsyflux = CCTK_VarIndex("GRHYDRO::Bconsyflux"); \
if(CCTKARGNUM_Bconszflux == -1) CCTKARGNUM_Bconszflux = CCTK_VarIndex("GRHYDRO::Bconszflux"); \
if(CCTKARGNUM_Bvec == -1) CCTKARGNUM_Bvec = CCTK_VarIndex("HYDROBASE::Bvec[0]"); \
if(CCTKGROUPNUM_Bvec == -1) CCTKGROUPNUM_Bvec = CCTK_GroupIndex("HYDROBASE::Bvec"); \
if(CCTKARGNUM_Evec == -1) CCTKARGNUM_Evec = CCTK_VarIndex("GRHYDRO::Evec[0]"); \
if(CCTKGROUPNUM_Evec == -1) CCTKGROUPNUM_Evec = CCTK_GroupIndex("GRHYDRO::Evec"); \
if(CCTKARGNUM_GRHydro_C2P_failed == -1) CCTKARGNUM_GRHydro_C2P_failed = CCTK_VarIndex("GRHYDRO::GRHydro_C2P_failed"); \
if(CCTKGROUPNUM_GRHydro_C2P_failed == -1) CCTKGROUPNUM_GRHydro_C2P_failed = CCTK_GroupIndex("GRHYDRO::GRHydro_C2P_failed"); \
if(CCTKARGNUM_GRHydro_eos_handle == -1) CCTKARGNUM_GRHydro_eos_handle = CCTK_VarIndex("GRHYDRO::GRHydro_eos_handle"); \
if(CCTKGROUPNUM_GRHydro_eos_scalars == -1) CCTKGROUPNUM_GRHydro_eos_scalars = CCTK_GroupIndex("GRHYDRO::GRHydro_eos_scalars"); \
if(CCTKARGNUM_GRHydro_polytrope_handle == -1) CCTKARGNUM_GRHydro_polytrope_handle = CCTK_VarIndex("GRHYDRO::GRHydro_polytrope_handle"); \
if(CCTKARGNUM_GRHydro_reflevel == -1) CCTKARGNUM_GRHydro_reflevel = CCTK_VarIndex("GRHYDRO::GRHydro_reflevel"); \
if(CCTKGROUPNUM_GRHydro_reflevel == -1) CCTKGROUPNUM_GRHydro_reflevel = CCTK_GroupIndex("GRHYDRO::GRHydro_reflevel"); \
if(CCTKARGNUM_GRHydro_rho_min == -1) CCTKARGNUM_GRHydro_rho_min = CCTK_VarIndex("GRHYDRO::GRHydro_rho_min"); \
if(CCTKGROUPNUM_GRHydro_minima == -1) CCTKGROUPNUM_GRHydro_minima = CCTK_GroupIndex("GRHYDRO::GRHydro_minima"); \
if(CCTKARGNUM_GRHydro_tau_min == -1) CCTKARGNUM_GRHydro_tau_min = CCTK_VarIndex("GRHYDRO::GRHydro_tau_min"); \
if(CCTKARGNUM_Y_e == -1) CCTKARGNUM_Y_e = CCTK_VarIndex("HYDROBASE::Y_e"); \
if(CCTKGROUPNUM_Y_e == -1) CCTKGROUPNUM_Y_e = CCTK_GroupIndex("HYDROBASE::Y_e"); \
if(CCTKARGNUM_Y_e_con == -1) CCTKARGNUM_Y_e_con = CCTK_VarIndex("GRHYDRO::Y_e_con"); \
if(CCTKGROUPNUM_Y_e_con == -1) CCTKGROUPNUM_Y_e_con = CCTK_GroupIndex("GRHYDRO::Y_e_con"); \
if(CCTKARGNUM_Y_e_con_flux == -1) CCTKARGNUM_Y_e_con_flux = CCTK_VarIndex("GRHYDRO::Y_e_con_flux"); \
if(CCTKGROUPNUM_Y_e_con_flux == -1) CCTKGROUPNUM_Y_e_con_flux = CCTK_GroupIndex("GRHYDRO::Y_e_con_flux"); \
if(CCTKARGNUM_Y_e_con_rhs == -1) CCTKARGNUM_Y_e_con_rhs = CCTK_VarIndex("GRHYDRO::Y_e_con_rhs"); \
if(CCTKGROUPNUM_Y_e_con_rhs == -1) CCTKGROUPNUM_Y_e_con_rhs = CCTK_GroupIndex("GRHYDRO::Y_e_con_rhs"); \
if(CCTKARGNUM_alp == -1) CCTKARGNUM_alp = CCTK_VarIndex("ADMBASE::alp"); \
if(CCTKGROUPNUM_lapse == -1) CCTKGROUPNUM_lapse = CCTK_GroupIndex("ADMBASE::lapse"); \
if(CCTKARGNUM_atmosphere_atmosp_descriptor == -1) CCTKARGNUM_atmosphere_atmosp_descriptor = CCTK_VarIndex("GRHYDRO::atmosphere_atmosp_descriptor"); \
if(CCTKGROUPNUM_GRHydro_atmosphere_descriptors == -1) CCTKGROUPNUM_GRHydro_atmosphere_descriptors = CCTK_GroupIndex("GRHYDRO::GRHydro_atmosphere_descriptors"); \
if(CCTKARGNUM_atmosphere_field_descriptor == -1) CCTKARGNUM_atmosphere_field_descriptor = CCTK_VarIndex("GRHYDRO::atmosphere_field_descriptor"); \
if(CCTKARGNUM_atmosphere_mask == -1) CCTKARGNUM_atmosphere_mask = CCTK_VarIndex("GRHYDRO::atmosphere_mask"); \
if(CCTKGROUPNUM_GRHydro_atmosphere_mask == -1) CCTKGROUPNUM_GRHydro_atmosphere_mask = CCTK_GroupIndex("GRHYDRO::GRHydro_atmosphere_mask"); \
if(CCTKARGNUM_atmosphere_mask_real == -1) CCTKARGNUM_atmosphere_mask_real = CCTK_VarIndex("GRHYDRO::atmosphere_mask_real"); \
if(CCTKGROUPNUM_GRHydro_atmosphere_mask_real == -1) CCTKGROUPNUM_GRHydro_atmosphere_mask_real = CCTK_GroupIndex("GRHYDRO::GRHydro_atmosphere_mask_real"); \
if(CCTKARGNUM_atmosphere_normal_descriptor == -1) CCTKARGNUM_atmosphere_normal_descriptor = CCTK_VarIndex("GRHYDRO::atmosphere_normal_descriptor"); \
if(CCTKARGNUM_bcom == -1) CCTKARGNUM_bcom = CCTK_VarIndex("GRHYDRO::bcom[0]"); \
if(CCTKGROUPNUM_bcom == -1) CCTKGROUPNUM_bcom = CCTK_GroupIndex("GRHYDRO::bcom"); \
if(CCTKARGNUM_bcom0 == -1) CCTKARGNUM_bcom0 = CCTK_VarIndex("GRHYDRO::bcom0"); \
if(CCTKGROUPNUM_bcom0 == -1) CCTKGROUPNUM_bcom0 = CCTK_GroupIndex("GRHYDRO::bcom0"); \
if(CCTKARGNUM_bcom_sq == -1) CCTKARGNUM_bcom_sq = CCTK_VarIndex("GRHYDRO::bcom_sq"); \
if(CCTKGROUPNUM_bcom_sq == -1) CCTKGROUPNUM_bcom_sq = CCTK_GroupIndex("GRHYDRO::bcom_sq"); \
if(CCTKARGNUM_betaa == -1) CCTKARGNUM_betaa = CCTK_VarIndex("GRHYDRO::betaa"); \
if(CCTKGROUPNUM_local_shift == -1) CCTKGROUPNUM_local_shift = CCTK_GroupIndex("GRHYDRO::local_shift"); \
if(CCTKARGNUM_betab == -1) CCTKARGNUM_betab = CCTK_VarIndex("GRHYDRO::betab"); \
if(CCTKARGNUM_betac == -1) CCTKARGNUM_betac = CCTK_VarIndex("GRHYDRO::betac"); \
if(CCTKARGNUM_betax == -1) CCTKARGNUM_betax = CCTK_VarIndex("ADMBASE::betax"); \
if(CCTKGROUPNUM_shift == -1) CCTKGROUPNUM_shift = CCTK_GroupIndex("ADMBASE::shift"); \
if(CCTKARGNUM_betay == -1) CCTKARGNUM_betay = CCTK_VarIndex("ADMBASE::betay"); \
if(CCTKARGNUM_betaz == -1) CCTKARGNUM_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
if(CCTKARGNUM_coarse_dx == -1) CCTKARGNUM_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
if(CCTKGROUPNUM_gridspacings == -1) CCTKGROUPNUM_gridspacings = CCTK_GroupIndex("GRID::gridspacings"); \
if(CCTKARGNUM_coarse_dy == -1) CCTKARGNUM_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
if(CCTKARGNUM_coarse_dz == -1) CCTKARGNUM_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
if(CCTKARGNUM_conformal_state == -1) CCTKARGNUM_conformal_state = CCTK_VarIndex("STATICCONFORMAL::conformal_state"); \
if(CCTKGROUPNUM_conformal_state == -1) CCTKGROUPNUM_conformal_state = CCTK_GroupIndex("STATICCONFORMAL::conformal_state"); \
if(CCTKARGNUM_cons_tracer == -1) CCTKARGNUM_cons_tracer = CCTK_VarIndex("GRHYDRO::cons_tracer[0]"); \
if(CCTKGROUPNUM_GRHydro_cons_tracers == -1) CCTKGROUPNUM_GRHydro_cons_tracers = CCTK_GroupIndex("GRHYDRO::GRHydro_cons_tracers"); \
if(CCTKARGNUM_cs2minus == -1) CCTKARGNUM_cs2minus = CCTK_VarIndex("GRHYDRO::cs2minus"); \
if(CCTKGROUPNUM_GRHydro_prim_bext == -1) CCTKGROUPNUM_GRHydro_prim_bext = CCTK_GroupIndex("GRHYDRO::GRHydro_prim_bext"); \
if(CCTKARGNUM_cs2plus == -1) CCTKARGNUM_cs2plus = CCTK_VarIndex("GRHYDRO::cs2plus"); \
if(CCTKARGNUM_dens == -1) CCTKARGNUM_dens = CCTK_VarIndex("GRHYDRO::dens"); \
if(CCTKGROUPNUM_dens == -1) CCTKGROUPNUM_dens = CCTK_GroupIndex("GRHYDRO::dens"); \
if(CCTKARGNUM_densflux == -1) CCTKARGNUM_densflux = CCTK_VarIndex("GRHYDRO::densflux"); \
if(CCTKGROUPNUM_GRHydro_fluxes == -1) CCTKGROUPNUM_GRHydro_fluxes = CCTK_GroupIndex("GRHYDRO::GRHydro_fluxes"); \
if(CCTKARGNUM_densrhs == -1) CCTKARGNUM_densrhs = CCTK_VarIndex("GRHYDRO::densrhs"); \
if(CCTKGROUPNUM_densrhs == -1) CCTKGROUPNUM_densrhs = CCTK_GroupIndex("GRHYDRO::densrhs"); \
if(CCTKARGNUM_divB == -1) CCTKARGNUM_divB = CCTK_VarIndex("GRHYDRO::divB"); \
if(CCTKGROUPNUM_divB == -1) CCTKGROUPNUM_divB = CCTK_GroupIndex("GRHYDRO::divB"); \
if(CCTKARGNUM_dtalp == -1) CCTKARGNUM_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
if(CCTKGROUPNUM_dtlapse == -1) CCTKGROUPNUM_dtlapse = CCTK_GroupIndex("ADMBASE::dtlapse"); \
if(CCTKARGNUM_dtbetax == -1) CCTKARGNUM_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
if(CCTKGROUPNUM_dtshift == -1) CCTKGROUPNUM_dtshift = CCTK_GroupIndex("ADMBASE::dtshift"); \
if(CCTKARGNUM_dtbetay == -1) CCTKARGNUM_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
if(CCTKARGNUM_dtbetaz == -1) CCTKARGNUM_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
if(CCTKARGNUM_dtlapse_state == -1) CCTKARGNUM_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
if(CCTKGROUPNUM_dtlapse_state == -1) CCTKGROUPNUM_dtlapse_state = CCTK_GroupIndex("ADMBASE::dtlapse_state"); \
if(CCTKARGNUM_dtshift_state == -1) CCTKARGNUM_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
if(CCTKGROUPNUM_dtshift_state == -1) CCTKGROUPNUM_dtshift_state = CCTK_GroupIndex("ADMBASE::dtshift_state"); \
if(CCTKARGNUM_eTtt == -1) CCTKARGNUM_eTtt = CCTK_VarIndex("TMUNUBASE::eTtt"); \
if(CCTKGROUPNUM_stress_energy_scalar == -1) CCTKGROUPNUM_stress_energy_scalar = CCTK_GroupIndex("TMUNUBASE::stress_energy_scalar"); \
if(CCTKARGNUM_eTtx == -1) CCTKARGNUM_eTtx = CCTK_VarIndex("TMUNUBASE::eTtx"); \
if(CCTKGROUPNUM_stress_energy_vector == -1) CCTKGROUPNUM_stress_energy_vector = CCTK_GroupIndex("TMUNUBASE::stress_energy_vector"); \
if(CCTKARGNUM_eTty == -1) CCTKARGNUM_eTty = CCTK_VarIndex("TMUNUBASE::eTty"); \
if(CCTKARGNUM_eTtz == -1) CCTKARGNUM_eTtz = CCTK_VarIndex("TMUNUBASE::eTtz"); \
if(CCTKARGNUM_eTxx == -1) CCTKARGNUM_eTxx = CCTK_VarIndex("TMUNUBASE::eTxx"); \
if(CCTKGROUPNUM_stress_energy_tensor == -1) CCTKGROUPNUM_stress_energy_tensor = CCTK_GroupIndex("TMUNUBASE::stress_energy_tensor"); \
if(CCTKARGNUM_eTxy == -1) CCTKARGNUM_eTxy = CCTK_VarIndex("TMUNUBASE::eTxy"); \
if(CCTKARGNUM_eTxz == -1) CCTKARGNUM_eTxz = CCTK_VarIndex("TMUNUBASE::eTxz"); \
if(CCTKARGNUM_eTyy == -1) CCTKARGNUM_eTyy = CCTK_VarIndex("TMUNUBASE::eTyy"); \
if(CCTKARGNUM_eTyz == -1) CCTKARGNUM_eTyz = CCTK_VarIndex("TMUNUBASE::eTyz"); \
if(CCTKARGNUM_eTzz == -1) CCTKARGNUM_eTzz = CCTK_VarIndex("TMUNUBASE::eTzz"); \
if(CCTKARGNUM_emask == -1) CCTKARGNUM_emask = CCTK_VarIndex("SPACEMASK::emask"); \
if(CCTKGROUPNUM_mask == -1) CCTKGROUPNUM_mask = CCTK_GroupIndex("SPACEMASK::mask"); \
if(CCTKARGNUM_entropy == -1) CCTKARGNUM_entropy = CCTK_VarIndex("HYDROBASE::entropy"); \
if(CCTKGROUPNUM_entropy == -1) CCTKGROUPNUM_entropy = CCTK_GroupIndex("HYDROBASE::entropy"); \
if(CCTKARGNUM_entropycons == -1) CCTKARGNUM_entropycons = CCTK_VarIndex("GRHYDRO::entropycons"); \
if(CCTKGROUPNUM_entropycons == -1) CCTKGROUPNUM_entropycons = CCTK_GroupIndex("GRHYDRO::entropycons"); \
if(CCTKARGNUM_entropyflux == -1) CCTKARGNUM_entropyflux = CCTK_VarIndex("GRHYDRO::entropyflux"); \
if(CCTKGROUPNUM_GRHydro_entropyfluxes == -1) CCTKGROUPNUM_GRHydro_entropyfluxes = CCTK_GroupIndex("GRHYDRO::GRHydro_entropyfluxes"); \
if(CCTKARGNUM_entropyrhs == -1) CCTKARGNUM_entropyrhs = CCTK_VarIndex("GRHYDRO::entropyrhs"); \
if(CCTKGROUPNUM_entropyrhs == -1) CCTKGROUPNUM_entropyrhs = CCTK_GroupIndex("GRHYDRO::entropyrhs"); \
if(CCTKARGNUM_eps == -1) CCTKARGNUM_eps = CCTK_VarIndex("HYDROBASE::eps"); \
if(CCTKGROUPNUM_eps == -1) CCTKGROUPNUM_eps = CCTK_GroupIndex("HYDROBASE::eps"); \
if(CCTKARGNUM_epsminus == -1) CCTKARGNUM_epsminus = CCTK_VarIndex("GRHYDRO::epsminus"); \
if(CCTKARGNUM_epsplus == -1) CCTKARGNUM_epsplus = CCTK_VarIndex("GRHYDRO::epsplus"); \
if(CCTKARGNUM_evolve_Lorenz_gge == -1) CCTKARGNUM_evolve_Lorenz_gge = CCTK_VarIndex("GRHYDRO::evolve_Lorenz_gge"); \
if(CCTKGROUPNUM_evolve_Lorenz_gge == -1) CCTKGROUPNUM_evolve_Lorenz_gge = CCTK_GroupIndex("GRHYDRO::evolve_Lorenz_gge"); \
if(CCTKARGNUM_evolve_MHD == -1) CCTKARGNUM_evolve_MHD = CCTK_VarIndex("GRHYDRO::evolve_MHD"); \
if(CCTKGROUPNUM_evolve_MHD == -1) CCTKGROUPNUM_evolve_MHD = CCTK_GroupIndex("GRHYDRO::evolve_MHD"); \
if(CCTKARGNUM_evolve_Y_e == -1) CCTKARGNUM_evolve_Y_e = CCTK_VarIndex("GRHYDRO::evolve_Y_e"); \
if(CCTKGROUPNUM_evolve_Y_e == -1) CCTKGROUPNUM_evolve_Y_e = CCTK_GroupIndex("GRHYDRO::evolve_Y_e"); \
if(CCTKARGNUM_evolve_entropy == -1) CCTKARGNUM_evolve_entropy = CCTK_VarIndex("GRHYDRO::evolve_entropy"); \
if(CCTKGROUPNUM_evolve_entropy == -1) CCTKGROUPNUM_evolve_entropy = CCTK_GroupIndex("GRHYDRO::evolve_entropy"); \
if(CCTKARGNUM_evolve_temper == -1) CCTKARGNUM_evolve_temper = CCTK_VarIndex("GRHYDRO::evolve_temper"); \
if(CCTKGROUPNUM_evolve_temper == -1) CCTKGROUPNUM_evolve_temper = CCTK_GroupIndex("GRHYDRO::evolve_temper"); \
if(CCTKARGNUM_flux_direction == -1) CCTKARGNUM_flux_direction = CCTK_VarIndex("GRHYDRO::flux_direction"); \
if(CCTKGROUPNUM_GRHydro_scalars == -1) CCTKGROUPNUM_GRHydro_scalars = CCTK_GroupIndex("GRHYDRO::GRHydro_scalars"); \
if(CCTKARGNUM_gaa == -1) CCTKARGNUM_gaa = CCTK_VarIndex("GRHYDRO::gaa"); \
if(CCTKGROUPNUM_local_metric == -1) CCTKGROUPNUM_local_metric = CCTK_GroupIndex("GRHYDRO::local_metric"); \
if(CCTKARGNUM_gab == -1) CCTKARGNUM_gab = CCTK_VarIndex("GRHYDRO::gab"); \
if(CCTKARGNUM_gac == -1) CCTKARGNUM_gac = CCTK_VarIndex("GRHYDRO::gac"); \
if(CCTKARGNUM_gbb == -1) CCTKARGNUM_gbb = CCTK_VarIndex("GRHYDRO::gbb"); \
if(CCTKARGNUM_gbc == -1) CCTKARGNUM_gbc = CCTK_VarIndex("GRHYDRO::gbc"); \
if(CCTKARGNUM_gcc == -1) CCTKARGNUM_gcc = CCTK_VarIndex("GRHYDRO::gcc"); \
if(CCTKARGNUM_gxx == -1) CCTKARGNUM_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
if(CCTKGROUPNUM_metric == -1) CCTKGROUPNUM_metric = CCTK_GroupIndex("ADMBASE::metric"); \
if(CCTKARGNUM_gxy == -1) CCTKARGNUM_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
if(CCTKARGNUM_gxz == -1) CCTKARGNUM_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
if(CCTKARGNUM_gyy == -1) CCTKARGNUM_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
if(CCTKARGNUM_gyz == -1) CCTKARGNUM_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
if(CCTKARGNUM_gzz == -1) CCTKARGNUM_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
if(CCTKARGNUM_hydro_excision_mask == -1) CCTKARGNUM_hydro_excision_mask = CCTK_VarIndex("HYDROBASE::hydro_excision_mask"); \
if(CCTKGROUPNUM_hydro_excision_mask == -1) CCTKGROUPNUM_hydro_excision_mask = CCTK_GroupIndex("HYDROBASE::hydro_excision_mask"); \
if(CCTKARGNUM_kaa == -1) CCTKARGNUM_kaa = CCTK_VarIndex("GRHYDRO::kaa"); \
if(CCTKGROUPNUM_local_extrinsic_curvature == -1) CCTKGROUPNUM_local_extrinsic_curvature = CCTK_GroupIndex("GRHYDRO::local_extrinsic_curvature"); \
if(CCTKARGNUM_kab == -1) CCTKARGNUM_kab = CCTK_VarIndex("GRHYDRO::kab"); \
if(CCTKARGNUM_kac == -1) CCTKARGNUM_kac = CCTK_VarIndex("GRHYDRO::kac"); \
if(CCTKARGNUM_kbb == -1) CCTKARGNUM_kbb = CCTK_VarIndex("GRHYDRO::kbb"); \
if(CCTKARGNUM_kbc == -1) CCTKARGNUM_kbc = CCTK_VarIndex("GRHYDRO::kbc"); \
if(CCTKARGNUM_kcc == -1) CCTKARGNUM_kcc = CCTK_VarIndex("GRHYDRO::kcc"); \
if(CCTKARGNUM_kxx == -1) CCTKARGNUM_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
if(CCTKGROUPNUM_curv == -1) CCTKGROUPNUM_curv = CCTK_GroupIndex("ADMBASE::curv"); \
if(CCTKARGNUM_kxy == -1) CCTKARGNUM_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
if(CCTKARGNUM_kxz == -1) CCTKARGNUM_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
if(CCTKARGNUM_kyy == -1) CCTKARGNUM_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
if(CCTKARGNUM_kyz == -1) CCTKARGNUM_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
if(CCTKARGNUM_kzz == -1) CCTKARGNUM_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
if(CCTKARGNUM_lBvec == -1) CCTKARGNUM_lBvec = CCTK_VarIndex("GRHYDRO::lBvec[0]"); \
if(CCTKGROUPNUM_lBvec == -1) CCTKGROUPNUM_lBvec = CCTK_GroupIndex("GRHYDRO::lBvec"); \
if(CCTKARGNUM_lvel == -1) CCTKARGNUM_lvel = CCTK_VarIndex("GRHYDRO::lvel[0]"); \
if(CCTKGROUPNUM_lvel == -1) CCTKGROUPNUM_lvel = CCTK_GroupIndex("GRHYDRO::lvel"); \
if(CCTKARGNUM_maxima_x == -1) CCTKARGNUM_maxima_x = CCTK_VarIndex("GRHYDRO::maxima_x"); \
if(CCTKGROUPNUM_GRHydro_maxima_position == -1) CCTKGROUPNUM_GRHydro_maxima_position = CCTK_GroupIndex("GRHYDRO::GRHydro_maxima_position"); \
if(CCTKARGNUM_maxima_y == -1) CCTKARGNUM_maxima_y = CCTK_VarIndex("GRHYDRO::maxima_y"); \
if(CCTKARGNUM_maxima_z == -1) CCTKARGNUM_maxima_z = CCTK_VarIndex("GRHYDRO::maxima_z"); \
if(CCTKARGNUM_maximum_density == -1) CCTKARGNUM_maximum_density = CCTK_VarIndex("GRHYDRO::maximum_density"); \
if(CCTKARGNUM_maxrho_global == -1) CCTKARGNUM_maxrho_global = CCTK_VarIndex("GRHYDRO::maxrho_global"); \
if(CCTKGROUPNUM_maxrho_global == -1) CCTKGROUPNUM_maxrho_global = CCTK_GroupIndex("GRHYDRO::maxrho_global"); \
if(CCTKARGNUM_press == -1) CCTKARGNUM_press = CCTK_VarIndex("HYDROBASE::press"); \
if(CCTKGROUPNUM_press == -1) CCTKGROUPNUM_press = CCTK_GroupIndex("HYDROBASE::press"); \
if(CCTKARGNUM_pressminus == -1) CCTKARGNUM_pressminus = CCTK_VarIndex("GRHYDRO::pressminus"); \
if(CCTKARGNUM_pressplus == -1) CCTKARGNUM_pressplus = CCTK_VarIndex("GRHYDRO::pressplus"); \
if(CCTKARGNUM_psi == -1) CCTKARGNUM_psi = CCTK_VarIndex("STATICCONFORMAL::psi"); \
if(CCTKGROUPNUM_confac == -1) CCTKGROUPNUM_confac = CCTK_GroupIndex("STATICCONFORMAL::confac"); \
if(CCTKARGNUM_psidc == -1) CCTKARGNUM_psidc = CCTK_VarIndex("GRHYDRO::psidc"); \
if(CCTKGROUPNUM_psidc == -1) CCTKGROUPNUM_psidc = CCTK_GroupIndex("GRHYDRO::psidc"); \
if(CCTKARGNUM_psidcflux == -1) CCTKARGNUM_psidcflux = CCTK_VarIndex("GRHYDRO::psidcflux"); \
if(CCTKGROUPNUM_GRHydro_psifluxes == -1) CCTKGROUPNUM_GRHydro_psifluxes = CCTK_GroupIndex("GRHYDRO::GRHydro_psifluxes"); \
if(CCTKARGNUM_psidcrhs == -1) CCTKARGNUM_psidcrhs = CCTK_VarIndex("GRHYDRO::psidcrhs"); \
if(CCTKGROUPNUM_psidcrhs == -1) CCTKGROUPNUM_psidcrhs = CCTK_GroupIndex("GRHYDRO::psidcrhs"); \
if(CCTKARGNUM_psix == -1) CCTKARGNUM_psix = CCTK_VarIndex("STATICCONFORMAL::psix"); \
if(CCTKGROUPNUM_confac_1derivs == -1) CCTKGROUPNUM_confac_1derivs = CCTK_GroupIndex("STATICCONFORMAL::confac_1derivs"); \
if(CCTKARGNUM_psixx == -1) CCTKARGNUM_psixx = CCTK_VarIndex("STATICCONFORMAL::psixx"); \
if(CCTKGROUPNUM_confac_2derivs == -1) CCTKGROUPNUM_confac_2derivs = CCTK_GroupIndex("STATICCONFORMAL::confac_2derivs"); \
if(CCTKARGNUM_psixy == -1) CCTKARGNUM_psixy = CCTK_VarIndex("STATICCONFORMAL::psixy"); \
if(CCTKARGNUM_psixz == -1) CCTKARGNUM_psixz = CCTK_VarIndex("STATICCONFORMAL::psixz"); \
if(CCTKARGNUM_psiy == -1) CCTKARGNUM_psiy = CCTK_VarIndex("STATICCONFORMAL::psiy"); \
if(CCTKARGNUM_psiyy == -1) CCTKARGNUM_psiyy = CCTK_VarIndex("STATICCONFORMAL::psiyy"); \
if(CCTKARGNUM_psiyz == -1) CCTKARGNUM_psiyz = CCTK_VarIndex("STATICCONFORMAL::psiyz"); \
if(CCTKARGNUM_psiz == -1) CCTKARGNUM_psiz = CCTK_VarIndex("STATICCONFORMAL::psiz"); \
if(CCTKARGNUM_psizz == -1) CCTKARGNUM_psizz = CCTK_VarIndex("STATICCONFORMAL::psizz"); \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("GRID::r"); \
if(CCTKGROUPNUM_coordinates == -1) CCTKGROUPNUM_coordinates = CCTK_GroupIndex("GRID::coordinates"); \
if(CCTKARGNUM_rho == -1) CCTKARGNUM_rho = CCTK_VarIndex("HYDROBASE::rho"); \
if(CCTKGROUPNUM_rho == -1) CCTKGROUPNUM_rho = CCTK_GroupIndex("HYDROBASE::rho"); \
if(CCTKARGNUM_rhominus == -1) CCTKARGNUM_rhominus = CCTK_VarIndex("GRHYDRO::rhominus"); \
if(CCTKARGNUM_rhoplus == -1) CCTKARGNUM_rhoplus = CCTK_VarIndex("GRHYDRO::rhoplus"); \
if(CCTKARGNUM_scon == -1) CCTKARGNUM_scon = CCTK_VarIndex("GRHYDRO::scon[0]"); \
if(CCTKGROUPNUM_scon == -1) CCTKGROUPNUM_scon = CCTK_GroupIndex("GRHYDRO::scon"); \
if(CCTKARGNUM_sdetg == -1) CCTKARGNUM_sdetg = CCTK_VarIndex("GRHYDRO::sdetg"); \
if(CCTKGROUPNUM_sdetg == -1) CCTKGROUPNUM_sdetg = CCTK_GroupIndex("GRHYDRO::sdetg"); \
if(CCTKARGNUM_shift_state == -1) CCTKARGNUM_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
if(CCTKGROUPNUM_shift_state == -1) CCTKGROUPNUM_shift_state = CCTK_GroupIndex("ADMBASE::shift_state"); \
if(CCTKARGNUM_space_mask == -1) CCTKARGNUM_space_mask = CCTK_VarIndex("SPACEMASK::space_mask"); \
if(CCTKGROUPNUM_space_mask_group == -1) CCTKGROUPNUM_space_mask_group = CCTK_GroupIndex("SPACEMASK::space_mask_group"); \
if(CCTKARGNUM_srhs == -1) CCTKARGNUM_srhs = CCTK_VarIndex("GRHYDRO::srhs[0]"); \
if(CCTKGROUPNUM_srhs == -1) CCTKGROUPNUM_srhs = CCTK_GroupIndex("GRHYDRO::srhs"); \
if(CCTKARGNUM_stress_energy_state == -1) CCTKARGNUM_stress_energy_state = CCTK_VarIndex("TMUNUBASE::stress_energy_state"); \
if(CCTKGROUPNUM_stress_energy_state == -1) CCTKGROUPNUM_stress_energy_state = CCTK_GroupIndex("TMUNUBASE::stress_energy_state"); \
if(CCTKARGNUM_sxflux == -1) CCTKARGNUM_sxflux = CCTK_VarIndex("GRHYDRO::sxflux"); \
if(CCTKARGNUM_syflux == -1) CCTKARGNUM_syflux = CCTK_VarIndex("GRHYDRO::syflux"); \
if(CCTKARGNUM_szflux == -1) CCTKARGNUM_szflux = CCTK_VarIndex("GRHYDRO::szflux"); \
if(CCTKARGNUM_tau == -1) CCTKARGNUM_tau = CCTK_VarIndex("GRHYDRO::tau"); \
if(CCTKGROUPNUM_tau == -1) CCTKGROUPNUM_tau = CCTK_GroupIndex("GRHYDRO::tau"); \
if(CCTKARGNUM_tauflux == -1) CCTKARGNUM_tauflux = CCTK_VarIndex("GRHYDRO::tauflux"); \
if(CCTKARGNUM_taurhs == -1) CCTKARGNUM_taurhs = CCTK_VarIndex("GRHYDRO::taurhs"); \
if(CCTKGROUPNUM_taurhs == -1) CCTKGROUPNUM_taurhs = CCTK_GroupIndex("GRHYDRO::taurhs"); \
if(CCTKARGNUM_temperature == -1) CCTKARGNUM_temperature = CCTK_VarIndex("HYDROBASE::temperature"); \
if(CCTKGROUPNUM_temperature == -1) CCTKGROUPNUM_temperature = CCTK_GroupIndex("HYDROBASE::temperature"); \
if(CCTKARGNUM_tracer == -1) CCTKARGNUM_tracer = CCTK_VarIndex("GRHYDRO::tracer[0]"); \
if(CCTKGROUPNUM_GRHydro_tracers == -1) CCTKGROUPNUM_GRHydro_tracers = CCTK_GroupIndex("GRHYDRO::GRHydro_tracers"); \
if(CCTKARGNUM_vel == -1) CCTKARGNUM_vel = CCTK_VarIndex("HYDROBASE::vel[0]"); \
if(CCTKGROUPNUM_vel == -1) CCTKGROUPNUM_vel = CCTK_GroupIndex("HYDROBASE::vel"); \
if(CCTKARGNUM_velxminus == -1) CCTKARGNUM_velxminus = CCTK_VarIndex("GRHYDRO::velxminus"); \
if(CCTKARGNUM_velxplus == -1) CCTKARGNUM_velxplus = CCTK_VarIndex("GRHYDRO::velxplus"); \
if(CCTKARGNUM_velyminus == -1) CCTKARGNUM_velyminus = CCTK_VarIndex("GRHYDRO::velyminus"); \
if(CCTKARGNUM_velyplus == -1) CCTKARGNUM_velyplus = CCTK_VarIndex("GRHYDRO::velyplus"); \
if(CCTKARGNUM_velzminus == -1) CCTKARGNUM_velzminus = CCTK_VarIndex("GRHYDRO::velzminus"); \
if(CCTKARGNUM_velzplus == -1) CCTKARGNUM_velzplus = CCTK_VarIndex("GRHYDRO::velzplus"); \
if(CCTKARGNUM_w_lorentz == -1) CCTKARGNUM_w_lorentz = CCTK_VarIndex("HYDROBASE::w_lorentz"); \
if(CCTKGROUPNUM_w_lorentz == -1) CCTKGROUPNUM_w_lorentz = CCTK_GroupIndex("HYDROBASE::w_lorentz"); \
if(CCTKARGNUM_w_lorentzminus == -1) CCTKARGNUM_w_lorentzminus = CCTK_VarIndex("GRHYDRO::w_lorentzminus"); \
if(CCTKARGNUM_w_lorentzplus == -1) CCTKARGNUM_w_lorentzplus = CCTK_VarIndex("GRHYDRO::w_lorentzplus"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("GRID::x"); \
if(CCTKARGNUM_xoffset == -1) CCTKARGNUM_xoffset = CCTK_VarIndex("GRHYDRO::xoffset"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("GRID::y"); \
if(CCTKARGNUM_yoffset == -1) CCTKARGNUM_yoffset = CCTK_VarIndex("GRHYDRO::yoffset"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("GRID::z"); \
if(CCTKARGNUM_zoffset == -1) CCTKARGNUM_zoffset = CCTK_VarIndex("GRHYDRO::zoffset");

#define GRHYDRO_INITDATA_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int

#define PASS_GRHYDRO_INITDATA_PUBLIC_C2F(GH) \
PASS_GROUPLEN(HYDROBASE, Avec),\
PASS_GROUPLEN(GRHYDRO, Avecrhs),\
PASS_GROUPLEN(GRHYDRO, Bcons),\
PASS_GROUPLEN(GRHYDRO, Bconsrhs),\
PASS_GROUPLEN(HYDROBASE, Bvec),\
PASS_GROUPLEN(GRHYDRO, Evec),\
PASS_GROUPLEN(GRHYDRO, GRHydro_cons_tracers),\
PASS_GROUPLEN(GRHYDRO, GRHydro_tracers),\
PASS_GROUPLEN(GRHYDRO, bcom),\
PASS_GROUPLEN(GRHYDRO, lBvec),\
PASS_GROUPLEN(GRHYDRO, lvel),\
PASS_GROUPLEN(GRHYDRO, scon),\
PASS_GROUPLEN(GRHYDRO, srhs),\
PASS_GROUPLEN(HYDROBASE, vel),\
(CCTK_REAL *)(PASS_REFERENCE(Abar, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Abar, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Abar, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Aphi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Aphi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Aphi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Aphiflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Aphirhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Avec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Avec, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Avec, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Avecrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Avecxflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Avecyflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Aveczflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bcons, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bcons, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Bcons, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Bconsrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bconsxflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bconsyflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bconszflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bvec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Bvec, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Bvec, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Evec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(GRHydro_C2P_failed, 0)),\
(CCTK_INT *)(PASS_REFERENCE(GRHydro_eos_handle, 0)),\
(CCTK_INT *)(PASS_REFERENCE(GRHydro_polytrope_handle, 0)),\
(CCTK_INT *)(PASS_REFERENCE(GRHydro_reflevel, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(GRHydro_rho_min, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(GRHydro_tau_min, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_e, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_e, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_e_con, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_e_con, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_e_con, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_e_con_flux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Y_e_con_rhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 2)),\
(CCTK_INT *)(PASS_REFERENCE(atmosphere_atmosp_descriptor, 0)),\
(CCTK_INT *)(PASS_REFERENCE(atmosphere_field_descriptor, 0)),\
(CCTK_INT *)(PASS_REFERENCE(atmosphere_mask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(atmosphere_mask_real, 0)),\
(CCTK_INT *)(PASS_REFERENCE(atmosphere_normal_descriptor, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcom, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcom, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(bcom, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(bcom0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcom0, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(bcom0, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(bcom_sq, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcom_sq, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(bcom_sq, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betaa, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betab, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betac, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dz, 0)),\
(CCTK_INT *)(PASS_REFERENCE(conformal_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cons_tracer, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cons_tracer, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(cons_tracer, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(cs2minus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cs2plus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dens, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dens, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dens, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(densflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(densrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(divB, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 2)),\
(CCTK_INT *)(PASS_REFERENCE(dtlapse_state, 0)),\
(CCTK_INT *)(PASS_REFERENCE(dtshift_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTtt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTtt, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTtt, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(eTtx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTtx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTtx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(eTty, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTty, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTty, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(eTtz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTtz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTtz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(eTxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(eTxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(eTxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(eTyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(eTyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(eTzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eTzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eTzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(emask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(entropy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(entropy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(entropy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(entropycons, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(entropycons, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(entropycons, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(entropyflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(entropyrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eps, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eps, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(eps, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(epsminus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(epsplus, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolve_Lorenz_gge, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolve_MHD, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolve_Y_e, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolve_entropy, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolve_temper, 0)),\
(CCTK_INT *)(PASS_REFERENCE(flux_direction, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gaa, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gaa, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gaa, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gab, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gab, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gab, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gac, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gac, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gac, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gbb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gbb, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gbb, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gbc, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gbc, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gbc, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gcc, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gcc, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gcc, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 2)),\
(CCTK_INT *)(PASS_REFERENCE(hydro_excision_mask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kaa, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kab, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kac, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kbb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kbc, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kcc, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(lBvec, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lBvec, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(lBvec, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(lvel, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(lvel, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(lvel, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(maxima_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(maxima_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(maxima_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(maximum_density, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(maxrho_global, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(press, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(press, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(press, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(pressminus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(pressplus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psidc, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psidc, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(psidc, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(psidcflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psidcrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psix, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psixx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psixy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psixz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psizz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rho, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rho, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(rho, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(rhominus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rhoplus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(scon, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(scon, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(scon, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(sdetg, 0)),\
(CCTK_INT *)(PASS_REFERENCE(shift_state, 0)),\
(CCTK_INT *)(PASS_REFERENCE(space_mask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(srhs, 0)),\
(CCTK_INT *)(PASS_REFERENCE(stress_energy_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sxflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(syflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(szflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tau, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(tau, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(tauflux, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(taurhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temperature, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(temperature, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(temperature, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(tracer, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tracer, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(tracer, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(vel, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(vel, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(vel, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(velxminus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(velxplus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(velyminus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(velyplus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(velzminus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(velzplus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_lorentz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_lorentz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(w_lorentz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(w_lorentzminus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_lorentzplus, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_INT *)(PASS_REFERENCE(xoffset, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_INT *)(PASS_REFERENCE(yoffset, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0)),\
(CCTK_INT *)(PASS_REFERENCE(zoffset, 0))

#endif /* CCODE */

#ifdef FCODE
#define GRHYDRO_INITDATA_FARGUMENTS _CCTK_FARGUMENTS, GRHYDRO_INITDATA_PRIVATE_FARGUMENTS, GRHYDRO_INITDATA_PROTECTED_FARGUMENTS, GRHYDRO_INITDATA_PUBLIC_FARGUMENTS

#define DECLARE_GRHYDRO_INITDATA_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_GRHYDRO_INITDATA_PRIVATE_FARGUMENTS DECLARE_GRHYDRO_INITDATA_PROTECTED_FARGUMENTS DECLARE_GRHYDRO_INITDATA_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_GRHYDRO_INITDATA_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_GRHYDRO_INITDATA_PRIVATE_CARGUMENTS DECLARE_GRHYDRO_INITDATA_PROTECTED_CARGUMENTS DECLARE_GRHYDRO_INITDATA_PUBLIC_CARGUMENTS

#define GRHYDRO_INITDATA_C2F_PROTO _CCTK_C2F_PROTO, GRHYDRO_INITDATA_PRIVATE_C2F_PROTO, GRHYDRO_INITDATA_PROTECTED_C2F_PROTO, GRHYDRO_INITDATA_PUBLIC_C2F_PROTO

#define PASS_GRHYDRO_INITDATA_C2F(GH) _PASS_CCTK_C2F(GH), PASS_GRHYDRO_INITDATA_PRIVATE_C2F(GH), PASS_GRHYDRO_INITDATA_PROTECTED_C2F(GH), PASS_GRHYDRO_INITDATA_PUBLIC_C2F(GH)

#define DECLARE_GRHYDRO_INITDATA_C2F _DECLARE_CCTK_C2F DECLARE_GRHYDRO_INITDATA_PRIVATE_C2F DECLARE_GRHYDRO_INITDATA_PROTECTED_C2F DECLARE_GRHYDRO_INITDATA_PUBLIC_C2F

#define INITIALISE_GRHYDRO_INITDATA_C2F _INITIALISE_CCTK_C2F INITIALISE_GRHYDRO_INITDATA_PRIVATE_C2F INITIALISE_GRHYDRO_INITDATA_PROTECTED_C2F INITIALISE_GRHYDRO_INITDATA_PUBLIC_C2F

#define GRHYDRO_INITDATA_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
