/*@@
   @header  SummationByParts_Prototypes.h
   @author  Automatically generated by CreateFunctionBindings.pl
   @desc
            Prototypes for overloaded functions used by this thorn
   @enddesc
  @@*/


#ifndef _SUMMATIONBYPARTS_PROTOTYPES_H_
#define _SUMMATIONBYPARTS_PROTOTYPES_H_  1

#ifdef CCODE
#ifdef __cplusplus
extern "C" {
#endif

void Diff2_coeff(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_INT nsize ,
 CCTK_INT* imin ,
 CCTK_INT* imax ,
 CCTK_REAL* q ,
 const CCTK_INT table_handle);
void DiffCoeff2(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_INT nsize ,
 CCTK_INT* imin ,
 CCTK_INT* imax ,
 CCTK_REAL* q ,
 const CCTK_INT table_handle);

void Diff2_gv(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir1 ,
 const CCTK_INT dir2 ,
 const CCTK_REAL* var ,
 CCTK_REAL* dvar ,
 const CCTK_INT table_handle);
void DiffGv2(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir1 ,
 const CCTK_INT dir2 ,
 const CCTK_REAL* var ,
 CCTK_REAL* dvar ,
 const CCTK_INT table_handle);

void Diff_coeff(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_INT nsize ,
 CCTK_INT* imin ,
 CCTK_INT* imax ,
 CCTK_REAL* q ,
 const CCTK_INT table_handle);
void DiffCoeff(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_INT nsize ,
 CCTK_INT* imin ,
 CCTK_INT* imax ,
 CCTK_REAL* q ,
 const CCTK_INT table_handle);

void Diff_gf(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 CCTK_STRING var_name, CCTK_STRING dvar_name);
void DiffGf(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 CCTK_STRING var_name, CCTK_STRING dvar_name);

void Diff_gv(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_REAL* var ,
 CCTK_REAL* dvar ,
 const CCTK_INT table_handle);
void DiffGv(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_REAL* var ,
 CCTK_REAL* dvar ,
 const CCTK_INT table_handle);

void Diff_up_coeff(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_INT nsize ,
 CCTK_INT* imin ,
 CCTK_INT* imax ,
 CCTK_REAL* q ,
 const CCTK_INT up ,
 const CCTK_INT table_handle);
void DiffUpCoeff(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_INT nsize ,
 CCTK_INT* imin ,
 CCTK_INT* imax ,
 CCTK_REAL* q ,
 const CCTK_INT up ,
 const CCTK_INT table_handle);

void Diff_up_gv(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_REAL* var ,
 CCTK_REAL* dvar ,
 const CCTK_REAL* up ,
 const CCTK_INT table_handle);
void DiffUpGv(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_REAL* var ,
 CCTK_REAL* dvar ,
 const CCTK_REAL* up ,
 const CCTK_INT table_handle);

void GetBoundWidth(const CCTK_POINTER_TO_CONST cctkGH ,
 CCTK_INT* bsize ,
 const CCTK_INT table_handle);
void Get_Bound_Width(const CCTK_POINTER_TO_CONST cctkGH ,
 CCTK_INT* bsize ,
 const CCTK_INT table_handle);

CCTK_INT GetBoundarySpecification(const CCTK_INT size ,
 CCTK_INT* nboundaryzones ,
 CCTK_INT* is_internal ,
 CCTK_INT* is_staggered ,
 CCTK_INT* shiftout);

CCTK_INT GetDomainSpecification(const CCTK_INT size ,
 CCTK_REAL* physical_min ,
 CCTK_REAL* physical_max ,
 CCTK_REAL* interior_min ,
 CCTK_REAL* interior_max ,
 CCTK_REAL* exterior_min ,
 CCTK_REAL* exterior_max ,
 CCTK_REAL* spacing);

void GetLshIndexRanges(const CCTK_POINTER_TO_CONST cctkGH ,
 CCTK_INT* imin ,
 CCTK_INT* imax);
void get_lsh_iranges(const CCTK_POINTER_TO_CONST cctkGH ,
 CCTK_INT* imin ,
 CCTK_INT* imax);

CCTK_REAL GetScalProdCoeff(void);
CCTK_REAL GetCoeff(void);

void GetScalProdDiag(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_INT nsize ,
 CCTK_REAL* sigmad);
void SBP_GetScalProdDiag(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT dir ,
 const CCTK_INT nsize ,
 CCTK_REAL* sigmad);

CCTK_INT MoLQueryEvolvedRHS(const CCTK_INT EvolvedIndex);

CCTK_INT MultiPatch_GetBbox(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT size ,
 CCTK_INT* bbox);

CCTK_INT MultiPatch_GetBoundarySpecification(const CCTK_INT map ,
 const CCTK_INT size ,
 CCTK_INT* nboundaryzones ,
 CCTK_INT* is_internal ,
 CCTK_INT* is_staggered ,
 CCTK_INT* shiftout);

CCTK_INT MultiPatch_GetMap(const CCTK_POINTER_TO_CONST cctkGH);

CCTK_INT MultiPatch_GetMaps(const CCTK_POINTER_TO_CONST cctkGH);

CCTK_INT SymmetryHandleOfName(CCTK_STRING sym_name);

CCTK_INT SymmetryTableHandleForGrid(const CCTK_POINTER_TO_CONST cctkGH);

#ifdef __cplusplus
}
#endif
#endif /* CCODE */

#ifdef FCODE
#ifdef F90CODE
#define DECLARE_SUMMATIONBYPARTS_FUNCTIONS _DECLARE_CCTK_FUNCTIONS \
  interface &&\
     subroutine Diff2_coeff (cctkGH, dir, nsize, imin, imax, q, table_handle) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT dir &&\
       CCTK_INT nsize &&\
       CCTK_INT imin(*) &&\
       CCTK_INT imax(*) &&\
       CCTK_REAL q(*) &&\
       CCTK_INT table_handle &&\
     end subroutine Diff2_coeff &&\
  end interface &&\
  interface &&\
     subroutine Diff2_gv (cctkGH, dir1, dir2, var, dvar, table_handle) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT dir1 &&\
       CCTK_INT dir2 &&\
       CCTK_REAL var(*) &&\
       CCTK_REAL dvar(*) &&\
       CCTK_INT table_handle &&\
     end subroutine Diff2_gv &&\
  end interface &&\
  interface &&\
     subroutine Diff_coeff (cctkGH, dir, nsize, imin, imax, q, table_handle) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT dir &&\
       CCTK_INT nsize &&\
       CCTK_INT imin(*) &&\
       CCTK_INT imax(*) &&\
       CCTK_REAL q(*) &&\
       CCTK_INT table_handle &&\
     end subroutine Diff_coeff &&\
  end interface &&\
  interface &&\
     subroutine Diff_gf (cctkGH, dir, var_name, dvar_name) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT dir &&\
       character(*) var_name &&\
       character(*) dvar_name &&\
     end subroutine Diff_gf &&\
  end interface &&\
  interface &&\
     subroutine Diff_gv (cctkGH, dir, var, dvar, table_handle) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT dir &&\
       CCTK_REAL var(*) &&\
       CCTK_REAL dvar(*) &&\
       CCTK_INT table_handle &&\
     end subroutine Diff_gv &&\
  end interface &&\
  interface &&\
     subroutine Diff_up_coeff (cctkGH, dir, nsize, imin, imax, q, up, table_handle) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT dir &&\
       CCTK_INT nsize &&\
       CCTK_INT imin(*) &&\
       CCTK_INT imax(*) &&\
       CCTK_REAL q(*) &&\
       CCTK_INT up &&\
       CCTK_INT table_handle &&\
     end subroutine Diff_up_coeff &&\
  end interface &&\
  interface &&\
     subroutine Diff_up_gv (cctkGH, dir, var, dvar, up, table_handle) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT dir &&\
       CCTK_REAL var(*) &&\
       CCTK_REAL dvar(*) &&\
       CCTK_REAL up(*) &&\
       CCTK_INT table_handle &&\
     end subroutine Diff_up_gv &&\
  end interface &&\
  interface &&\
     subroutine GetBoundWidth (cctkGH, bsize, table_handle) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT bsize(*) &&\
       CCTK_INT table_handle &&\
     end subroutine GetBoundWidth &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetBoundarySpecification (size, nboundaryzones, is_internal, is_staggered, shiftout) &&\
       implicit none &&\
       CCTK_INT size &&\
       CCTK_INT nboundaryzones(*) &&\
       CCTK_INT is_internal(*) &&\
       CCTK_INT is_staggered(*) &&\
       CCTK_INT shiftout(*) &&\
     end function GetBoundarySpecification &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetDomainSpecification (size, physical_min, physical_max, interior_min, interior_max, exterior_min, exterior_max, spacing) &&\
       implicit none &&\
       CCTK_INT size &&\
       CCTK_REAL physical_min(*) &&\
       CCTK_REAL physical_max(*) &&\
       CCTK_REAL interior_min(*) &&\
       CCTK_REAL interior_max(*) &&\
       CCTK_REAL exterior_min(*) &&\
       CCTK_REAL exterior_max(*) &&\
       CCTK_REAL spacing(*) &&\
     end function GetDomainSpecification &&\
  end interface &&\
  interface &&\
     subroutine GetLshIndexRanges (cctkGH, imin, imax) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT imin(*) &&\
       CCTK_INT imax(*) &&\
     end subroutine GetLshIndexRanges &&\
  end interface &&\
  interface &&\
     CCTK_REAL function GetScalProdCoeff () &&\
       implicit none &&\
     end function GetScalProdCoeff &&\
  end interface &&\
  interface &&\
     subroutine GetScalProdDiag (cctkGH, dir, nsize, sigmad) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT dir &&\
       CCTK_INT nsize &&\
       CCTK_REAL sigmad(*) &&\
     end subroutine GetScalProdDiag &&\
  end interface &&\
  interface &&\
     CCTK_INT function MoLQueryEvolvedRHS (EvolvedIndex) &&\
       implicit none &&\
       CCTK_INT EvolvedIndex &&\
     end function MoLQueryEvolvedRHS &&\
  end interface &&\
  interface &&\
     CCTK_INT function MultiPatch_GetBbox (cctkGH, size, bbox) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT size &&\
       CCTK_INT bbox(*) &&\
     end function MultiPatch_GetBbox &&\
  end interface &&\
  interface &&\
     CCTK_INT function MultiPatch_GetBoundarySpecification (map, size, nboundaryzones, is_internal, is_staggered, shiftout) &&\
       implicit none &&\
       CCTK_INT map &&\
       CCTK_INT size &&\
       CCTK_INT nboundaryzones(*) &&\
       CCTK_INT is_internal(*) &&\
       CCTK_INT is_staggered(*) &&\
       CCTK_INT shiftout(*) &&\
     end function MultiPatch_GetBoundarySpecification &&\
  end interface &&\
  interface &&\
     CCTK_INT function MultiPatch_GetMap (cctkGH) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
     end function MultiPatch_GetMap &&\
  end interface &&\
  interface &&\
     CCTK_INT function MultiPatch_GetMaps (cctkGH) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
     end function MultiPatch_GetMaps &&\
  end interface &&\
  interface &&\
     CCTK_INT function SymmetryHandleOfName (sym_name) &&\
       implicit none &&\
       character(*) sym_name &&\
     end function SymmetryHandleOfName &&\
  end interface &&\
  interface &&\
     CCTK_INT function SymmetryTableHandleForGrid (cctkGH) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
     end function SymmetryTableHandleForGrid &&\
  end interface &&\

#else /* ! F90CODE */

#define DECLARE_SUMMATIONBYPARTS_FUNCTIONS _DECLARE_CCTK_FUNCTIONS \
  external Diff2_coeff &&\
  external Diff2_gv &&\
  external Diff_coeff &&\
  external Diff_gf &&\
  external Diff_gv &&\
  external Diff_up_coeff &&\
  external Diff_up_gv &&\
  external GetBoundWidth &&\
  external GetBoundarySpecification &&\
  CCTK_INT GetBoundarySpecification &&\
  external GetDomainSpecification &&\
  CCTK_INT GetDomainSpecification &&\
  external GetLshIndexRanges &&\
  external GetScalProdCoeff &&\
  CCTK_REAL GetScalProdCoeff &&\
  external GetScalProdDiag &&\
  external MoLQueryEvolvedRHS &&\
  CCTK_INT MoLQueryEvolvedRHS &&\
  external MultiPatch_GetBbox &&\
  CCTK_INT MultiPatch_GetBbox &&\
  external MultiPatch_GetBoundarySpecification &&\
  CCTK_INT MultiPatch_GetBoundarySpecification &&\
  external MultiPatch_GetMap &&\
  CCTK_INT MultiPatch_GetMap &&\
  external MultiPatch_GetMaps &&\
  CCTK_INT MultiPatch_GetMaps &&\
  external SymmetryHandleOfName &&\
  CCTK_INT SymmetryHandleOfName &&\
  external SymmetryTableHandleForGrid &&\
  CCTK_INT SymmetryTableHandleForGrid &&\

#endif /* ! F90CODE */
#endif /* FCODE */

#endif

