/*@@
   @header  Periodic_Prototypes.h
   @author  Automatically generated by CreateFunctionBindings.pl
   @desc
            Prototypes for overloaded functions used by this thorn
   @enddesc
  @@*/


#ifndef _PERIODIC_PROTOTYPES_H_
#define _PERIODIC_PROTOTYPES_H_  1

#ifdef CCODE
#ifdef __cplusplus
extern "C" {
#endif

CCTK_INT Boundary_SelectedGVs(const CCTK_POINTER_TO_CONST GH ,
 const CCTK_INT array_size ,
 CCTK_INT* var_indicies ,
 CCTK_INT* faces ,
 CCTK_INT* boundary_widths ,
 CCTK_INT* table_handles ,
 CCTK_STRING bc_name);

CCTK_INT GetBoundarySpecification(const CCTK_INT size ,
 CCTK_INT* nboundaryzones ,
 CCTK_INT* is_internal ,
 CCTK_INT* is_staggered ,
 CCTK_INT* shiftout);

CCTK_INT Periodic_ApplyGI(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT size ,
 const CCTK_INT* stencil ,
 const CCTK_INT* do_periodic ,
 const CCTK_INT group_index);
CCTK_INT BndPeriodicGI(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT size ,
 const CCTK_INT* stencil ,
 const CCTK_INT* do_periodic ,
 const CCTK_INT group_index);

CCTK_INT Periodic_ApplyGN(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT size ,
 const CCTK_INT* stencil ,
 const CCTK_INT* do_periodic ,
 CCTK_STRING group_name);
CCTK_INT BndPeriodicGN(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT size ,
 const CCTK_INT* stencil ,
 const CCTK_INT* do_periodic ,
 CCTK_STRING group_name);

CCTK_INT Periodic_ApplyVI(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT size ,
 const CCTK_INT* stencil ,
 const CCTK_INT* do_periodic ,
 const CCTK_INT var_index);
CCTK_INT BndPeriodicVI(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT size ,
 const CCTK_INT* stencil ,
 const CCTK_INT* do_periodic ,
 const CCTK_INT var_index);

CCTK_INT Periodic_ApplyVN(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT size ,
 const CCTK_INT* stencil ,
 const CCTK_INT* do_periodic ,
 CCTK_STRING var_name);
CCTK_INT BndPeriodicVN(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT size ,
 const CCTK_INT* stencil ,
 const CCTK_INT* do_periodic ,
 CCTK_STRING var_name);

CCTK_INT SymmetryRegister(CCTK_STRING sym_name);

CCTK_INT SymmetryRegisterGrid(const CCTK_POINTER cctkGH ,
 const CCTK_INT sym_handle ,
 const CCTK_INT* which_faces ,
 const CCTK_INT* symmetry_zone_width);

#ifdef __cplusplus
}
#endif
#endif /* CCODE */

#ifdef FCODE
#ifdef F90CODE
#define DECLARE_PERIODIC_FUNCTIONS _DECLARE_CCTK_FUNCTIONS \
  interface &&\
     CCTK_INT function Boundary_SelectedGVs (GH, array_size, var_indicies, faces, boundary_widths, table_handles, bc_name) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST GH &&\
       CCTK_INT array_size &&\
       CCTK_INT var_indicies(*) &&\
       CCTK_INT faces(*) &&\
       CCTK_INT boundary_widths(*) &&\
       CCTK_INT table_handles(*) &&\
       character(*) bc_name &&\
     end function Boundary_SelectedGVs &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetBoundarySpecification (size, nboundaryzones, is_internal, is_staggered, shiftout) &&\
       implicit none &&\
       CCTK_INT size &&\
       CCTK_INT nboundaryzones(*) &&\
       CCTK_INT is_internal(*) &&\
       CCTK_INT is_staggered(*) &&\
       CCTK_INT shiftout(*) &&\
     end function GetBoundarySpecification &&\
  end interface &&\
  interface &&\
     CCTK_INT function Periodic_ApplyGI (cctkGH, size, stencil, do_periodic, group_index) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT size &&\
       CCTK_INT stencil(*) &&\
       CCTK_INT do_periodic(*) &&\
       CCTK_INT group_index &&\
     end function Periodic_ApplyGI &&\
  end interface &&\
  interface &&\
     CCTK_INT function Periodic_ApplyGN (cctkGH, size, stencil, do_periodic, group_name) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT size &&\
       CCTK_INT stencil(*) &&\
       CCTK_INT do_periodic(*) &&\
       character(*) group_name &&\
     end function Periodic_ApplyGN &&\
  end interface &&\
  interface &&\
     CCTK_INT function Periodic_ApplyVI (cctkGH, size, stencil, do_periodic, var_index) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT size &&\
       CCTK_INT stencil(*) &&\
       CCTK_INT do_periodic(*) &&\
       CCTK_INT var_index &&\
     end function Periodic_ApplyVI &&\
  end interface &&\
  interface &&\
     CCTK_INT function Periodic_ApplyVN (cctkGH, size, stencil, do_periodic, var_name) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT size &&\
       CCTK_INT stencil(*) &&\
       CCTK_INT do_periodic(*) &&\
       character(*) var_name &&\
     end function Periodic_ApplyVN &&\
  end interface &&\
  interface &&\
     CCTK_INT function SymmetryRegister (sym_name) &&\
       implicit none &&\
       character(*) sym_name &&\
     end function SymmetryRegister &&\
  end interface &&\
  interface &&\
     CCTK_INT function SymmetryRegisterGrid (cctkGH, sym_handle, which_faces, symmetry_zone_width) &&\
       implicit none &&\
       CCTK_POINTER cctkGH &&\
       CCTK_INT sym_handle &&\
       CCTK_INT which_faces(*) &&\
       CCTK_INT symmetry_zone_width(*) &&\
     end function SymmetryRegisterGrid &&\
  end interface &&\

#else /* ! F90CODE */

#define DECLARE_PERIODIC_FUNCTIONS _DECLARE_CCTK_FUNCTIONS \
  external Boundary_SelectedGVs &&\
  CCTK_INT Boundary_SelectedGVs &&\
  external GetBoundarySpecification &&\
  CCTK_INT GetBoundarySpecification &&\
  external Periodic_ApplyGI &&\
  CCTK_INT Periodic_ApplyGI &&\
  external Periodic_ApplyGN &&\
  CCTK_INT Periodic_ApplyGN &&\
  external Periodic_ApplyVI &&\
  CCTK_INT Periodic_ApplyVI &&\
  external Periodic_ApplyVN &&\
  CCTK_INT Periodic_ApplyVN &&\
  external SymmetryRegister &&\
  CCTK_INT SymmetryRegister &&\
  external SymmetryRegisterGrid &&\
  CCTK_INT SymmetryRegisterGrid &&\

#endif /* ! F90CODE */
#endif /* FCODE */

#endif

