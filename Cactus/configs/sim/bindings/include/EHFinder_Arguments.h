/*@@
   @header  EHFinder_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn EHFinder
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_EHFINDER_PRIVATE_FARGUMENTS \
INTEGER X0center_arrays&&\
INTEGER X0dxg&&\
INTEGER X0dxg2&&\
INTEGER X0dyg&&\
INTEGER X0dyg2&&\
INTEGER X0dzg&&\
INTEGER X0dzg2&&\
INTEGER X0eh_area&&\
INTEGER X0eh_area2&&\
INTEGER X0eh_centroid2_x&&\
INTEGER X0eh_centroid2_y&&\
INTEGER X0eh_centroid2_z&&\
INTEGER X0eh_centroid_x&&\
INTEGER X0eh_centroid_y&&\
INTEGER X0eh_centroid_z&&\
INTEGER X0eh_circ_eq&&\
INTEGER X0eh_circ_eq2&&\
INTEGER X0eh_circ_pol&&\
INTEGER X0eh_circ_pol2&&\
INTEGER X0generator_arrays&&\
INTEGER X0generator_arrays2&&\
INTEGER X0integrate_tmp_array&&\
INTEGER X0interp_metric_arrays&&\
INTEGER X0surface_arrays&&\
INTEGER X0surface_int_array&&\
INTEGER X0surface_tmp_arrays&&\
INTEGER X0xg&&\
INTEGER X0xg2&&\
INTEGER X0yg&&\
INTEGER X0yg2&&\
INTEGER X0zg&&\
INTEGER X0zg2&&\
INTEGER X1dxg2&&\
INTEGER X1dyg2&&\
INTEGER X1dzg2&&\
INTEGER X1generator_arrays2&&\
INTEGER X1integrate_tmp_array&&\
INTEGER X1interp_metric_arrays&&\
INTEGER X1surface_arrays&&\
INTEGER X1surface_int_array&&\
INTEGER X1surface_tmp_arrays&&\
INTEGER X1xg2&&\
INTEGER X1yg2&&\
INTEGER X1zg2&&\
INTEGER dfsq_length&&\
INTEGER dfx_length&&\
INTEGER dfy_length&&\
INTEGER dfz_length&&\
INTEGER dxg2_length&&\
INTEGER dxg_length&&\
INTEGER dyg2_length&&\
INTEGER dyg_length&&\
INTEGER dzg2_length&&\
INTEGER dzg_length&&\
INTEGER eh_area2_length&&\
INTEGER eh_area_length&&\
INTEGER eh_centroid2_x_length&&\
INTEGER eh_centroid2_y_length&&\
INTEGER eh_centroid2_z_length&&\
INTEGER eh_centroid_x_length&&\
INTEGER eh_centroid_y_length&&\
INTEGER eh_centroid_z_length&&\
INTEGER eh_circ_eq2_length&&\
INTEGER eh_circ_eq_length&&\
INTEGER eh_circ_pol2_length&&\
INTEGER eh_circ_pol_length&&\
INTEGER eh_mask_bak_length&&\
INTEGER eh_mask_length&&\
INTEGER f_length&&\
INTEGER fbak_length&&\
INTEGER ftmp_length&&\
INTEGER sf_length&&\
INTEGER sftmp_length&&\
INTEGER tm_mask_length&&\
INTEGER xg2_length&&\
INTEGER xg_length&&\
INTEGER yg2_length&&\
INTEGER yg_length&&\
INTEGER zg2_length&&\
INTEGER zg_length&&\
CCTK_DECLARE(CCTK_REAL,alpg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,alpg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,betaxg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,betaxg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,betayg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,betayg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,betazg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,betazg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,center,(X0center_arrays))&&\
CCTK_DECLARE(CCTK_REAL,cosphi,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,costheta,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,cphi,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,ctheta,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,da,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,dfdx_interp,(X0surface_tmp_arrays,X1surface_tmp_arrays))&&\
CCTK_DECLARE(CCTK_REAL,dfdy_interp,(X0surface_tmp_arrays,X1surface_tmp_arrays))&&\
CCTK_DECLARE(CCTK_REAL,dfdz_interp,(X0surface_tmp_arrays,X1surface_tmp_arrays))&&\
CCTK_DECLARE(CCTK_REAL,dfsq,(cctk_ash1,cctk_ash2,cctk_ash3,dfsq_length))&&\
CCTK_DECLARE(CCTK_REAL,dfx,(cctk_ash1,cctk_ash2,cctk_ash3,dfx_length))&&\
CCTK_DECLARE(CCTK_REAL,dfxg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,dfxg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,dfy,(cctk_ash1,cctk_ash2,cctk_ash3,dfy_length))&&\
CCTK_DECLARE(CCTK_REAL,dfyg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,dfyg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,dfz,(cctk_ash1,cctk_ash2,cctk_ash3,dfz_length))&&\
CCTK_DECLARE(CCTK_REAL,dfzg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,dfzg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,dlphi,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,dltheta,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,drdphi,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,drdtheta,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,drsurf,(X0surface_tmp_arrays,X1surface_tmp_arrays))&&\
CCTK_DECLARE(CCTK_REAL,dxg,(X0dxg,dxg_length))&&\
CCTK_DECLARE(CCTK_REAL,dxg2,(X0dxg2,X1dxg2,dxg2_length))&&\
CCTK_DECLARE(CCTK_REAL,dyg,(X0dyg,dyg_length))&&\
CCTK_DECLARE(CCTK_REAL,dyg2,(X0dyg2,X1dyg2,dyg2_length))&&\
CCTK_DECLARE(CCTK_REAL,dzg,(X0dzg,dzg_length))&&\
CCTK_DECLARE(CCTK_REAL,dzg2,(X0dzg2,X1dzg2,dzg2_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_area,(X0eh_area,eh_area_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_area2,(X0eh_area2,eh_area2_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_centroid2_x,(X0eh_centroid2_x,eh_centroid2_x_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_centroid2_y,(X0eh_centroid2_y,eh_centroid2_y_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_centroid2_z,(X0eh_centroid2_z,eh_centroid2_z_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_centroid_x,(X0eh_centroid_x,eh_centroid_x_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_centroid_y,(X0eh_centroid_y,eh_centroid_y_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_centroid_z,(X0eh_centroid_z,eh_centroid_z_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_circ_eq,(X0eh_circ_eq,eh_circ_eq_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_circ_eq2,(X0eh_circ_eq2,eh_circ_eq2_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_circ_pol,(X0eh_circ_pol,eh_circ_pol_length))&&\
CCTK_DECLARE(CCTK_REAL,eh_circ_pol2,(X0eh_circ_pol2,eh_circ_pol2_length))&&\
CCTK_DECLARE(CCTK_INT,eh_mask,(cctk_ash1,cctk_ash2,cctk_ash3,eh_mask_length))&&\
CCTK_DECLARE(CCTK_INT,eh_mask_bak,(cctk_ash1,cctk_ash2,cctk_ash3,eh_mask_bak_length))&&\
CCTK_DECLARE(CCTK_REAL,f,(cctk_ash1,cctk_ash2,cctk_ash3,f_length))&&\
CCTK_DECLARE(CCTK_REAL,f_p,(cctk_ash1,cctk_ash2,cctk_ash3,f_length))&&\
CCTK_DECLARE(CCTK_REAL,f_p_p,(cctk_ash1,cctk_ash2,cctk_ash3,f_length))&&\
CCTK_DECLARE(CCTK_REAL,f_interp,(X0surface_tmp_arrays,X1surface_tmp_arrays))&&\
CCTK_DECLARE(CCTK_REAL,fbak,(cctk_ash1,cctk_ash2,cctk_ash3,fbak_length))&&\
CCTK_DECLARE(CCTK_INT,find_surface_status,)&&\
CCTK_DECLARE(CCTK_REAL,ftmp,(cctk_ash1,cctk_ash2,cctk_ash3,ftmp_length))&&\
CCTK_DECLARE(CCTK_REAL,g3xx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,g3xy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,g3xz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,g3yy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,g3yz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,g3zz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gpp,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gtp,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gtt,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gxxg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gxxg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,gxxi,(X0interp_metric_arrays,X1interp_metric_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gxyg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gxyg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,gxyi,(X0interp_metric_arrays,X1interp_metric_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gxzg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gxzg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,gxzi,(X0interp_metric_arrays,X1interp_metric_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gyyg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gyyg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,gyyi,(X0interp_metric_arrays,X1interp_metric_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gyzg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gyzg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,gyzi,(X0interp_metric_arrays,X1interp_metric_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gzzg,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,gzzg2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,gzzi,(X0interp_metric_arrays,X1interp_metric_arrays))&&\
CCTK_DECLARE(CCTK_REAL,int_tmp,(X0integrate_tmp_array,X1integrate_tmp_array))&&\
CCTK_DECLARE(CCTK_INT,integrate_counter,)&&\
CCTK_DECLARE(CCTK_REAL,interp_x,(X0surface_tmp_arrays,X1surface_tmp_arrays))&&\
CCTK_DECLARE(CCTK_REAL,interp_y,(X0surface_tmp_arrays,X1surface_tmp_arrays))&&\
CCTK_DECLARE(CCTK_REAL,interp_z,(X0surface_tmp_arrays,X1surface_tmp_arrays))&&\
CCTK_DECLARE(CCTK_INT,levelset_counter,)&&\
CCTK_DECLARE(CCTK_INT,more_levelsets,)&&\
CCTK_DECLARE(CCTK_INT,more_points,)&&\
CCTK_DECLARE(CCTK_INT,more_surfaces,)&&\
CCTK_DECLARE(CCTK_INT,n_since_last_reduction,(X0surface_int_array,X1surface_int_array))&&\
CCTK_DECLARE(CCTK_INT,niter_reinit,)&&\
CCTK_DECLARE(CCTK_REAL,phi_sym_factor,)&&\
CCTK_DECLARE(CCTK_REAL,phiweights,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_INT,points_counter,)&&\
CCTK_DECLARE(CCTK_REAL,psig,(X0generator_arrays))&&\
CCTK_DECLARE(CCTK_REAL,psig2,(X0generator_arrays2,X1generator_arrays2))&&\
CCTK_DECLARE(CCTK_REAL,psii,(X0interp_metric_arrays,X1interp_metric_arrays))&&\
CCTK_DECLARE(CCTK_INT,re_init_control,)&&\
CCTK_DECLARE(CCTK_REAL,rsurf,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,sc,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,sf,(cctk_ash1,cctk_ash2,cctk_ash3,sf_length))&&\
CCTK_DECLARE(CCTK_REAL,sftmp,(cctk_ash1,cctk_ash2,cctk_ash3,sftmp_length))&&\
CCTK_DECLARE(CCTK_REAL,sinphi,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,sintheta,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_INT,surface_counter,)&&\
CCTK_DECLARE(CCTK_REAL,sym_factor,)&&\
CCTK_DECLARE(CCTK_REAL,theta_sym_factor,)&&\
CCTK_DECLARE(CCTK_REAL,thetaweights,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_INT,tm_mask,(cctk_ash1,cctk_ash2,cctk_ash3,tm_mask_length))&&\
CCTK_DECLARE(CCTK_REAL,weights,(X0surface_arrays,X1surface_arrays))&&\
CCTK_DECLARE(CCTK_REAL,xg,(X0xg,xg_length))&&\
CCTK_DECLARE(CCTK_REAL,xg_p,(X0xg,xg_length))&&\
CCTK_DECLARE(CCTK_REAL,xg_p_p,(X0xg,xg_length))&&\
CCTK_DECLARE(CCTK_REAL,xg2,(X0xg2,X1xg2,xg2_length))&&\
CCTK_DECLARE(CCTK_REAL,xg2_p,(X0xg2,X1xg2,xg2_length))&&\
CCTK_DECLARE(CCTK_REAL,xg2_p_p,(X0xg2,X1xg2,xg2_length))&&\
CCTK_DECLARE(CCTK_REAL,xgf,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,xgf2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,yg,(X0yg,yg_length))&&\
CCTK_DECLARE(CCTK_REAL,yg_p,(X0yg,yg_length))&&\
CCTK_DECLARE(CCTK_REAL,yg_p_p,(X0yg,yg_length))&&\
CCTK_DECLARE(CCTK_REAL,yg2,(X0yg2,X1yg2,yg2_length))&&\
CCTK_DECLARE(CCTK_REAL,yg2_p,(X0yg2,X1yg2,yg2_length))&&\
CCTK_DECLARE(CCTK_REAL,yg2_p_p,(X0yg2,X1yg2,yg2_length))&&\
CCTK_DECLARE(CCTK_REAL,ygf,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,ygf2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,zg,(X0zg,zg_length))&&\
CCTK_DECLARE(CCTK_REAL,zg_p,(X0zg,zg_length))&&\
CCTK_DECLARE(CCTK_REAL,zg_p_p,(X0zg,zg_length))&&\
CCTK_DECLARE(CCTK_REAL,zg2,(X0zg2,X1zg2,zg2_length))&&\
CCTK_DECLARE(CCTK_REAL,zg2_p,(X0zg2,X1zg2,zg2_length))&&\
CCTK_DECLARE(CCTK_REAL,zg2_p_p,(X0zg2,X1zg2,zg2_length))&&\
CCTK_DECLARE(CCTK_REAL,zgf,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,zgf2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define EHFINDER_PRIVATE_FARGUMENTS \
X0center_arrays,X0dxg,X0dxg2,X0dyg,X0dyg2,X0dzg,X0dzg2,X0eh_area,X0eh_area2,X0eh_centroid2_x,X0eh_centroid2_y,X0eh_centroid2_z,X0eh_centroid_x,X0eh_centroid_y,X0eh_centroid_z,X0eh_circ_eq,X0eh_circ_eq2,X0eh_circ_pol,X0eh_circ_pol2,X0generator_arrays,X0generator_arrays2,X0integrate_tmp_array,X0interp_metric_arrays,X0surface_arrays,X0surface_int_array,X0surface_tmp_arrays,X0xg,X0xg2,X0yg,X0yg2,X0zg,X0zg2,X1dxg2,X1dyg2,X1dzg2,X1generator_arrays2,X1integrate_tmp_array,X1interp_metric_arrays,X1surface_arrays,X1surface_int_array,X1surface_tmp_arrays,X1xg2,X1yg2,X1zg2,dfsq_length,dfx_length,dfy_length,dfz_length,dxg2_length,dxg_length,dyg2_length,dyg_length,dzg2_length,dzg_length,eh_area2_length,eh_area_length,eh_centroid2_x_length,eh_centroid2_y_length,eh_centroid2_z_length,eh_centroid_x_length,eh_centroid_y_length,eh_centroid_z_length,eh_circ_eq2_length,eh_circ_eq_length,eh_circ_pol2_length,eh_circ_pol_length,eh_mask_bak_length,eh_mask_length,f_length,fbak_length,ftmp_length,sf_length,sftmp_length,tm_mask_length,xg2_length,xg_length,yg2_length,yg_length,zg2_length,zg_length,alpg,alpg2,betaxg,betaxg2,betayg,betayg2,betazg,betazg2,center,cosphi,costheta,cphi,ctheta,da,dfdx_interp,dfdy_interp,dfdz_interp,dfsq,dfx,dfxg,dfxg2,dfy,dfyg,dfyg2,dfz,dfzg,dfzg2,dlphi,dltheta,drdphi,drdtheta,drsurf,dxg,dxg2,dyg,dyg2,dzg,dzg2,eh_area,eh_area2,eh_centroid2_x,eh_centroid2_y,eh_centroid2_z,eh_centroid_x,eh_centroid_y,eh_centroid_z,eh_circ_eq,eh_circ_eq2,eh_circ_pol,eh_circ_pol2,eh_mask,eh_mask_bak,f,f_p,f_p_p,f_interp,fbak,find_surface_status,ftmp,g3xx,g3xy,g3xz,g3yy,g3yz,g3zz,gpp,gtp,gtt,gxxg,gxxg2,gxxi,gxyg,gxyg2,gxyi,gxzg,gxzg2,gxzi,gyyg,gyyg2,gyyi,gyzg,gyzg2,gyzi,gzzg,gzzg2,gzzi,int_tmp,integrate_counter,interp_x,interp_y,interp_z,levelset_counter,more_levelsets,more_points,more_surfaces,n_since_last_reduction,niter_reinit,phi_sym_factor,phiweights,points_counter,psig,psig2,psii,re_init_control,rsurf,sc,sf,sftmp,sinphi,sintheta,surface_counter,sym_factor,theta_sym_factor,thetaweights,tm_mask,weights,xg,xg_p,xg_p_p,xg2,xg2_p,xg2_p_p,xgf,xgf2,yg,yg_p,yg_p_p,yg2,yg2_p,yg2_p_p,ygf,ygf2,zg,zg_p,zg_p_p,zg2,zg2_p,zg2_p_p,zgf,zgf2

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_EHFINDER_PRIVATE_CARGUMENTS \
static int cctki_vi_alpg = -100; \
if (cctki_vi_alpg == -100) cctki_vi_alpg = CCTK_VarIndex("EHFinder::alpg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alpg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_alpg)); \
static int cctki_vi_alpg2 = -100; \
if (cctki_vi_alpg2 == -100) cctki_vi_alpg2 = CCTK_VarIndex("EHFinder::alpg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alpg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_alpg2)); \
static int cctki_vi_betaxg = -100; \
if (cctki_vi_betaxg == -100) cctki_vi_betaxg = CCTK_VarIndex("EHFinder::betaxg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaxg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betaxg)); \
static int cctki_vi_betaxg2 = -100; \
if (cctki_vi_betaxg2 == -100) cctki_vi_betaxg2 = CCTK_VarIndex("EHFinder::betaxg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaxg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betaxg2)); \
static int cctki_vi_betayg = -100; \
if (cctki_vi_betayg == -100) cctki_vi_betayg = CCTK_VarIndex("EHFinder::betayg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betayg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betayg)); \
static int cctki_vi_betayg2 = -100; \
if (cctki_vi_betayg2 == -100) cctki_vi_betayg2 = CCTK_VarIndex("EHFinder::betayg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betayg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betayg2)); \
static int cctki_vi_betazg = -100; \
if (cctki_vi_betazg == -100) cctki_vi_betazg = CCTK_VarIndex("EHFinder::betazg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betazg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betazg)); \
static int cctki_vi_betazg2 = -100; \
if (cctki_vi_betazg2 == -100) cctki_vi_betazg2 = CCTK_VarIndex("EHFinder::betazg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betazg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betazg2)); \
static int cctki_vi_center = -100; \
if (cctki_vi_center == -100) cctki_vi_center = CCTK_VarIndex("EHFinder::center"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, center, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_center)); \
static int cctki_vi_cosphi = -100; \
if (cctki_vi_cosphi == -100) cctki_vi_cosphi = CCTK_VarIndex("EHFinder::cosphi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cosphi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cosphi)); \
static int cctki_vi_costheta = -100; \
if (cctki_vi_costheta == -100) cctki_vi_costheta = CCTK_VarIndex("EHFinder::costheta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, costheta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_costheta)); \
static int cctki_vi_cphi = -100; \
if (cctki_vi_cphi == -100) cctki_vi_cphi = CCTK_VarIndex("EHFinder::cphi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, cphi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cphi)); \
static int cctki_vi_ctheta = -100; \
if (cctki_vi_ctheta == -100) cctki_vi_ctheta = CCTK_VarIndex("EHFinder::ctheta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ctheta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ctheta)); \
static int cctki_vi_da = -100; \
if (cctki_vi_da == -100) cctki_vi_da = CCTK_VarIndex("EHFinder::da"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, da, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_da)); \
static int cctki_vi_dfdx_interp = -100; \
if (cctki_vi_dfdx_interp == -100) cctki_vi_dfdx_interp = CCTK_VarIndex("EHFinder::dfdx_interp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfdx_interp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfdx_interp)); \
static int cctki_vi_dfdy_interp = -100; \
if (cctki_vi_dfdy_interp == -100) cctki_vi_dfdy_interp = CCTK_VarIndex("EHFinder::dfdy_interp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfdy_interp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfdy_interp)); \
static int cctki_vi_dfdz_interp = -100; \
if (cctki_vi_dfdz_interp == -100) cctki_vi_dfdz_interp = CCTK_VarIndex("EHFinder::dfdz_interp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfdz_interp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfdz_interp)); \
static int cctki_vi_dfsq = -100; \
if (cctki_vi_dfsq == -100) cctki_vi_dfsq = CCTK_VarIndex("EHFinder::dfsq[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfsq, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfsq)); \
static int cctki_vi_dfx = -100; \
if (cctki_vi_dfx == -100) cctki_vi_dfx = CCTK_VarIndex("EHFinder::dfx[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfx)); \
static int cctki_vi_dfxg = -100; \
if (cctki_vi_dfxg == -100) cctki_vi_dfxg = CCTK_VarIndex("EHFinder::dfxg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfxg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfxg)); \
static int cctki_vi_dfxg2 = -100; \
if (cctki_vi_dfxg2 == -100) cctki_vi_dfxg2 = CCTK_VarIndex("EHFinder::dfxg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfxg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfxg2)); \
static int cctki_vi_dfy = -100; \
if (cctki_vi_dfy == -100) cctki_vi_dfy = CCTK_VarIndex("EHFinder::dfy[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfy)); \
static int cctki_vi_dfyg = -100; \
if (cctki_vi_dfyg == -100) cctki_vi_dfyg = CCTK_VarIndex("EHFinder::dfyg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfyg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfyg)); \
static int cctki_vi_dfyg2 = -100; \
if (cctki_vi_dfyg2 == -100) cctki_vi_dfyg2 = CCTK_VarIndex("EHFinder::dfyg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfyg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfyg2)); \
static int cctki_vi_dfz = -100; \
if (cctki_vi_dfz == -100) cctki_vi_dfz = CCTK_VarIndex("EHFinder::dfz[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfz)); \
static int cctki_vi_dfzg = -100; \
if (cctki_vi_dfzg == -100) cctki_vi_dfzg = CCTK_VarIndex("EHFinder::dfzg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfzg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfzg)); \
static int cctki_vi_dfzg2 = -100; \
if (cctki_vi_dfzg2 == -100) cctki_vi_dfzg2 = CCTK_VarIndex("EHFinder::dfzg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dfzg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dfzg2)); \
static int cctki_vi_dlphi = -100; \
if (cctki_vi_dlphi == -100) cctki_vi_dlphi = CCTK_VarIndex("EHFinder::dlphi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dlphi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dlphi)); \
static int cctki_vi_dltheta = -100; \
if (cctki_vi_dltheta == -100) cctki_vi_dltheta = CCTK_VarIndex("EHFinder::dltheta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dltheta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dltheta)); \
static int cctki_vi_drdphi = -100; \
if (cctki_vi_drdphi == -100) cctki_vi_drdphi = CCTK_VarIndex("EHFinder::drdphi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, drdphi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_drdphi)); \
static int cctki_vi_drdtheta = -100; \
if (cctki_vi_drdtheta == -100) cctki_vi_drdtheta = CCTK_VarIndex("EHFinder::drdtheta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, drdtheta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_drdtheta)); \
static int cctki_vi_drsurf = -100; \
if (cctki_vi_drsurf == -100) cctki_vi_drsurf = CCTK_VarIndex("EHFinder::drsurf"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, drsurf, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_drsurf)); \
static int cctki_vi_dxg = -100; \
if (cctki_vi_dxg == -100) cctki_vi_dxg = CCTK_VarIndex("EHFinder::dxg[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dxg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxg)); \
static int cctki_vi_dxg2 = -100; \
if (cctki_vi_dxg2 == -100) cctki_vi_dxg2 = CCTK_VarIndex("EHFinder::dxg2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dxg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxg2)); \
static int cctki_vi_dyg = -100; \
if (cctki_vi_dyg == -100) cctki_vi_dyg = CCTK_VarIndex("EHFinder::dyg[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dyg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dyg)); \
static int cctki_vi_dyg2 = -100; \
if (cctki_vi_dyg2 == -100) cctki_vi_dyg2 = CCTK_VarIndex("EHFinder::dyg2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dyg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dyg2)); \
static int cctki_vi_dzg = -100; \
if (cctki_vi_dzg == -100) cctki_vi_dzg = CCTK_VarIndex("EHFinder::dzg[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dzg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dzg)); \
static int cctki_vi_dzg2 = -100; \
if (cctki_vi_dzg2 == -100) cctki_vi_dzg2 = CCTK_VarIndex("EHFinder::dzg2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dzg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dzg2)); \
static int cctki_vi_eh_area = -100; \
if (cctki_vi_eh_area == -100) cctki_vi_eh_area = CCTK_VarIndex("EHFinder::eh_area[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_area, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_area)); \
static int cctki_vi_eh_area2 = -100; \
if (cctki_vi_eh_area2 == -100) cctki_vi_eh_area2 = CCTK_VarIndex("EHFinder::eh_area2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_area2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_area2)); \
static int cctki_vi_eh_centroid2_x = -100; \
if (cctki_vi_eh_centroid2_x == -100) cctki_vi_eh_centroid2_x = CCTK_VarIndex("EHFinder::eh_centroid2_x[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_centroid2_x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_centroid2_x)); \
static int cctki_vi_eh_centroid2_y = -100; \
if (cctki_vi_eh_centroid2_y == -100) cctki_vi_eh_centroid2_y = CCTK_VarIndex("EHFinder::eh_centroid2_y[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_centroid2_y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_centroid2_y)); \
static int cctki_vi_eh_centroid2_z = -100; \
if (cctki_vi_eh_centroid2_z == -100) cctki_vi_eh_centroid2_z = CCTK_VarIndex("EHFinder::eh_centroid2_z[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_centroid2_z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_centroid2_z)); \
static int cctki_vi_eh_centroid_x = -100; \
if (cctki_vi_eh_centroid_x == -100) cctki_vi_eh_centroid_x = CCTK_VarIndex("EHFinder::eh_centroid_x[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_centroid_x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_centroid_x)); \
static int cctki_vi_eh_centroid_y = -100; \
if (cctki_vi_eh_centroid_y == -100) cctki_vi_eh_centroid_y = CCTK_VarIndex("EHFinder::eh_centroid_y[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_centroid_y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_centroid_y)); \
static int cctki_vi_eh_centroid_z = -100; \
if (cctki_vi_eh_centroid_z == -100) cctki_vi_eh_centroid_z = CCTK_VarIndex("EHFinder::eh_centroid_z[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_centroid_z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_centroid_z)); \
static int cctki_vi_eh_circ_eq = -100; \
if (cctki_vi_eh_circ_eq == -100) cctki_vi_eh_circ_eq = CCTK_VarIndex("EHFinder::eh_circ_eq[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_circ_eq, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_circ_eq)); \
static int cctki_vi_eh_circ_eq2 = -100; \
if (cctki_vi_eh_circ_eq2 == -100) cctki_vi_eh_circ_eq2 = CCTK_VarIndex("EHFinder::eh_circ_eq2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_circ_eq2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_circ_eq2)); \
static int cctki_vi_eh_circ_pol = -100; \
if (cctki_vi_eh_circ_pol == -100) cctki_vi_eh_circ_pol = CCTK_VarIndex("EHFinder::eh_circ_pol[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_circ_pol, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_circ_pol)); \
static int cctki_vi_eh_circ_pol2 = -100; \
if (cctki_vi_eh_circ_pol2 == -100) cctki_vi_eh_circ_pol2 = CCTK_VarIndex("EHFinder::eh_circ_pol2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, eh_circ_pol2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_circ_pol2)); \
static int cctki_vi_eh_mask = -100; \
if (cctki_vi_eh_mask == -100) cctki_vi_eh_mask = CCTK_VarIndex("EHFinder::eh_mask[0]"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, eh_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_mask)); \
static int cctki_vi_eh_mask_bak = -100; \
if (cctki_vi_eh_mask_bak == -100) cctki_vi_eh_mask_bak = CCTK_VarIndex("EHFinder::eh_mask_bak[0]"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, eh_mask_bak, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eh_mask_bak)); \
static int cctki_vi_f = -100; \
if (cctki_vi_f == -100) cctki_vi_f = CCTK_VarIndex("EHFinder::f[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, f, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_f)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, f_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_f)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, f_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_f)); \
static int cctki_vi_f_interp = -100; \
if (cctki_vi_f_interp == -100) cctki_vi_f_interp = CCTK_VarIndex("EHFinder::f_interp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, f_interp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_f_interp)); \
static int cctki_vi_fbak = -100; \
if (cctki_vi_fbak == -100) cctki_vi_fbak = CCTK_VarIndex("EHFinder::fbak[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, fbak, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_fbak)); \
static int cctki_vi_find_surface_status = -100; \
if (cctki_vi_find_surface_status == -100) cctki_vi_find_surface_status = CCTK_VarIndex("EHFinder::find_surface_status"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, find_surface_status, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_find_surface_status)); \
static int cctki_vi_ftmp = -100; \
if (cctki_vi_ftmp == -100) cctki_vi_ftmp = CCTK_VarIndex("EHFinder::ftmp[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ftmp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ftmp)); \
static int cctki_vi_g3xx = -100; \
if (cctki_vi_g3xx == -100) cctki_vi_g3xx = CCTK_VarIndex("EHFinder::g3xx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, g3xx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_g3xx)); \
static int cctki_vi_g3xy = -100; \
if (cctki_vi_g3xy == -100) cctki_vi_g3xy = CCTK_VarIndex("EHFinder::g3xy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, g3xy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_g3xy)); \
static int cctki_vi_g3xz = -100; \
if (cctki_vi_g3xz == -100) cctki_vi_g3xz = CCTK_VarIndex("EHFinder::g3xz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, g3xz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_g3xz)); \
static int cctki_vi_g3yy = -100; \
if (cctki_vi_g3yy == -100) cctki_vi_g3yy = CCTK_VarIndex("EHFinder::g3yy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, g3yy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_g3yy)); \
static int cctki_vi_g3yz = -100; \
if (cctki_vi_g3yz == -100) cctki_vi_g3yz = CCTK_VarIndex("EHFinder::g3yz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, g3yz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_g3yz)); \
static int cctki_vi_g3zz = -100; \
if (cctki_vi_g3zz == -100) cctki_vi_g3zz = CCTK_VarIndex("EHFinder::g3zz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, g3zz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_g3zz)); \
static int cctki_vi_gpp = -100; \
if (cctki_vi_gpp == -100) cctki_vi_gpp = CCTK_VarIndex("EHFinder::gpp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gpp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gpp)); \
static int cctki_vi_gtp = -100; \
if (cctki_vi_gtp == -100) cctki_vi_gtp = CCTK_VarIndex("EHFinder::gtp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gtp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gtp)); \
static int cctki_vi_gtt = -100; \
if (cctki_vi_gtt == -100) cctki_vi_gtt = CCTK_VarIndex("EHFinder::gtt"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gtt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gtt)); \
static int cctki_vi_gxxg = -100; \
if (cctki_vi_gxxg == -100) cctki_vi_gxxg = CCTK_VarIndex("EHFinder::gxxg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxxg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxxg)); \
static int cctki_vi_gxxg2 = -100; \
if (cctki_vi_gxxg2 == -100) cctki_vi_gxxg2 = CCTK_VarIndex("EHFinder::gxxg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxxg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxxg2)); \
static int cctki_vi_gxxi = -100; \
if (cctki_vi_gxxi == -100) cctki_vi_gxxi = CCTK_VarIndex("EHFinder::gxxi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxxi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxxi)); \
static int cctki_vi_gxyg = -100; \
if (cctki_vi_gxyg == -100) cctki_vi_gxyg = CCTK_VarIndex("EHFinder::gxyg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxyg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxyg)); \
static int cctki_vi_gxyg2 = -100; \
if (cctki_vi_gxyg2 == -100) cctki_vi_gxyg2 = CCTK_VarIndex("EHFinder::gxyg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxyg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxyg2)); \
static int cctki_vi_gxyi = -100; \
if (cctki_vi_gxyi == -100) cctki_vi_gxyi = CCTK_VarIndex("EHFinder::gxyi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxyi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxyi)); \
static int cctki_vi_gxzg = -100; \
if (cctki_vi_gxzg == -100) cctki_vi_gxzg = CCTK_VarIndex("EHFinder::gxzg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxzg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxzg)); \
static int cctki_vi_gxzg2 = -100; \
if (cctki_vi_gxzg2 == -100) cctki_vi_gxzg2 = CCTK_VarIndex("EHFinder::gxzg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxzg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxzg2)); \
static int cctki_vi_gxzi = -100; \
if (cctki_vi_gxzi == -100) cctki_vi_gxzi = CCTK_VarIndex("EHFinder::gxzi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxzi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxzi)); \
static int cctki_vi_gyyg = -100; \
if (cctki_vi_gyyg == -100) cctki_vi_gyyg = CCTK_VarIndex("EHFinder::gyyg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyyg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyyg)); \
static int cctki_vi_gyyg2 = -100; \
if (cctki_vi_gyyg2 == -100) cctki_vi_gyyg2 = CCTK_VarIndex("EHFinder::gyyg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyyg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyyg2)); \
static int cctki_vi_gyyi = -100; \
if (cctki_vi_gyyi == -100) cctki_vi_gyyi = CCTK_VarIndex("EHFinder::gyyi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyyi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyyi)); \
static int cctki_vi_gyzg = -100; \
if (cctki_vi_gyzg == -100) cctki_vi_gyzg = CCTK_VarIndex("EHFinder::gyzg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyzg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyzg)); \
static int cctki_vi_gyzg2 = -100; \
if (cctki_vi_gyzg2 == -100) cctki_vi_gyzg2 = CCTK_VarIndex("EHFinder::gyzg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyzg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyzg2)); \
static int cctki_vi_gyzi = -100; \
if (cctki_vi_gyzi == -100) cctki_vi_gyzi = CCTK_VarIndex("EHFinder::gyzi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyzi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyzi)); \
static int cctki_vi_gzzg = -100; \
if (cctki_vi_gzzg == -100) cctki_vi_gzzg = CCTK_VarIndex("EHFinder::gzzg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzzg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gzzg)); \
static int cctki_vi_gzzg2 = -100; \
if (cctki_vi_gzzg2 == -100) cctki_vi_gzzg2 = CCTK_VarIndex("EHFinder::gzzg2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzzg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gzzg2)); \
static int cctki_vi_gzzi = -100; \
if (cctki_vi_gzzi == -100) cctki_vi_gzzi = CCTK_VarIndex("EHFinder::gzzi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzzi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gzzi)); \
static int cctki_vi_int_tmp = -100; \
if (cctki_vi_int_tmp == -100) cctki_vi_int_tmp = CCTK_VarIndex("EHFinder::int_tmp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, int_tmp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_int_tmp)); \
static int cctki_vi_integrate_counter = -100; \
if (cctki_vi_integrate_counter == -100) cctki_vi_integrate_counter = CCTK_VarIndex("EHFinder::integrate_counter"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, integrate_counter, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_integrate_counter)); \
static int cctki_vi_interp_x = -100; \
if (cctki_vi_interp_x == -100) cctki_vi_interp_x = CCTK_VarIndex("EHFinder::interp_x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, interp_x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_interp_x)); \
static int cctki_vi_interp_y = -100; \
if (cctki_vi_interp_y == -100) cctki_vi_interp_y = CCTK_VarIndex("EHFinder::interp_y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, interp_y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_interp_y)); \
static int cctki_vi_interp_z = -100; \
if (cctki_vi_interp_z == -100) cctki_vi_interp_z = CCTK_VarIndex("EHFinder::interp_z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, interp_z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_interp_z)); \
static int cctki_vi_levelset_counter = -100; \
if (cctki_vi_levelset_counter == -100) cctki_vi_levelset_counter = CCTK_VarIndex("EHFinder::levelset_counter"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, levelset_counter, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_levelset_counter)); \
static int cctki_vi_more_levelsets = -100; \
if (cctki_vi_more_levelsets == -100) cctki_vi_more_levelsets = CCTK_VarIndex("EHFinder::more_levelsets"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, more_levelsets, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_more_levelsets)); \
static int cctki_vi_more_points = -100; \
if (cctki_vi_more_points == -100) cctki_vi_more_points = CCTK_VarIndex("EHFinder::more_points"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, more_points, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_more_points)); \
static int cctki_vi_more_surfaces = -100; \
if (cctki_vi_more_surfaces == -100) cctki_vi_more_surfaces = CCTK_VarIndex("EHFinder::more_surfaces"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, more_surfaces, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_more_surfaces)); \
static int cctki_vi_n_since_last_reduction = -100; \
if (cctki_vi_n_since_last_reduction == -100) cctki_vi_n_since_last_reduction = CCTK_VarIndex("EHFinder::n_since_last_reduction"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, n_since_last_reduction, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_n_since_last_reduction)); \
static int cctki_vi_niter_reinit = -100; \
if (cctki_vi_niter_reinit == -100) cctki_vi_niter_reinit = CCTK_VarIndex("EHFinder::niter_reinit"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, niter_reinit, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_niter_reinit)); \
static int cctki_vi_phi_sym_factor = -100; \
if (cctki_vi_phi_sym_factor == -100) cctki_vi_phi_sym_factor = CCTK_VarIndex("EHFinder::phi_sym_factor"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phi_sym_factor, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phi_sym_factor)); \
static int cctki_vi_phiweights = -100; \
if (cctki_vi_phiweights == -100) cctki_vi_phiweights = CCTK_VarIndex("EHFinder::phiweights"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phiweights, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phiweights)); \
static int cctki_vi_points_counter = -100; \
if (cctki_vi_points_counter == -100) cctki_vi_points_counter = CCTK_VarIndex("EHFinder::points_counter"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, points_counter, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_points_counter)); \
static int cctki_vi_psig = -100; \
if (cctki_vi_psig == -100) cctki_vi_psig = CCTK_VarIndex("EHFinder::psig"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psig, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psig)); \
static int cctki_vi_psig2 = -100; \
if (cctki_vi_psig2 == -100) cctki_vi_psig2 = CCTK_VarIndex("EHFinder::psig2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psig2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psig2)); \
static int cctki_vi_psii = -100; \
if (cctki_vi_psii == -100) cctki_vi_psii = CCTK_VarIndex("EHFinder::psii"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psii, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psii)); \
static int cctki_vi_re_init_control = -100; \
if (cctki_vi_re_init_control == -100) cctki_vi_re_init_control = CCTK_VarIndex("EHFinder::re_init_control"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, re_init_control, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_re_init_control)); \
static int cctki_vi_rsurf = -100; \
if (cctki_vi_rsurf == -100) cctki_vi_rsurf = CCTK_VarIndex("EHFinder::rsurf"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, rsurf, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_rsurf)); \
static int cctki_vi_sc = -100; \
if (cctki_vi_sc == -100) cctki_vi_sc = CCTK_VarIndex("EHFinder::sc"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, sc, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sc)); \
static int cctki_vi_sf = -100; \
if (cctki_vi_sf == -100) cctki_vi_sf = CCTK_VarIndex("EHFinder::sf[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, sf, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sf)); \
static int cctki_vi_sftmp = -100; \
if (cctki_vi_sftmp == -100) cctki_vi_sftmp = CCTK_VarIndex("EHFinder::sftmp[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, sftmp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sftmp)); \
static int cctki_vi_sinphi = -100; \
if (cctki_vi_sinphi == -100) cctki_vi_sinphi = CCTK_VarIndex("EHFinder::sinphi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, sinphi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sinphi)); \
static int cctki_vi_sintheta = -100; \
if (cctki_vi_sintheta == -100) cctki_vi_sintheta = CCTK_VarIndex("EHFinder::sintheta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, sintheta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sintheta)); \
static int cctki_vi_surface_counter = -100; \
if (cctki_vi_surface_counter == -100) cctki_vi_surface_counter = CCTK_VarIndex("EHFinder::surface_counter"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, surface_counter, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_surface_counter)); \
static int cctki_vi_sym_factor = -100; \
if (cctki_vi_sym_factor == -100) cctki_vi_sym_factor = CCTK_VarIndex("EHFinder::sym_factor"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, sym_factor, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sym_factor)); \
static int cctki_vi_theta_sym_factor = -100; \
if (cctki_vi_theta_sym_factor == -100) cctki_vi_theta_sym_factor = CCTK_VarIndex("EHFinder::theta_sym_factor"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, theta_sym_factor, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_theta_sym_factor)); \
static int cctki_vi_thetaweights = -100; \
if (cctki_vi_thetaweights == -100) cctki_vi_thetaweights = CCTK_VarIndex("EHFinder::thetaweights"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, thetaweights, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_thetaweights)); \
static int cctki_vi_tm_mask = -100; \
if (cctki_vi_tm_mask == -100) cctki_vi_tm_mask = CCTK_VarIndex("EHFinder::tm_mask[0]"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, tm_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tm_mask)); \
static int cctki_vi_weights = -100; \
if (cctki_vi_weights == -100) cctki_vi_weights = CCTK_VarIndex("EHFinder::weights"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, weights, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weights)); \
static int cctki_vi_xg = -100; \
if (cctki_vi_xg == -100) cctki_vi_xg = CCTK_VarIndex("EHFinder::xg[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, xg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_xg)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, xg_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_xg)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, xg_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_xg)); \
static int cctki_vi_xg2 = -100; \
if (cctki_vi_xg2 == -100) cctki_vi_xg2 = CCTK_VarIndex("EHFinder::xg2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, xg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_xg2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, xg2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_xg2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, xg2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_xg2)); \
static int cctki_vi_xgf = -100; \
if (cctki_vi_xgf == -100) cctki_vi_xgf = CCTK_VarIndex("EHFinder::xgf"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, xgf, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_xgf)); \
static int cctki_vi_xgf2 = -100; \
if (cctki_vi_xgf2 == -100) cctki_vi_xgf2 = CCTK_VarIndex("EHFinder::xgf2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, xgf2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_xgf2)); \
static int cctki_vi_yg = -100; \
if (cctki_vi_yg == -100) cctki_vi_yg = CCTK_VarIndex("EHFinder::yg[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, yg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_yg)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, yg_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_yg)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, yg_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_yg)); \
static int cctki_vi_yg2 = -100; \
if (cctki_vi_yg2 == -100) cctki_vi_yg2 = CCTK_VarIndex("EHFinder::yg2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, yg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_yg2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, yg2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_yg2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, yg2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_yg2)); \
static int cctki_vi_ygf = -100; \
if (cctki_vi_ygf == -100) cctki_vi_ygf = CCTK_VarIndex("EHFinder::ygf"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ygf, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ygf)); \
static int cctki_vi_ygf2 = -100; \
if (cctki_vi_ygf2 == -100) cctki_vi_ygf2 = CCTK_VarIndex("EHFinder::ygf2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ygf2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ygf2)); \
static int cctki_vi_zg = -100; \
if (cctki_vi_zg == -100) cctki_vi_zg = CCTK_VarIndex("EHFinder::zg[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, zg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zg)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, zg_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_zg)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, zg_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_zg)); \
static int cctki_vi_zg2 = -100; \
if (cctki_vi_zg2 == -100) cctki_vi_zg2 = CCTK_VarIndex("EHFinder::zg2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, zg2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zg2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, zg2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_zg2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, zg2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_zg2)); \
static int cctki_vi_zgf = -100; \
if (cctki_vi_zgf == -100) cctki_vi_zgf = CCTK_VarIndex("EHFinder::zgf"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, zgf, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zgf)); \
static int cctki_vi_zgf2 = -100; \
if (cctki_vi_zgf2 == -100) cctki_vi_zgf2 = CCTK_VarIndex("EHFinder::zgf2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, zgf2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zgf2));

#define DECLARE_EHFINDER_PRIVATE_C2F \
static int CCTKARGNUM_alpg = -1; \
static int CCTKGROUPNUM_generator_arrays = -1; \
static int CCTKARGNUM_alpg2 = -1; \
static int CCTKGROUPNUM_generator_arrays2 = -1; \
static int CCTKARGNUM_betaxg = -1; \
static int CCTKARGNUM_betaxg2 = -1; \
static int CCTKARGNUM_betayg = -1; \
static int CCTKARGNUM_betayg2 = -1; \
static int CCTKARGNUM_betazg = -1; \
static int CCTKARGNUM_betazg2 = -1; \
static int CCTKARGNUM_center = -1; \
static int CCTKGROUPNUM_center_arrays = -1; \
static int CCTKARGNUM_cosphi = -1; \
static int CCTKGROUPNUM_surface_arrays = -1; \
static int CCTKARGNUM_costheta = -1; \
static int CCTKARGNUM_cphi = -1; \
static int CCTKARGNUM_ctheta = -1; \
static int CCTKARGNUM_da = -1; \
static int CCTKARGNUM_dfdx_interp = -1; \
static int CCTKGROUPNUM_surface_tmp_arrays = -1; \
static int CCTKARGNUM_dfdy_interp = -1; \
static int CCTKARGNUM_dfdz_interp = -1; \
static int CCTKARGNUM_dfsq = -1; \
static int CCTKGROUPNUM_dfsq = -1; \
static int CCTKARGNUM_dfx = -1; \
static int CCTKGROUPNUM_dfx = -1; \
static int CCTKARGNUM_dfxg = -1; \
static int CCTKARGNUM_dfxg2 = -1; \
static int CCTKARGNUM_dfy = -1; \
static int CCTKGROUPNUM_dfy = -1; \
static int CCTKARGNUM_dfyg = -1; \
static int CCTKARGNUM_dfyg2 = -1; \
static int CCTKARGNUM_dfz = -1; \
static int CCTKGROUPNUM_dfz = -1; \
static int CCTKARGNUM_dfzg = -1; \
static int CCTKARGNUM_dfzg2 = -1; \
static int CCTKARGNUM_dlphi = -1; \
static int CCTKARGNUM_dltheta = -1; \
static int CCTKARGNUM_drdphi = -1; \
static int CCTKARGNUM_drdtheta = -1; \
static int CCTKARGNUM_drsurf = -1; \
static int CCTKARGNUM_dxg = -1; \
static int CCTKGROUPNUM_dxg = -1; \
static int CCTKARGNUM_dxg2 = -1; \
static int CCTKGROUPNUM_dxg2 = -1; \
static int CCTKARGNUM_dyg = -1; \
static int CCTKGROUPNUM_dyg = -1; \
static int CCTKARGNUM_dyg2 = -1; \
static int CCTKGROUPNUM_dyg2 = -1; \
static int CCTKARGNUM_dzg = -1; \
static int CCTKGROUPNUM_dzg = -1; \
static int CCTKARGNUM_dzg2 = -1; \
static int CCTKGROUPNUM_dzg2 = -1; \
static int CCTKARGNUM_eh_area = -1; \
static int CCTKGROUPNUM_eh_area = -1; \
static int CCTKARGNUM_eh_area2 = -1; \
static int CCTKGROUPNUM_eh_area2 = -1; \
static int CCTKARGNUM_eh_centroid2_x = -1; \
static int CCTKGROUPNUM_eh_centroid2_x = -1; \
static int CCTKARGNUM_eh_centroid2_y = -1; \
static int CCTKGROUPNUM_eh_centroid2_y = -1; \
static int CCTKARGNUM_eh_centroid2_z = -1; \
static int CCTKGROUPNUM_eh_centroid2_z = -1; \
static int CCTKARGNUM_eh_centroid_x = -1; \
static int CCTKGROUPNUM_eh_centroid_x = -1; \
static int CCTKARGNUM_eh_centroid_y = -1; \
static int CCTKGROUPNUM_eh_centroid_y = -1; \
static int CCTKARGNUM_eh_centroid_z = -1; \
static int CCTKGROUPNUM_eh_centroid_z = -1; \
static int CCTKARGNUM_eh_circ_eq = -1; \
static int CCTKGROUPNUM_eh_circ_eq = -1; \
static int CCTKARGNUM_eh_circ_eq2 = -1; \
static int CCTKGROUPNUM_eh_circ_eq2 = -1; \
static int CCTKARGNUM_eh_circ_pol = -1; \
static int CCTKGROUPNUM_eh_circ_pol = -1; \
static int CCTKARGNUM_eh_circ_pol2 = -1; \
static int CCTKGROUPNUM_eh_circ_pol2 = -1; \
static int CCTKARGNUM_eh_mask = -1; \
static int CCTKGROUPNUM_eh_mask = -1; \
static int CCTKARGNUM_eh_mask_bak = -1; \
static int CCTKGROUPNUM_eh_mask_bak = -1; \
static int CCTKARGNUM_f = -1; \
static int CCTKGROUPNUM_f = -1; \
static int CCTKARGNUM_f_interp = -1; \
static int CCTKARGNUM_fbak = -1; \
static int CCTKGROUPNUM_fbak = -1; \
static int CCTKARGNUM_find_surface_status = -1; \
static int CCTKGROUPNUM_find_surface_status = -1; \
static int CCTKARGNUM_ftmp = -1; \
static int CCTKGROUPNUM_ftmp = -1; \
static int CCTKARGNUM_g3xx = -1; \
static int CCTKGROUPNUM_g3inv = -1; \
static int CCTKARGNUM_g3xy = -1; \
static int CCTKARGNUM_g3xz = -1; \
static int CCTKARGNUM_g3yy = -1; \
static int CCTKARGNUM_g3yz = -1; \
static int CCTKARGNUM_g3zz = -1; \
static int CCTKARGNUM_gpp = -1; \
static int CCTKARGNUM_gtp = -1; \
static int CCTKARGNUM_gtt = -1; \
static int CCTKARGNUM_gxxg = -1; \
static int CCTKARGNUM_gxxg2 = -1; \
static int CCTKARGNUM_gxxi = -1; \
static int CCTKGROUPNUM_interp_metric_arrays = -1; \
static int CCTKARGNUM_gxyg = -1; \
static int CCTKARGNUM_gxyg2 = -1; \
static int CCTKARGNUM_gxyi = -1; \
static int CCTKARGNUM_gxzg = -1; \
static int CCTKARGNUM_gxzg2 = -1; \
static int CCTKARGNUM_gxzi = -1; \
static int CCTKARGNUM_gyyg = -1; \
static int CCTKARGNUM_gyyg2 = -1; \
static int CCTKARGNUM_gyyi = -1; \
static int CCTKARGNUM_gyzg = -1; \
static int CCTKARGNUM_gyzg2 = -1; \
static int CCTKARGNUM_gyzi = -1; \
static int CCTKARGNUM_gzzg = -1; \
static int CCTKARGNUM_gzzg2 = -1; \
static int CCTKARGNUM_gzzi = -1; \
static int CCTKARGNUM_int_tmp = -1; \
static int CCTKGROUPNUM_integrate_tmp_array = -1; \
static int CCTKARGNUM_integrate_counter = -1; \
static int CCTKGROUPNUM_surface_integers = -1; \
static int CCTKARGNUM_interp_x = -1; \
static int CCTKARGNUM_interp_y = -1; \
static int CCTKARGNUM_interp_z = -1; \
static int CCTKARGNUM_levelset_counter = -1; \
static int CCTKGROUPNUM_levelset_integers = -1; \
static int CCTKARGNUM_more_levelsets = -1; \
static int CCTKARGNUM_more_points = -1; \
static int CCTKARGNUM_more_surfaces = -1; \
static int CCTKARGNUM_n_since_last_reduction = -1; \
static int CCTKGROUPNUM_surface_int_array = -1; \
static int CCTKARGNUM_niter_reinit = -1; \
static int CCTKGROUPNUM_niter_reinit = -1; \
static int CCTKARGNUM_phi_sym_factor = -1; \
static int CCTKGROUPNUM_surface_reals = -1; \
static int CCTKARGNUM_phiweights = -1; \
static int CCTKARGNUM_points_counter = -1; \
static int CCTKARGNUM_psig = -1; \
static int CCTKARGNUM_psig2 = -1; \
static int CCTKARGNUM_psii = -1; \
static int CCTKARGNUM_re_init_control = -1; \
static int CCTKGROUPNUM_re_init_control = -1; \
static int CCTKARGNUM_rsurf = -1; \
static int CCTKARGNUM_sc = -1; \
static int CCTKGROUPNUM_surface_index = -1; \
static int CCTKARGNUM_sf = -1; \
static int CCTKGROUPNUM_sf = -1; \
static int CCTKARGNUM_sftmp = -1; \
static int CCTKGROUPNUM_sftmp = -1; \
static int CCTKARGNUM_sinphi = -1; \
static int CCTKARGNUM_sintheta = -1; \
static int CCTKARGNUM_surface_counter = -1; \
static int CCTKARGNUM_sym_factor = -1; \
static int CCTKARGNUM_theta_sym_factor = -1; \
static int CCTKARGNUM_thetaweights = -1; \
static int CCTKARGNUM_tm_mask = -1; \
static int CCTKGROUPNUM_tm_mask = -1; \
static int CCTKARGNUM_weights = -1; \
static int CCTKARGNUM_xg = -1; \
static int CCTKGROUPNUM_xg = -1; \
static int CCTKARGNUM_xg2 = -1; \
static int CCTKGROUPNUM_xg2 = -1; \
static int CCTKARGNUM_xgf = -1; \
static int CCTKGROUPNUM_generator_gf = -1; \
static int CCTKARGNUM_xgf2 = -1; \
static int CCTKGROUPNUM_generator_gf2 = -1; \
static int CCTKARGNUM_yg = -1; \
static int CCTKGROUPNUM_yg = -1; \
static int CCTKARGNUM_yg2 = -1; \
static int CCTKGROUPNUM_yg2 = -1; \
static int CCTKARGNUM_ygf = -1; \
static int CCTKARGNUM_ygf2 = -1; \
static int CCTKARGNUM_zg = -1; \
static int CCTKGROUPNUM_zg = -1; \
static int CCTKARGNUM_zg2 = -1; \
static int CCTKGROUPNUM_zg2 = -1; \
static int CCTKARGNUM_zgf = -1; \
static int CCTKARGNUM_zgf2 = -1;

#define INITIALISE_EHFINDER_PRIVATE_C2F \
if(CCTKARGNUM_alpg == -1) CCTKARGNUM_alpg = CCTK_VarIndex("EHFinder::alpg"); \
if(CCTKGROUPNUM_generator_arrays == -1) CCTKGROUPNUM_generator_arrays = CCTK_GroupIndex("EHFinder::generator_arrays"); \
if(CCTKARGNUM_alpg2 == -1) CCTKARGNUM_alpg2 = CCTK_VarIndex("EHFinder::alpg2"); \
if(CCTKGROUPNUM_generator_arrays2 == -1) CCTKGROUPNUM_generator_arrays2 = CCTK_GroupIndex("EHFinder::generator_arrays2"); \
if(CCTKARGNUM_betaxg == -1) CCTKARGNUM_betaxg = CCTK_VarIndex("EHFinder::betaxg"); \
if(CCTKARGNUM_betaxg2 == -1) CCTKARGNUM_betaxg2 = CCTK_VarIndex("EHFinder::betaxg2"); \
if(CCTKARGNUM_betayg == -1) CCTKARGNUM_betayg = CCTK_VarIndex("EHFinder::betayg"); \
if(CCTKARGNUM_betayg2 == -1) CCTKARGNUM_betayg2 = CCTK_VarIndex("EHFinder::betayg2"); \
if(CCTKARGNUM_betazg == -1) CCTKARGNUM_betazg = CCTK_VarIndex("EHFinder::betazg"); \
if(CCTKARGNUM_betazg2 == -1) CCTKARGNUM_betazg2 = CCTK_VarIndex("EHFinder::betazg2"); \
if(CCTKARGNUM_center == -1) CCTKARGNUM_center = CCTK_VarIndex("EHFinder::center"); \
if(CCTKGROUPNUM_center_arrays == -1) CCTKGROUPNUM_center_arrays = CCTK_GroupIndex("EHFinder::center_arrays"); \
if(CCTKARGNUM_cosphi == -1) CCTKARGNUM_cosphi = CCTK_VarIndex("EHFinder::cosphi"); \
if(CCTKGROUPNUM_surface_arrays == -1) CCTKGROUPNUM_surface_arrays = CCTK_GroupIndex("EHFinder::surface_arrays"); \
if(CCTKARGNUM_costheta == -1) CCTKARGNUM_costheta = CCTK_VarIndex("EHFinder::costheta"); \
if(CCTKARGNUM_cphi == -1) CCTKARGNUM_cphi = CCTK_VarIndex("EHFinder::cphi"); \
if(CCTKARGNUM_ctheta == -1) CCTKARGNUM_ctheta = CCTK_VarIndex("EHFinder::ctheta"); \
if(CCTKARGNUM_da == -1) CCTKARGNUM_da = CCTK_VarIndex("EHFinder::da"); \
if(CCTKARGNUM_dfdx_interp == -1) CCTKARGNUM_dfdx_interp = CCTK_VarIndex("EHFinder::dfdx_interp"); \
if(CCTKGROUPNUM_surface_tmp_arrays == -1) CCTKGROUPNUM_surface_tmp_arrays = CCTK_GroupIndex("EHFinder::surface_tmp_arrays"); \
if(CCTKARGNUM_dfdy_interp == -1) CCTKARGNUM_dfdy_interp = CCTK_VarIndex("EHFinder::dfdy_interp"); \
if(CCTKARGNUM_dfdz_interp == -1) CCTKARGNUM_dfdz_interp = CCTK_VarIndex("EHFinder::dfdz_interp"); \
if(CCTKARGNUM_dfsq == -1) CCTKARGNUM_dfsq = CCTK_VarIndex("EHFinder::dfsq[0]"); \
if(CCTKGROUPNUM_dfsq == -1) CCTKGROUPNUM_dfsq = CCTK_GroupIndex("EHFinder::dfsq"); \
if(CCTKARGNUM_dfx == -1) CCTKARGNUM_dfx = CCTK_VarIndex("EHFinder::dfx[0]"); \
if(CCTKGROUPNUM_dfx == -1) CCTKGROUPNUM_dfx = CCTK_GroupIndex("EHFinder::dfx"); \
if(CCTKARGNUM_dfxg == -1) CCTKARGNUM_dfxg = CCTK_VarIndex("EHFinder::dfxg"); \
if(CCTKARGNUM_dfxg2 == -1) CCTKARGNUM_dfxg2 = CCTK_VarIndex("EHFinder::dfxg2"); \
if(CCTKARGNUM_dfy == -1) CCTKARGNUM_dfy = CCTK_VarIndex("EHFinder::dfy[0]"); \
if(CCTKGROUPNUM_dfy == -1) CCTKGROUPNUM_dfy = CCTK_GroupIndex("EHFinder::dfy"); \
if(CCTKARGNUM_dfyg == -1) CCTKARGNUM_dfyg = CCTK_VarIndex("EHFinder::dfyg"); \
if(CCTKARGNUM_dfyg2 == -1) CCTKARGNUM_dfyg2 = CCTK_VarIndex("EHFinder::dfyg2"); \
if(CCTKARGNUM_dfz == -1) CCTKARGNUM_dfz = CCTK_VarIndex("EHFinder::dfz[0]"); \
if(CCTKGROUPNUM_dfz == -1) CCTKGROUPNUM_dfz = CCTK_GroupIndex("EHFinder::dfz"); \
if(CCTKARGNUM_dfzg == -1) CCTKARGNUM_dfzg = CCTK_VarIndex("EHFinder::dfzg"); \
if(CCTKARGNUM_dfzg2 == -1) CCTKARGNUM_dfzg2 = CCTK_VarIndex("EHFinder::dfzg2"); \
if(CCTKARGNUM_dlphi == -1) CCTKARGNUM_dlphi = CCTK_VarIndex("EHFinder::dlphi"); \
if(CCTKARGNUM_dltheta == -1) CCTKARGNUM_dltheta = CCTK_VarIndex("EHFinder::dltheta"); \
if(CCTKARGNUM_drdphi == -1) CCTKARGNUM_drdphi = CCTK_VarIndex("EHFinder::drdphi"); \
if(CCTKARGNUM_drdtheta == -1) CCTKARGNUM_drdtheta = CCTK_VarIndex("EHFinder::drdtheta"); \
if(CCTKARGNUM_drsurf == -1) CCTKARGNUM_drsurf = CCTK_VarIndex("EHFinder::drsurf"); \
if(CCTKARGNUM_dxg == -1) CCTKARGNUM_dxg = CCTK_VarIndex("EHFinder::dxg[0]"); \
if(CCTKGROUPNUM_dxg == -1) CCTKGROUPNUM_dxg = CCTK_GroupIndex("EHFinder::dxg"); \
if(CCTKARGNUM_dxg2 == -1) CCTKARGNUM_dxg2 = CCTK_VarIndex("EHFinder::dxg2[0]"); \
if(CCTKGROUPNUM_dxg2 == -1) CCTKGROUPNUM_dxg2 = CCTK_GroupIndex("EHFinder::dxg2"); \
if(CCTKARGNUM_dyg == -1) CCTKARGNUM_dyg = CCTK_VarIndex("EHFinder::dyg[0]"); \
if(CCTKGROUPNUM_dyg == -1) CCTKGROUPNUM_dyg = CCTK_GroupIndex("EHFinder::dyg"); \
if(CCTKARGNUM_dyg2 == -1) CCTKARGNUM_dyg2 = CCTK_VarIndex("EHFinder::dyg2[0]"); \
if(CCTKGROUPNUM_dyg2 == -1) CCTKGROUPNUM_dyg2 = CCTK_GroupIndex("EHFinder::dyg2"); \
if(CCTKARGNUM_dzg == -1) CCTKARGNUM_dzg = CCTK_VarIndex("EHFinder::dzg[0]"); \
if(CCTKGROUPNUM_dzg == -1) CCTKGROUPNUM_dzg = CCTK_GroupIndex("EHFinder::dzg"); \
if(CCTKARGNUM_dzg2 == -1) CCTKARGNUM_dzg2 = CCTK_VarIndex("EHFinder::dzg2[0]"); \
if(CCTKGROUPNUM_dzg2 == -1) CCTKGROUPNUM_dzg2 = CCTK_GroupIndex("EHFinder::dzg2"); \
if(CCTKARGNUM_eh_area == -1) CCTKARGNUM_eh_area = CCTK_VarIndex("EHFinder::eh_area[0]"); \
if(CCTKGROUPNUM_eh_area == -1) CCTKGROUPNUM_eh_area = CCTK_GroupIndex("EHFinder::eh_area"); \
if(CCTKARGNUM_eh_area2 == -1) CCTKARGNUM_eh_area2 = CCTK_VarIndex("EHFinder::eh_area2[0]"); \
if(CCTKGROUPNUM_eh_area2 == -1) CCTKGROUPNUM_eh_area2 = CCTK_GroupIndex("EHFinder::eh_area2"); \
if(CCTKARGNUM_eh_centroid2_x == -1) CCTKARGNUM_eh_centroid2_x = CCTK_VarIndex("EHFinder::eh_centroid2_x[0]"); \
if(CCTKGROUPNUM_eh_centroid2_x == -1) CCTKGROUPNUM_eh_centroid2_x = CCTK_GroupIndex("EHFinder::eh_centroid2_x"); \
if(CCTKARGNUM_eh_centroid2_y == -1) CCTKARGNUM_eh_centroid2_y = CCTK_VarIndex("EHFinder::eh_centroid2_y[0]"); \
if(CCTKGROUPNUM_eh_centroid2_y == -1) CCTKGROUPNUM_eh_centroid2_y = CCTK_GroupIndex("EHFinder::eh_centroid2_y"); \
if(CCTKARGNUM_eh_centroid2_z == -1) CCTKARGNUM_eh_centroid2_z = CCTK_VarIndex("EHFinder::eh_centroid2_z[0]"); \
if(CCTKGROUPNUM_eh_centroid2_z == -1) CCTKGROUPNUM_eh_centroid2_z = CCTK_GroupIndex("EHFinder::eh_centroid2_z"); \
if(CCTKARGNUM_eh_centroid_x == -1) CCTKARGNUM_eh_centroid_x = CCTK_VarIndex("EHFinder::eh_centroid_x[0]"); \
if(CCTKGROUPNUM_eh_centroid_x == -1) CCTKGROUPNUM_eh_centroid_x = CCTK_GroupIndex("EHFinder::eh_centroid_x"); \
if(CCTKARGNUM_eh_centroid_y == -1) CCTKARGNUM_eh_centroid_y = CCTK_VarIndex("EHFinder::eh_centroid_y[0]"); \
if(CCTKGROUPNUM_eh_centroid_y == -1) CCTKGROUPNUM_eh_centroid_y = CCTK_GroupIndex("EHFinder::eh_centroid_y"); \
if(CCTKARGNUM_eh_centroid_z == -1) CCTKARGNUM_eh_centroid_z = CCTK_VarIndex("EHFinder::eh_centroid_z[0]"); \
if(CCTKGROUPNUM_eh_centroid_z == -1) CCTKGROUPNUM_eh_centroid_z = CCTK_GroupIndex("EHFinder::eh_centroid_z"); \
if(CCTKARGNUM_eh_circ_eq == -1) CCTKARGNUM_eh_circ_eq = CCTK_VarIndex("EHFinder::eh_circ_eq[0]"); \
if(CCTKGROUPNUM_eh_circ_eq == -1) CCTKGROUPNUM_eh_circ_eq = CCTK_GroupIndex("EHFinder::eh_circ_eq"); \
if(CCTKARGNUM_eh_circ_eq2 == -1) CCTKARGNUM_eh_circ_eq2 = CCTK_VarIndex("EHFinder::eh_circ_eq2[0]"); \
if(CCTKGROUPNUM_eh_circ_eq2 == -1) CCTKGROUPNUM_eh_circ_eq2 = CCTK_GroupIndex("EHFinder::eh_circ_eq2"); \
if(CCTKARGNUM_eh_circ_pol == -1) CCTKARGNUM_eh_circ_pol = CCTK_VarIndex("EHFinder::eh_circ_pol[0]"); \
if(CCTKGROUPNUM_eh_circ_pol == -1) CCTKGROUPNUM_eh_circ_pol = CCTK_GroupIndex("EHFinder::eh_circ_pol"); \
if(CCTKARGNUM_eh_circ_pol2 == -1) CCTKARGNUM_eh_circ_pol2 = CCTK_VarIndex("EHFinder::eh_circ_pol2[0]"); \
if(CCTKGROUPNUM_eh_circ_pol2 == -1) CCTKGROUPNUM_eh_circ_pol2 = CCTK_GroupIndex("EHFinder::eh_circ_pol2"); \
if(CCTKARGNUM_eh_mask == -1) CCTKARGNUM_eh_mask = CCTK_VarIndex("EHFinder::eh_mask[0]"); \
if(CCTKGROUPNUM_eh_mask == -1) CCTKGROUPNUM_eh_mask = CCTK_GroupIndex("EHFinder::eh_mask"); \
if(CCTKARGNUM_eh_mask_bak == -1) CCTKARGNUM_eh_mask_bak = CCTK_VarIndex("EHFinder::eh_mask_bak[0]"); \
if(CCTKGROUPNUM_eh_mask_bak == -1) CCTKGROUPNUM_eh_mask_bak = CCTK_GroupIndex("EHFinder::eh_mask_bak"); \
if(CCTKARGNUM_f == -1) CCTKARGNUM_f = CCTK_VarIndex("EHFinder::f[0]"); \
if(CCTKGROUPNUM_f == -1) CCTKGROUPNUM_f = CCTK_GroupIndex("EHFinder::f"); \
if(CCTKARGNUM_f_interp == -1) CCTKARGNUM_f_interp = CCTK_VarIndex("EHFinder::f_interp"); \
if(CCTKARGNUM_fbak == -1) CCTKARGNUM_fbak = CCTK_VarIndex("EHFinder::fbak[0]"); \
if(CCTKGROUPNUM_fbak == -1) CCTKGROUPNUM_fbak = CCTK_GroupIndex("EHFinder::fbak"); \
if(CCTKARGNUM_find_surface_status == -1) CCTKARGNUM_find_surface_status = CCTK_VarIndex("EHFinder::find_surface_status"); \
if(CCTKGROUPNUM_find_surface_status == -1) CCTKGROUPNUM_find_surface_status = CCTK_GroupIndex("EHFinder::find_surface_status"); \
if(CCTKARGNUM_ftmp == -1) CCTKARGNUM_ftmp = CCTK_VarIndex("EHFinder::ftmp[0]"); \
if(CCTKGROUPNUM_ftmp == -1) CCTKGROUPNUM_ftmp = CCTK_GroupIndex("EHFinder::ftmp"); \
if(CCTKARGNUM_g3xx == -1) CCTKARGNUM_g3xx = CCTK_VarIndex("EHFinder::g3xx"); \
if(CCTKGROUPNUM_g3inv == -1) CCTKGROUPNUM_g3inv = CCTK_GroupIndex("EHFinder::g3inv"); \
if(CCTKARGNUM_g3xy == -1) CCTKARGNUM_g3xy = CCTK_VarIndex("EHFinder::g3xy"); \
if(CCTKARGNUM_g3xz == -1) CCTKARGNUM_g3xz = CCTK_VarIndex("EHFinder::g3xz"); \
if(CCTKARGNUM_g3yy == -1) CCTKARGNUM_g3yy = CCTK_VarIndex("EHFinder::g3yy"); \
if(CCTKARGNUM_g3yz == -1) CCTKARGNUM_g3yz = CCTK_VarIndex("EHFinder::g3yz"); \
if(CCTKARGNUM_g3zz == -1) CCTKARGNUM_g3zz = CCTK_VarIndex("EHFinder::g3zz"); \
if(CCTKARGNUM_gpp == -1) CCTKARGNUM_gpp = CCTK_VarIndex("EHFinder::gpp"); \
if(CCTKARGNUM_gtp == -1) CCTKARGNUM_gtp = CCTK_VarIndex("EHFinder::gtp"); \
if(CCTKARGNUM_gtt == -1) CCTKARGNUM_gtt = CCTK_VarIndex("EHFinder::gtt"); \
if(CCTKARGNUM_gxxg == -1) CCTKARGNUM_gxxg = CCTK_VarIndex("EHFinder::gxxg"); \
if(CCTKARGNUM_gxxg2 == -1) CCTKARGNUM_gxxg2 = CCTK_VarIndex("EHFinder::gxxg2"); \
if(CCTKARGNUM_gxxi == -1) CCTKARGNUM_gxxi = CCTK_VarIndex("EHFinder::gxxi"); \
if(CCTKGROUPNUM_interp_metric_arrays == -1) CCTKGROUPNUM_interp_metric_arrays = CCTK_GroupIndex("EHFinder::interp_metric_arrays"); \
if(CCTKARGNUM_gxyg == -1) CCTKARGNUM_gxyg = CCTK_VarIndex("EHFinder::gxyg"); \
if(CCTKARGNUM_gxyg2 == -1) CCTKARGNUM_gxyg2 = CCTK_VarIndex("EHFinder::gxyg2"); \
if(CCTKARGNUM_gxyi == -1) CCTKARGNUM_gxyi = CCTK_VarIndex("EHFinder::gxyi"); \
if(CCTKARGNUM_gxzg == -1) CCTKARGNUM_gxzg = CCTK_VarIndex("EHFinder::gxzg"); \
if(CCTKARGNUM_gxzg2 == -1) CCTKARGNUM_gxzg2 = CCTK_VarIndex("EHFinder::gxzg2"); \
if(CCTKARGNUM_gxzi == -1) CCTKARGNUM_gxzi = CCTK_VarIndex("EHFinder::gxzi"); \
if(CCTKARGNUM_gyyg == -1) CCTKARGNUM_gyyg = CCTK_VarIndex("EHFinder::gyyg"); \
if(CCTKARGNUM_gyyg2 == -1) CCTKARGNUM_gyyg2 = CCTK_VarIndex("EHFinder::gyyg2"); \
if(CCTKARGNUM_gyyi == -1) CCTKARGNUM_gyyi = CCTK_VarIndex("EHFinder::gyyi"); \
if(CCTKARGNUM_gyzg == -1) CCTKARGNUM_gyzg = CCTK_VarIndex("EHFinder::gyzg"); \
if(CCTKARGNUM_gyzg2 == -1) CCTKARGNUM_gyzg2 = CCTK_VarIndex("EHFinder::gyzg2"); \
if(CCTKARGNUM_gyzi == -1) CCTKARGNUM_gyzi = CCTK_VarIndex("EHFinder::gyzi"); \
if(CCTKARGNUM_gzzg == -1) CCTKARGNUM_gzzg = CCTK_VarIndex("EHFinder::gzzg"); \
if(CCTKARGNUM_gzzg2 == -1) CCTKARGNUM_gzzg2 = CCTK_VarIndex("EHFinder::gzzg2"); \
if(CCTKARGNUM_gzzi == -1) CCTKARGNUM_gzzi = CCTK_VarIndex("EHFinder::gzzi"); \
if(CCTKARGNUM_int_tmp == -1) CCTKARGNUM_int_tmp = CCTK_VarIndex("EHFinder::int_tmp"); \
if(CCTKGROUPNUM_integrate_tmp_array == -1) CCTKGROUPNUM_integrate_tmp_array = CCTK_GroupIndex("EHFinder::integrate_tmp_array"); \
if(CCTKARGNUM_integrate_counter == -1) CCTKARGNUM_integrate_counter = CCTK_VarIndex("EHFinder::integrate_counter"); \
if(CCTKGROUPNUM_surface_integers == -1) CCTKGROUPNUM_surface_integers = CCTK_GroupIndex("EHFinder::surface_integers"); \
if(CCTKARGNUM_interp_x == -1) CCTKARGNUM_interp_x = CCTK_VarIndex("EHFinder::interp_x"); \
if(CCTKARGNUM_interp_y == -1) CCTKARGNUM_interp_y = CCTK_VarIndex("EHFinder::interp_y"); \
if(CCTKARGNUM_interp_z == -1) CCTKARGNUM_interp_z = CCTK_VarIndex("EHFinder::interp_z"); \
if(CCTKARGNUM_levelset_counter == -1) CCTKARGNUM_levelset_counter = CCTK_VarIndex("EHFinder::levelset_counter"); \
if(CCTKGROUPNUM_levelset_integers == -1) CCTKGROUPNUM_levelset_integers = CCTK_GroupIndex("EHFinder::levelset_integers"); \
if(CCTKARGNUM_more_levelsets == -1) CCTKARGNUM_more_levelsets = CCTK_VarIndex("EHFinder::more_levelsets"); \
if(CCTKARGNUM_more_points == -1) CCTKARGNUM_more_points = CCTK_VarIndex("EHFinder::more_points"); \
if(CCTKARGNUM_more_surfaces == -1) CCTKARGNUM_more_surfaces = CCTK_VarIndex("EHFinder::more_surfaces"); \
if(CCTKARGNUM_n_since_last_reduction == -1) CCTKARGNUM_n_since_last_reduction = CCTK_VarIndex("EHFinder::n_since_last_reduction"); \
if(CCTKGROUPNUM_surface_int_array == -1) CCTKGROUPNUM_surface_int_array = CCTK_GroupIndex("EHFinder::surface_int_array"); \
if(CCTKARGNUM_niter_reinit == -1) CCTKARGNUM_niter_reinit = CCTK_VarIndex("EHFinder::niter_reinit"); \
if(CCTKGROUPNUM_niter_reinit == -1) CCTKGROUPNUM_niter_reinit = CCTK_GroupIndex("EHFinder::niter_reinit"); \
if(CCTKARGNUM_phi_sym_factor == -1) CCTKARGNUM_phi_sym_factor = CCTK_VarIndex("EHFinder::phi_sym_factor"); \
if(CCTKGROUPNUM_surface_reals == -1) CCTKGROUPNUM_surface_reals = CCTK_GroupIndex("EHFinder::surface_reals"); \
if(CCTKARGNUM_phiweights == -1) CCTKARGNUM_phiweights = CCTK_VarIndex("EHFinder::phiweights"); \
if(CCTKARGNUM_points_counter == -1) CCTKARGNUM_points_counter = CCTK_VarIndex("EHFinder::points_counter"); \
if(CCTKARGNUM_psig == -1) CCTKARGNUM_psig = CCTK_VarIndex("EHFinder::psig"); \
if(CCTKARGNUM_psig2 == -1) CCTKARGNUM_psig2 = CCTK_VarIndex("EHFinder::psig2"); \
if(CCTKARGNUM_psii == -1) CCTKARGNUM_psii = CCTK_VarIndex("EHFinder::psii"); \
if(CCTKARGNUM_re_init_control == -1) CCTKARGNUM_re_init_control = CCTK_VarIndex("EHFinder::re_init_control"); \
if(CCTKGROUPNUM_re_init_control == -1) CCTKGROUPNUM_re_init_control = CCTK_GroupIndex("EHFinder::re_init_control"); \
if(CCTKARGNUM_rsurf == -1) CCTKARGNUM_rsurf = CCTK_VarIndex("EHFinder::rsurf"); \
if(CCTKARGNUM_sc == -1) CCTKARGNUM_sc = CCTK_VarIndex("EHFinder::sc"); \
if(CCTKGROUPNUM_surface_index == -1) CCTKGROUPNUM_surface_index = CCTK_GroupIndex("EHFinder::surface_index"); \
if(CCTKARGNUM_sf == -1) CCTKARGNUM_sf = CCTK_VarIndex("EHFinder::sf[0]"); \
if(CCTKGROUPNUM_sf == -1) CCTKGROUPNUM_sf = CCTK_GroupIndex("EHFinder::sf"); \
if(CCTKARGNUM_sftmp == -1) CCTKARGNUM_sftmp = CCTK_VarIndex("EHFinder::sftmp[0]"); \
if(CCTKGROUPNUM_sftmp == -1) CCTKGROUPNUM_sftmp = CCTK_GroupIndex("EHFinder::sftmp"); \
if(CCTKARGNUM_sinphi == -1) CCTKARGNUM_sinphi = CCTK_VarIndex("EHFinder::sinphi"); \
if(CCTKARGNUM_sintheta == -1) CCTKARGNUM_sintheta = CCTK_VarIndex("EHFinder::sintheta"); \
if(CCTKARGNUM_surface_counter == -1) CCTKARGNUM_surface_counter = CCTK_VarIndex("EHFinder::surface_counter"); \
if(CCTKARGNUM_sym_factor == -1) CCTKARGNUM_sym_factor = CCTK_VarIndex("EHFinder::sym_factor"); \
if(CCTKARGNUM_theta_sym_factor == -1) CCTKARGNUM_theta_sym_factor = CCTK_VarIndex("EHFinder::theta_sym_factor"); \
if(CCTKARGNUM_thetaweights == -1) CCTKARGNUM_thetaweights = CCTK_VarIndex("EHFinder::thetaweights"); \
if(CCTKARGNUM_tm_mask == -1) CCTKARGNUM_tm_mask = CCTK_VarIndex("EHFinder::tm_mask[0]"); \
if(CCTKGROUPNUM_tm_mask == -1) CCTKGROUPNUM_tm_mask = CCTK_GroupIndex("EHFinder::tm_mask"); \
if(CCTKARGNUM_weights == -1) CCTKARGNUM_weights = CCTK_VarIndex("EHFinder::weights"); \
if(CCTKARGNUM_xg == -1) CCTKARGNUM_xg = CCTK_VarIndex("EHFinder::xg[0]"); \
if(CCTKGROUPNUM_xg == -1) CCTKGROUPNUM_xg = CCTK_GroupIndex("EHFinder::xg"); \
if(CCTKARGNUM_xg2 == -1) CCTKARGNUM_xg2 = CCTK_VarIndex("EHFinder::xg2[0]"); \
if(CCTKGROUPNUM_xg2 == -1) CCTKGROUPNUM_xg2 = CCTK_GroupIndex("EHFinder::xg2"); \
if(CCTKARGNUM_xgf == -1) CCTKARGNUM_xgf = CCTK_VarIndex("EHFinder::xgf"); \
if(CCTKGROUPNUM_generator_gf == -1) CCTKGROUPNUM_generator_gf = CCTK_GroupIndex("EHFinder::generator_gf"); \
if(CCTKARGNUM_xgf2 == -1) CCTKARGNUM_xgf2 = CCTK_VarIndex("EHFinder::xgf2"); \
if(CCTKGROUPNUM_generator_gf2 == -1) CCTKGROUPNUM_generator_gf2 = CCTK_GroupIndex("EHFinder::generator_gf2"); \
if(CCTKARGNUM_yg == -1) CCTKARGNUM_yg = CCTK_VarIndex("EHFinder::yg[0]"); \
if(CCTKGROUPNUM_yg == -1) CCTKGROUPNUM_yg = CCTK_GroupIndex("EHFinder::yg"); \
if(CCTKARGNUM_yg2 == -1) CCTKARGNUM_yg2 = CCTK_VarIndex("EHFinder::yg2[0]"); \
if(CCTKGROUPNUM_yg2 == -1) CCTKGROUPNUM_yg2 = CCTK_GroupIndex("EHFinder::yg2"); \
if(CCTKARGNUM_ygf == -1) CCTKARGNUM_ygf = CCTK_VarIndex("EHFinder::ygf"); \
if(CCTKARGNUM_ygf2 == -1) CCTKARGNUM_ygf2 = CCTK_VarIndex("EHFinder::ygf2"); \
if(CCTKARGNUM_zg == -1) CCTKARGNUM_zg = CCTK_VarIndex("EHFinder::zg[0]"); \
if(CCTKGROUPNUM_zg == -1) CCTKGROUPNUM_zg = CCTK_GroupIndex("EHFinder::zg"); \
if(CCTKARGNUM_zg2 == -1) CCTKARGNUM_zg2 = CCTK_VarIndex("EHFinder::zg2[0]"); \
if(CCTKGROUPNUM_zg2 == -1) CCTKGROUPNUM_zg2 = CCTK_GroupIndex("EHFinder::zg2"); \
if(CCTKARGNUM_zgf == -1) CCTKARGNUM_zgf = CCTK_VarIndex("EHFinder::zgf"); \
if(CCTKARGNUM_zgf2 == -1) CCTKARGNUM_zgf2 = CCTK_VarIndex("EHFinder::zgf2");

#define EHFINDER_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int

#define PASS_EHFINDER_PRIVATE_C2F(GH) \
PASS_GROUPSIZE(center_arrays, 0),\
PASS_GROUPSIZE(dxg, 0),\
PASS_GROUPSIZE(dxg2, 0),\
PASS_GROUPSIZE(dyg, 0),\
PASS_GROUPSIZE(dyg2, 0),\
PASS_GROUPSIZE(dzg, 0),\
PASS_GROUPSIZE(dzg2, 0),\
PASS_GROUPSIZE(eh_area, 0),\
PASS_GROUPSIZE(eh_area2, 0),\
PASS_GROUPSIZE(eh_centroid2_x, 0),\
PASS_GROUPSIZE(eh_centroid2_y, 0),\
PASS_GROUPSIZE(eh_centroid2_z, 0),\
PASS_GROUPSIZE(eh_centroid_x, 0),\
PASS_GROUPSIZE(eh_centroid_y, 0),\
PASS_GROUPSIZE(eh_centroid_z, 0),\
PASS_GROUPSIZE(eh_circ_eq, 0),\
PASS_GROUPSIZE(eh_circ_eq2, 0),\
PASS_GROUPSIZE(eh_circ_pol, 0),\
PASS_GROUPSIZE(eh_circ_pol2, 0),\
PASS_GROUPSIZE(generator_arrays, 0),\
PASS_GROUPSIZE(generator_arrays2, 0),\
PASS_GROUPSIZE(integrate_tmp_array, 0),\
PASS_GROUPSIZE(interp_metric_arrays, 0),\
PASS_GROUPSIZE(surface_arrays, 0),\
PASS_GROUPSIZE(surface_int_array, 0),\
PASS_GROUPSIZE(surface_tmp_arrays, 0),\
PASS_GROUPSIZE(xg, 0),\
PASS_GROUPSIZE(xg2, 0),\
PASS_GROUPSIZE(yg, 0),\
PASS_GROUPSIZE(yg2, 0),\
PASS_GROUPSIZE(zg, 0),\
PASS_GROUPSIZE(zg2, 0),\
PASS_GROUPSIZE(dxg2, 1),\
PASS_GROUPSIZE(dyg2, 1),\
PASS_GROUPSIZE(dzg2, 1),\
PASS_GROUPSIZE(generator_arrays2, 1),\
PASS_GROUPSIZE(integrate_tmp_array, 1),\
PASS_GROUPSIZE(interp_metric_arrays, 1),\
PASS_GROUPSIZE(surface_arrays, 1),\
PASS_GROUPSIZE(surface_int_array, 1),\
PASS_GROUPSIZE(surface_tmp_arrays, 1),\
PASS_GROUPSIZE(xg2, 1),\
PASS_GROUPSIZE(yg2, 1),\
PASS_GROUPSIZE(zg2, 1),\
PASS_GROUPLEN(EHFinder, dfsq),\
PASS_GROUPLEN(EHFinder, dfx),\
PASS_GROUPLEN(EHFinder, dfy),\
PASS_GROUPLEN(EHFinder, dfz),\
PASS_GROUPLEN(EHFinder, dxg2),\
PASS_GROUPLEN(EHFinder, dxg),\
PASS_GROUPLEN(EHFinder, dyg2),\
PASS_GROUPLEN(EHFinder, dyg),\
PASS_GROUPLEN(EHFinder, dzg2),\
PASS_GROUPLEN(EHFinder, dzg),\
PASS_GROUPLEN(EHFinder, eh_area2),\
PASS_GROUPLEN(EHFinder, eh_area),\
PASS_GROUPLEN(EHFinder, eh_centroid2_x),\
PASS_GROUPLEN(EHFinder, eh_centroid2_y),\
PASS_GROUPLEN(EHFinder, eh_centroid2_z),\
PASS_GROUPLEN(EHFinder, eh_centroid_x),\
PASS_GROUPLEN(EHFinder, eh_centroid_y),\
PASS_GROUPLEN(EHFinder, eh_centroid_z),\
PASS_GROUPLEN(EHFinder, eh_circ_eq2),\
PASS_GROUPLEN(EHFinder, eh_circ_eq),\
PASS_GROUPLEN(EHFinder, eh_circ_pol2),\
PASS_GROUPLEN(EHFinder, eh_circ_pol),\
PASS_GROUPLEN(EHFinder, eh_mask_bak),\
PASS_GROUPLEN(EHFinder, eh_mask),\
PASS_GROUPLEN(EHFinder, f),\
PASS_GROUPLEN(EHFinder, fbak),\
PASS_GROUPLEN(EHFinder, ftmp),\
PASS_GROUPLEN(EHFinder, sf),\
PASS_GROUPLEN(EHFinder, sftmp),\
PASS_GROUPLEN(EHFinder, tm_mask),\
PASS_GROUPLEN(EHFinder, xg2),\
PASS_GROUPLEN(EHFinder, xg),\
PASS_GROUPLEN(EHFinder, yg2),\
PASS_GROUPLEN(EHFinder, yg),\
PASS_GROUPLEN(EHFinder, zg2),\
PASS_GROUPLEN(EHFinder, zg),\
(CCTK_REAL *)(PASS_REFERENCE(alpg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alpg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betaxg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betaxg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betayg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betayg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betazg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betazg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(center, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cosphi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(costheta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(cphi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ctheta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(da, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfdx_interp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfdy_interp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfdz_interp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfsq, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfxg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfxg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfyg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfyg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfzg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dfzg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dlphi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dltheta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drdphi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drdtheta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(drsurf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dxg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dxg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dyg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dyg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dzg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dzg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_area, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_area2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_centroid2_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_centroid2_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_centroid2_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_centroid_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_centroid_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_centroid_z, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_circ_eq, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_circ_eq2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_circ_pol, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(eh_circ_pol2, 0)),\
(CCTK_INT *)(PASS_REFERENCE(eh_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(eh_mask_bak, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(f, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(f, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(f, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(f_interp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(fbak, 0)),\
(CCTK_INT *)(PASS_REFERENCE(find_surface_status, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ftmp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(g3xx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(g3xy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(g3xz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(g3yy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(g3yz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(g3zz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gpp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gtp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gtt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxxg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxxg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxxi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxyg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxyg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxyi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxzg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxzg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxzi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyyg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyyg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyyi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyzg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyzg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyzi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzzg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzzg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzzi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(int_tmp, 0)),\
(CCTK_INT *)(PASS_REFERENCE(integrate_counter, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(interp_x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(interp_y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(interp_z, 0)),\
(CCTK_INT *)(PASS_REFERENCE(levelset_counter, 0)),\
(CCTK_INT *)(PASS_REFERENCE(more_levelsets, 0)),\
(CCTK_INT *)(PASS_REFERENCE(more_points, 0)),\
(CCTK_INT *)(PASS_REFERENCE(more_surfaces, 0)),\
(CCTK_INT *)(PASS_REFERENCE(n_since_last_reduction, 0)),\
(CCTK_INT *)(PASS_REFERENCE(niter_reinit, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi_sym_factor, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiweights, 0)),\
(CCTK_INT *)(PASS_REFERENCE(points_counter, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psig, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psig2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psii, 0)),\
(CCTK_INT *)(PASS_REFERENCE(re_init_control, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(rsurf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sc, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sftmp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sinphi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sintheta, 0)),\
(CCTK_INT *)(PASS_REFERENCE(surface_counter, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sym_factor, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(theta_sym_factor, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(thetaweights, 0)),\
(CCTK_INT *)(PASS_REFERENCE(tm_mask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(weights, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(xg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(xg, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(xg, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(xg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(xg2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(xg2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(xgf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(xgf2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(yg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(yg, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(yg, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(yg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(yg2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(yg2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(ygf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ygf2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(zg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(zg, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(zg, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(zg2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(zg2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(zg2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(zgf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(zgf2, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_EHFINDER_PROTECTED_FARGUMENTS \


#define EHFINDER_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_EHFINDER_PROTECTED_CARGUMENTS \


#define DECLARE_EHFINDER_PROTECTED_C2F \


#define INITIALISE_EHFINDER_PROTECTED_C2F \


#define EHFINDER_PROTECTED_C2F_PROTO \


#define PASS_EHFINDER_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_EHFINDER_PUBLIC_FARGUMENTS \
CCTK_DECLARE(CCTK_INT,active_slicing_handle,)&&\
CCTK_DECLARE(CCTK_REAL,alp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,alp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,betaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,coarse_dx,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dy,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dz,)&&\
CCTK_DECLARE(CCTK_INT,conformal_state,)&&\
CCTK_DECLARE(CCTK_REAL,dtalp,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtalp_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetax_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetay_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,dtbetaz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,dtlapse_state,)&&\
CCTK_DECLARE(CCTK_INT,dtshift_state,)&&\
CCTK_DECLARE(CCTK_REAL,emask,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,gzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,kzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psix,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psixx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psixy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psixz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psiz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,psizz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_INT,shift_state,)&&\
CCTK_DECLARE(CCTK_INT,space_mask,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,x,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,y,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,z,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define EHFINDER_PUBLIC_FARGUMENTS \
active_slicing_handle,alp,alp_p,alp_p_p,betax,betax_p,betax_p_p,betay,betay_p,betay_p_p,betaz,betaz_p,betaz_p_p,coarse_dx,coarse_dy,coarse_dz,conformal_state,dtalp,dtalp_p,dtalp_p_p,dtbetax,dtbetax_p,dtbetax_p_p,dtbetay,dtbetay_p,dtbetay_p_p,dtbetaz,dtbetaz_p,dtbetaz_p_p,dtlapse_state,dtshift_state,emask,gxx,gxx_p,gxx_p_p,gxy,gxy_p,gxy_p_p,gxz,gxz_p,gxz_p_p,gyy,gyy_p,gyy_p_p,gyz,gyz_p,gyz_p_p,gzz,gzz_p,gzz_p_p,kxx,kxx_p,kxx_p_p,kxy,kxy_p,kxy_p_p,kxz,kxz_p,kxz_p_p,kyy,kyy_p,kyy_p_p,kyz,kyz_p,kyz_p_p,kzz,kzz_p,kzz_p_p,psi,psix,psixx,psixy,psixz,psiy,psiyy,psiyz,psiz,psizz,r,shift_state,space_mask,x,y,z

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_EHFINDER_PUBLIC_CARGUMENTS \
static int cctki_vi_active_slicing_handle = -100; \
if (cctki_vi_active_slicing_handle == -100) cctki_vi_active_slicing_handle = CCTK_VarIndex("COORDGAUGE::active_slicing_handle"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, active_slicing_handle, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_active_slicing_handle)); \
static int cctki_vi_alp = -100; \
if (cctki_vi_alp == -100) cctki_vi_alp = CCTK_VarIndex("ADMBASE::alp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_alp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, alp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_alp)); \
static int cctki_vi_betax = -100; \
if (cctki_vi_betax == -100) cctki_vi_betax = CCTK_VarIndex("ADMBASE::betax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betax)); \
static int cctki_vi_betay = -100; \
if (cctki_vi_betay == -100) cctki_vi_betay = CCTK_VarIndex("ADMBASE::betay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betay)); \
static int cctki_vi_betaz = -100; \
if (cctki_vi_betaz == -100) cctki_vi_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_betaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, betaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_betaz)); \
static int cctki_vi_coarse_dx = -100; \
if (cctki_vi_coarse_dx == -100) cctki_vi_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dx)); \
static int cctki_vi_coarse_dy = -100; \
if (cctki_vi_coarse_dy == -100) cctki_vi_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dy)); \
static int cctki_vi_coarse_dz = -100; \
if (cctki_vi_coarse_dz == -100) cctki_vi_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dz)); \
static int cctki_vi_conformal_state = -100; \
if (cctki_vi_conformal_state == -100) cctki_vi_conformal_state = CCTK_VarIndex("STATICCONFORMAL::conformal_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, conformal_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_conformal_state)); \
static int cctki_vi_dtalp = -100; \
if (cctki_vi_dtalp == -100) cctki_vi_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtalp)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtalp_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtalp)); \
static int cctki_vi_dtbetax = -100; \
if (cctki_vi_dtbetax == -100) cctki_vi_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetax)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetax_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetax)); \
static int cctki_vi_dtbetay = -100; \
if (cctki_vi_dtbetay == -100) cctki_vi_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetay)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetay_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetay)); \
static int cctki_vi_dtbetaz = -100; \
if (cctki_vi_dtbetaz == -100) cctki_vi_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dtbetaz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dtbetaz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_dtbetaz)); \
static int cctki_vi_dtlapse_state = -100; \
if (cctki_vi_dtlapse_state == -100) cctki_vi_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtlapse_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtlapse_state)); \
static int cctki_vi_dtshift_state = -100; \
if (cctki_vi_dtshift_state == -100) cctki_vi_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, dtshift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dtshift_state)); \
static int cctki_vi_emask = -100; \
if (cctki_vi_emask == -100) cctki_vi_emask = CCTK_VarIndex("SPACEMASK::emask"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, emask, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_emask)); \
static int cctki_vi_gxx = -100; \
if (cctki_vi_gxx == -100) cctki_vi_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxx)); \
static int cctki_vi_gxy = -100; \
if (cctki_vi_gxy == -100) cctki_vi_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxy)); \
static int cctki_vi_gxz = -100; \
if (cctki_vi_gxz == -100) cctki_vi_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gxz)); \
static int cctki_vi_gyy = -100; \
if (cctki_vi_gyy == -100) cctki_vi_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyy)); \
static int cctki_vi_gyz = -100; \
if (cctki_vi_gyz == -100) cctki_vi_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gyz)); \
static int cctki_vi_gzz = -100; \
if (cctki_vi_gzz == -100) cctki_vi_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_gzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_gzz)); \
static int cctki_vi_kxx = -100; \
if (cctki_vi_kxx == -100) cctki_vi_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxx)); \
static int cctki_vi_kxy = -100; \
if (cctki_vi_kxy == -100) cctki_vi_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxy)); \
static int cctki_vi_kxz = -100; \
if (cctki_vi_kxz == -100) cctki_vi_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kxz)); \
static int cctki_vi_kyy = -100; \
if (cctki_vi_kyy == -100) cctki_vi_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyy)); \
static int cctki_vi_kyz = -100; \
if (cctki_vi_kyz == -100) cctki_vi_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kyz)); \
static int cctki_vi_kzz = -100; \
if (cctki_vi_kzz == -100) cctki_vi_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_kzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, kzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_kzz)); \
static int cctki_vi_psi = -100; \
if (cctki_vi_psi == -100) cctki_vi_psi = CCTK_VarIndex("STATICCONFORMAL::psi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psi)); \
static int cctki_vi_psix = -100; \
if (cctki_vi_psix == -100) cctki_vi_psix = CCTK_VarIndex("STATICCONFORMAL::psix"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psix, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psix)); \
static int cctki_vi_psixx = -100; \
if (cctki_vi_psixx == -100) cctki_vi_psixx = CCTK_VarIndex("STATICCONFORMAL::psixx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psixx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psixx)); \
static int cctki_vi_psixy = -100; \
if (cctki_vi_psixy == -100) cctki_vi_psixy = CCTK_VarIndex("STATICCONFORMAL::psixy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psixy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psixy)); \
static int cctki_vi_psixz = -100; \
if (cctki_vi_psixz == -100) cctki_vi_psixz = CCTK_VarIndex("STATICCONFORMAL::psixz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psixz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psixz)); \
static int cctki_vi_psiy = -100; \
if (cctki_vi_psiy == -100) cctki_vi_psiy = CCTK_VarIndex("STATICCONFORMAL::psiy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiy)); \
static int cctki_vi_psiyy = -100; \
if (cctki_vi_psiyy == -100) cctki_vi_psiyy = CCTK_VarIndex("STATICCONFORMAL::psiyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiyy)); \
static int cctki_vi_psiyz = -100; \
if (cctki_vi_psiyz == -100) cctki_vi_psiyz = CCTK_VarIndex("STATICCONFORMAL::psiyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiyz)); \
static int cctki_vi_psiz = -100; \
if (cctki_vi_psiz == -100) cctki_vi_psiz = CCTK_VarIndex("STATICCONFORMAL::psiz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psiz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psiz)); \
static int cctki_vi_psizz = -100; \
if (cctki_vi_psizz == -100) cctki_vi_psizz = CCTK_VarIndex("STATICCONFORMAL::psizz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, psizz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_psizz)); \
static int cctki_vi_r = -100; \
if (cctki_vi_r == -100) cctki_vi_r = CCTK_VarIndex("GRID::r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_r)); \
static int cctki_vi_shift_state = -100; \
if (cctki_vi_shift_state == -100) cctki_vi_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, shift_state, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_shift_state)); \
static int cctki_vi_space_mask = -100; \
if (cctki_vi_space_mask == -100) cctki_vi_space_mask = CCTK_VarIndex("SPACEMASK::space_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, space_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_space_mask)); \
static int cctki_vi_x = -100; \
if (cctki_vi_x == -100) cctki_vi_x = CCTK_VarIndex("GRID::x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x)); \
static int cctki_vi_y = -100; \
if (cctki_vi_y == -100) cctki_vi_y = CCTK_VarIndex("GRID::y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_y)); \
static int cctki_vi_z = -100; \
if (cctki_vi_z == -100) cctki_vi_z = CCTK_VarIndex("GRID::z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_z));

#define DECLARE_EHFINDER_PUBLIC_C2F \
static int CCTKARGNUM_active_slicing_handle = -1; \
static int CCTKGROUPNUM_slicing_flags = -1; \
static int CCTKARGNUM_alp = -1; \
static int CCTKGROUPNUM_lapse = -1; \
static int CCTKARGNUM_betax = -1; \
static int CCTKGROUPNUM_shift = -1; \
static int CCTKARGNUM_betay = -1; \
static int CCTKARGNUM_betaz = -1; \
static int CCTKARGNUM_coarse_dx = -1; \
static int CCTKGROUPNUM_gridspacings = -1; \
static int CCTKARGNUM_coarse_dy = -1; \
static int CCTKARGNUM_coarse_dz = -1; \
static int CCTKARGNUM_conformal_state = -1; \
static int CCTKGROUPNUM_conformal_state = -1; \
static int CCTKARGNUM_dtalp = -1; \
static int CCTKGROUPNUM_dtlapse = -1; \
static int CCTKARGNUM_dtbetax = -1; \
static int CCTKGROUPNUM_dtshift = -1; \
static int CCTKARGNUM_dtbetay = -1; \
static int CCTKARGNUM_dtbetaz = -1; \
static int CCTKARGNUM_dtlapse_state = -1; \
static int CCTKGROUPNUM_dtlapse_state = -1; \
static int CCTKARGNUM_dtshift_state = -1; \
static int CCTKGROUPNUM_dtshift_state = -1; \
static int CCTKARGNUM_emask = -1; \
static int CCTKGROUPNUM_mask = -1; \
static int CCTKARGNUM_gxx = -1; \
static int CCTKGROUPNUM_metric = -1; \
static int CCTKARGNUM_gxy = -1; \
static int CCTKARGNUM_gxz = -1; \
static int CCTKARGNUM_gyy = -1; \
static int CCTKARGNUM_gyz = -1; \
static int CCTKARGNUM_gzz = -1; \
static int CCTKARGNUM_kxx = -1; \
static int CCTKGROUPNUM_curv = -1; \
static int CCTKARGNUM_kxy = -1; \
static int CCTKARGNUM_kxz = -1; \
static int CCTKARGNUM_kyy = -1; \
static int CCTKARGNUM_kyz = -1; \
static int CCTKARGNUM_kzz = -1; \
static int CCTKARGNUM_psi = -1; \
static int CCTKGROUPNUM_confac = -1; \
static int CCTKARGNUM_psix = -1; \
static int CCTKGROUPNUM_confac_1derivs = -1; \
static int CCTKARGNUM_psixx = -1; \
static int CCTKGROUPNUM_confac_2derivs = -1; \
static int CCTKARGNUM_psixy = -1; \
static int CCTKARGNUM_psixz = -1; \
static int CCTKARGNUM_psiy = -1; \
static int CCTKARGNUM_psiyy = -1; \
static int CCTKARGNUM_psiyz = -1; \
static int CCTKARGNUM_psiz = -1; \
static int CCTKARGNUM_psizz = -1; \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_coordinates = -1; \
static int CCTKARGNUM_shift_state = -1; \
static int CCTKGROUPNUM_shift_state = -1; \
static int CCTKARGNUM_space_mask = -1; \
static int CCTKGROUPNUM_space_mask_group = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_z = -1;

#define INITIALISE_EHFINDER_PUBLIC_C2F \
if(CCTKARGNUM_active_slicing_handle == -1) CCTKARGNUM_active_slicing_handle = CCTK_VarIndex("COORDGAUGE::active_slicing_handle"); \
if(CCTKGROUPNUM_slicing_flags == -1) CCTKGROUPNUM_slicing_flags = CCTK_GroupIndex("COORDGAUGE::slicing_flags"); \
if(CCTKARGNUM_alp == -1) CCTKARGNUM_alp = CCTK_VarIndex("ADMBASE::alp"); \
if(CCTKGROUPNUM_lapse == -1) CCTKGROUPNUM_lapse = CCTK_GroupIndex("ADMBASE::lapse"); \
if(CCTKARGNUM_betax == -1) CCTKARGNUM_betax = CCTK_VarIndex("ADMBASE::betax"); \
if(CCTKGROUPNUM_shift == -1) CCTKGROUPNUM_shift = CCTK_GroupIndex("ADMBASE::shift"); \
if(CCTKARGNUM_betay == -1) CCTKARGNUM_betay = CCTK_VarIndex("ADMBASE::betay"); \
if(CCTKARGNUM_betaz == -1) CCTKARGNUM_betaz = CCTK_VarIndex("ADMBASE::betaz"); \
if(CCTKARGNUM_coarse_dx == -1) CCTKARGNUM_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
if(CCTKGROUPNUM_gridspacings == -1) CCTKGROUPNUM_gridspacings = CCTK_GroupIndex("GRID::gridspacings"); \
if(CCTKARGNUM_coarse_dy == -1) CCTKARGNUM_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
if(CCTKARGNUM_coarse_dz == -1) CCTKARGNUM_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
if(CCTKARGNUM_conformal_state == -1) CCTKARGNUM_conformal_state = CCTK_VarIndex("STATICCONFORMAL::conformal_state"); \
if(CCTKGROUPNUM_conformal_state == -1) CCTKGROUPNUM_conformal_state = CCTK_GroupIndex("STATICCONFORMAL::conformal_state"); \
if(CCTKARGNUM_dtalp == -1) CCTKARGNUM_dtalp = CCTK_VarIndex("ADMBASE::dtalp"); \
if(CCTKGROUPNUM_dtlapse == -1) CCTKGROUPNUM_dtlapse = CCTK_GroupIndex("ADMBASE::dtlapse"); \
if(CCTKARGNUM_dtbetax == -1) CCTKARGNUM_dtbetax = CCTK_VarIndex("ADMBASE::dtbetax"); \
if(CCTKGROUPNUM_dtshift == -1) CCTKGROUPNUM_dtshift = CCTK_GroupIndex("ADMBASE::dtshift"); \
if(CCTKARGNUM_dtbetay == -1) CCTKARGNUM_dtbetay = CCTK_VarIndex("ADMBASE::dtbetay"); \
if(CCTKARGNUM_dtbetaz == -1) CCTKARGNUM_dtbetaz = CCTK_VarIndex("ADMBASE::dtbetaz"); \
if(CCTKARGNUM_dtlapse_state == -1) CCTKARGNUM_dtlapse_state = CCTK_VarIndex("ADMBASE::dtlapse_state"); \
if(CCTKGROUPNUM_dtlapse_state == -1) CCTKGROUPNUM_dtlapse_state = CCTK_GroupIndex("ADMBASE::dtlapse_state"); \
if(CCTKARGNUM_dtshift_state == -1) CCTKARGNUM_dtshift_state = CCTK_VarIndex("ADMBASE::dtshift_state"); \
if(CCTKGROUPNUM_dtshift_state == -1) CCTKGROUPNUM_dtshift_state = CCTK_GroupIndex("ADMBASE::dtshift_state"); \
if(CCTKARGNUM_emask == -1) CCTKARGNUM_emask = CCTK_VarIndex("SPACEMASK::emask"); \
if(CCTKGROUPNUM_mask == -1) CCTKGROUPNUM_mask = CCTK_GroupIndex("SPACEMASK::mask"); \
if(CCTKARGNUM_gxx == -1) CCTKARGNUM_gxx = CCTK_VarIndex("ADMBASE::gxx"); \
if(CCTKGROUPNUM_metric == -1) CCTKGROUPNUM_metric = CCTK_GroupIndex("ADMBASE::metric"); \
if(CCTKARGNUM_gxy == -1) CCTKARGNUM_gxy = CCTK_VarIndex("ADMBASE::gxy"); \
if(CCTKARGNUM_gxz == -1) CCTKARGNUM_gxz = CCTK_VarIndex("ADMBASE::gxz"); \
if(CCTKARGNUM_gyy == -1) CCTKARGNUM_gyy = CCTK_VarIndex("ADMBASE::gyy"); \
if(CCTKARGNUM_gyz == -1) CCTKARGNUM_gyz = CCTK_VarIndex("ADMBASE::gyz"); \
if(CCTKARGNUM_gzz == -1) CCTKARGNUM_gzz = CCTK_VarIndex("ADMBASE::gzz"); \
if(CCTKARGNUM_kxx == -1) CCTKARGNUM_kxx = CCTK_VarIndex("ADMBASE::kxx"); \
if(CCTKGROUPNUM_curv == -1) CCTKGROUPNUM_curv = CCTK_GroupIndex("ADMBASE::curv"); \
if(CCTKARGNUM_kxy == -1) CCTKARGNUM_kxy = CCTK_VarIndex("ADMBASE::kxy"); \
if(CCTKARGNUM_kxz == -1) CCTKARGNUM_kxz = CCTK_VarIndex("ADMBASE::kxz"); \
if(CCTKARGNUM_kyy == -1) CCTKARGNUM_kyy = CCTK_VarIndex("ADMBASE::kyy"); \
if(CCTKARGNUM_kyz == -1) CCTKARGNUM_kyz = CCTK_VarIndex("ADMBASE::kyz"); \
if(CCTKARGNUM_kzz == -1) CCTKARGNUM_kzz = CCTK_VarIndex("ADMBASE::kzz"); \
if(CCTKARGNUM_psi == -1) CCTKARGNUM_psi = CCTK_VarIndex("STATICCONFORMAL::psi"); \
if(CCTKGROUPNUM_confac == -1) CCTKGROUPNUM_confac = CCTK_GroupIndex("STATICCONFORMAL::confac"); \
if(CCTKARGNUM_psix == -1) CCTKARGNUM_psix = CCTK_VarIndex("STATICCONFORMAL::psix"); \
if(CCTKGROUPNUM_confac_1derivs == -1) CCTKGROUPNUM_confac_1derivs = CCTK_GroupIndex("STATICCONFORMAL::confac_1derivs"); \
if(CCTKARGNUM_psixx == -1) CCTKARGNUM_psixx = CCTK_VarIndex("STATICCONFORMAL::psixx"); \
if(CCTKGROUPNUM_confac_2derivs == -1) CCTKGROUPNUM_confac_2derivs = CCTK_GroupIndex("STATICCONFORMAL::confac_2derivs"); \
if(CCTKARGNUM_psixy == -1) CCTKARGNUM_psixy = CCTK_VarIndex("STATICCONFORMAL::psixy"); \
if(CCTKARGNUM_psixz == -1) CCTKARGNUM_psixz = CCTK_VarIndex("STATICCONFORMAL::psixz"); \
if(CCTKARGNUM_psiy == -1) CCTKARGNUM_psiy = CCTK_VarIndex("STATICCONFORMAL::psiy"); \
if(CCTKARGNUM_psiyy == -1) CCTKARGNUM_psiyy = CCTK_VarIndex("STATICCONFORMAL::psiyy"); \
if(CCTKARGNUM_psiyz == -1) CCTKARGNUM_psiyz = CCTK_VarIndex("STATICCONFORMAL::psiyz"); \
if(CCTKARGNUM_psiz == -1) CCTKARGNUM_psiz = CCTK_VarIndex("STATICCONFORMAL::psiz"); \
if(CCTKARGNUM_psizz == -1) CCTKARGNUM_psizz = CCTK_VarIndex("STATICCONFORMAL::psizz"); \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("GRID::r"); \
if(CCTKGROUPNUM_coordinates == -1) CCTKGROUPNUM_coordinates = CCTK_GroupIndex("GRID::coordinates"); \
if(CCTKARGNUM_shift_state == -1) CCTKARGNUM_shift_state = CCTK_VarIndex("ADMBASE::shift_state"); \
if(CCTKGROUPNUM_shift_state == -1) CCTKGROUPNUM_shift_state = CCTK_GroupIndex("ADMBASE::shift_state"); \
if(CCTKARGNUM_space_mask == -1) CCTKARGNUM_space_mask = CCTK_VarIndex("SPACEMASK::space_mask"); \
if(CCTKGROUPNUM_space_mask_group == -1) CCTKGROUPNUM_space_mask_group = CCTK_GroupIndex("SPACEMASK::space_mask_group"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("GRID::x"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("GRID::y"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("GRID::z");

#define EHFINDER_PUBLIC_C2F_PROTO \
CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_EHFINDER_PUBLIC_C2F(GH) \
(CCTK_INT *)(PASS_REFERENCE(active_slicing_handle, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(alp, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(betaz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dz, 0)),\
(CCTK_INT *)(PASS_REFERENCE(conformal_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtalp, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetax, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetay, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(dtbetaz, 2)),\
(CCTK_INT *)(PASS_REFERENCE(dtlapse_state, 0)),\
(CCTK_INT *)(PASS_REFERENCE(dtshift_state, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(emask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(gzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(kzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(psi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psix, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psixx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psixy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psixz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psiz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(psizz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_INT *)(PASS_REFERENCE(shift_state, 0)),\
(CCTK_INT *)(PASS_REFERENCE(space_mask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0))

#endif /* CCODE */

#ifdef FCODE
#define EHFINDER_FARGUMENTS _CCTK_FARGUMENTS, EHFINDER_PRIVATE_FARGUMENTS, EHFINDER_PUBLIC_FARGUMENTS

#define DECLARE_EHFINDER_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_EHFINDER_PRIVATE_FARGUMENTS DECLARE_EHFINDER_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_EHFINDER_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_EHFINDER_PRIVATE_CARGUMENTS DECLARE_EHFINDER_PUBLIC_CARGUMENTS

#define EHFINDER_C2F_PROTO _CCTK_C2F_PROTO, EHFINDER_PRIVATE_C2F_PROTO, EHFINDER_PUBLIC_C2F_PROTO

#define PASS_EHFINDER_C2F(GH) _PASS_CCTK_C2F(GH), PASS_EHFINDER_PRIVATE_C2F(GH), PASS_EHFINDER_PUBLIC_C2F(GH)

#define DECLARE_EHFINDER_C2F _DECLARE_CCTK_C2F DECLARE_EHFINDER_PRIVATE_C2F DECLARE_EHFINDER_PUBLIC_C2F

#define INITIALISE_EHFINDER_C2F _INITIALISE_CCTK_C2F INITIALISE_EHFINDER_PRIVATE_C2F INITIALISE_EHFINDER_PUBLIC_C2F

#define EHFINDER_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
