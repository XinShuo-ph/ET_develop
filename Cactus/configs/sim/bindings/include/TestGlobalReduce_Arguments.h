/*@@
   @header  TestGlobalReduce_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn TestGlobalReduce
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_TESTGLOBALREDUCE_PRIVATE_FARGUMENTS \


#define TESTGLOBALREDUCE_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTGLOBALREDUCE_PRIVATE_CARGUMENTS \


#define DECLARE_TESTGLOBALREDUCE_PRIVATE_C2F \


#define INITIALISE_TESTGLOBALREDUCE_PRIVATE_C2F \


#define TESTGLOBALREDUCE_PRIVATE_C2F_PROTO \


#define PASS_TESTGLOBALREDUCE_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_TESTGLOBALREDUCE_PROTECTED_FARGUMENTS \


#define TESTGLOBALREDUCE_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTGLOBALREDUCE_PROTECTED_CARGUMENTS \


#define DECLARE_TESTGLOBALREDUCE_PROTECTED_C2F \


#define INITIALISE_TESTGLOBALREDUCE_PROTECTED_C2F \


#define TESTGLOBALREDUCE_PROTECTED_C2F_PROTO \


#define PASS_TESTGLOBALREDUCE_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_TESTGLOBALREDUCE_PUBLIC_FARGUMENTS \
INTEGER X0int_3d&&\
INTEGER X0real_3d&&\
INTEGER X0weight_group&&\
INTEGER X1int_3d&&\
INTEGER X1real_3d&&\
INTEGER X1weight_group&&\
INTEGER X2int_3d&&\
INTEGER X2real_3d&&\
INTEGER X2weight_group&&\
CCTK_DECLARE(CCTK_REAL,coarse_dx,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dy,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dz,)&&\
CCTK_DECLARE(CCTK_REAL,gf_max,)&&\
CCTK_DECLARE(CCTK_REAL,gf_norm1,)&&\
CCTK_DECLARE(CCTK_REAL,gf_norm2,)&&\
CCTK_DECLARE(CCTK_REAL,gf_norm3,)&&\
CCTK_DECLARE(CCTK_REAL,gf_norm4,)&&\
CCTK_DECLARE(CCTK_REAL,gf_sum,)&&\
CCTK_DECLARE(CCTK_INT,grid_int,(X0int_3d,X1int_3d,X2int_3d))&&\
CCTK_DECLARE(CCTK_REAL,grid_real,(X0real_3d,X1real_3d,X2real_3d))&&\
CCTK_DECLARE(CCTK_INT,int_avg_3D,)&&\
CCTK_DECLARE(CCTK_INT,int_max_3D,)&&\
CCTK_DECLARE(CCTK_INT,int_min_3D,)&&\
CCTK_DECLARE(CCTK_INT,int_sum_3D,)&&\
CCTK_DECLARE(CCTK_REAL,max_value,)&&\
CCTK_DECLARE(CCTK_REAL,num_to_reduce,)&&\
CCTK_DECLARE(CCTK_REAL,r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,real_avg_3D,)&&\
CCTK_DECLARE(CCTK_REAL,real_max_3D,)&&\
CCTK_DECLARE(CCTK_REAL,real_min_3D,)&&\
CCTK_DECLARE(CCTK_REAL,real_sum_3D,)&&\
CCTK_DECLARE(CCTK_REAL,real_sum_gf,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,real_test_gf,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,sum_value,)&&\
CCTK_DECLARE(CCTK_REAL,weight,(X0weight_group,X1weight_group,X2weight_group))&&\
CCTK_DECLARE(CCTK_INT,weighted_int_avg,)&&\
CCTK_DECLARE(CCTK_INT,weighted_int_max,)&&\
CCTK_DECLARE(CCTK_INT,weighted_int_min,)&&\
CCTK_DECLARE(CCTK_INT,weighted_int_sum,)&&\
CCTK_DECLARE(CCTK_REAL,weighted_real_avg,)&&\
CCTK_DECLARE(CCTK_REAL,weighted_real_max,)&&\
CCTK_DECLARE(CCTK_REAL,weighted_real_min,)&&\
CCTK_DECLARE(CCTK_REAL,weighted_real_sum,)&&\
CCTK_DECLARE(CCTK_REAL,x,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,y,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,z,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define TESTGLOBALREDUCE_PUBLIC_FARGUMENTS \
X0int_3d,X0real_3d,X0weight_group,X1int_3d,X1real_3d,X1weight_group,X2int_3d,X2real_3d,X2weight_group,coarse_dx,coarse_dy,coarse_dz,gf_max,gf_norm1,gf_norm2,gf_norm3,gf_norm4,gf_sum,grid_int,grid_real,int_avg_3D,int_max_3D,int_min_3D,int_sum_3D,max_value,num_to_reduce,r,real_avg_3D,real_max_3D,real_min_3D,real_sum_3D,real_sum_gf,real_test_gf,sum_value,weight,weighted_int_avg,weighted_int_max,weighted_int_min,weighted_int_sum,weighted_real_avg,weighted_real_max,weighted_real_min,weighted_real_sum,x,y,z

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTGLOBALREDUCE_PUBLIC_CARGUMENTS \
static int cctki_vi_coarse_dx = -100; \
if (cctki_vi_coarse_dx == -100) cctki_vi_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dx)); \
static int cctki_vi_coarse_dy = -100; \
if (cctki_vi_coarse_dy == -100) cctki_vi_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dy)); \
static int cctki_vi_coarse_dz = -100; \
if (cctki_vi_coarse_dz == -100) cctki_vi_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dz)); \
static int cctki_vi_gf_max = -100; \
if (cctki_vi_gf_max == -100) cctki_vi_gf_max = CCTK_VarIndex("testglobalreduce::gf_max"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf_max, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf_max)); \
static int cctki_vi_gf_norm1 = -100; \
if (cctki_vi_gf_norm1 == -100) cctki_vi_gf_norm1 = CCTK_VarIndex("testglobalreduce::gf_norm1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf_norm1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf_norm1)); \
static int cctki_vi_gf_norm2 = -100; \
if (cctki_vi_gf_norm2 == -100) cctki_vi_gf_norm2 = CCTK_VarIndex("testglobalreduce::gf_norm2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf_norm2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf_norm2)); \
static int cctki_vi_gf_norm3 = -100; \
if (cctki_vi_gf_norm3 == -100) cctki_vi_gf_norm3 = CCTK_VarIndex("testglobalreduce::gf_norm3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf_norm3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf_norm3)); \
static int cctki_vi_gf_norm4 = -100; \
if (cctki_vi_gf_norm4 == -100) cctki_vi_gf_norm4 = CCTK_VarIndex("testglobalreduce::gf_norm4"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf_norm4, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf_norm4)); \
static int cctki_vi_gf_sum = -100; \
if (cctki_vi_gf_sum == -100) cctki_vi_gf_sum = CCTK_VarIndex("testglobalreduce::gf_sum"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, gf_sum, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_gf_sum)); \
static int cctki_vi_grid_int = -100; \
if (cctki_vi_grid_int == -100) cctki_vi_grid_int = CCTK_VarIndex("testglobalreduce::grid_int"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, grid_int, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_grid_int)); \
static int cctki_vi_grid_real = -100; \
if (cctki_vi_grid_real == -100) cctki_vi_grid_real = CCTK_VarIndex("testglobalreduce::grid_real"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, grid_real, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_grid_real)); \
static int cctki_vi_int_avg_3D = -100; \
if (cctki_vi_int_avg_3D == -100) cctki_vi_int_avg_3D = CCTK_VarIndex("testglobalreduce::int_avg_3D"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, int_avg_3D, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_int_avg_3D)); \
static int cctki_vi_int_max_3D = -100; \
if (cctki_vi_int_max_3D == -100) cctki_vi_int_max_3D = CCTK_VarIndex("testglobalreduce::int_max_3D"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, int_max_3D, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_int_max_3D)); \
static int cctki_vi_int_min_3D = -100; \
if (cctki_vi_int_min_3D == -100) cctki_vi_int_min_3D = CCTK_VarIndex("testglobalreduce::int_min_3D"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, int_min_3D, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_int_min_3D)); \
static int cctki_vi_int_sum_3D = -100; \
if (cctki_vi_int_sum_3D == -100) cctki_vi_int_sum_3D = CCTK_VarIndex("testglobalreduce::int_sum_3D"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, int_sum_3D, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_int_sum_3D)); \
static int cctki_vi_max_value = -100; \
if (cctki_vi_max_value == -100) cctki_vi_max_value = CCTK_VarIndex("testglobalreduce::max_value"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, max_value, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_max_value)); \
static int cctki_vi_num_to_reduce = -100; \
if (cctki_vi_num_to_reduce == -100) cctki_vi_num_to_reduce = CCTK_VarIndex("testglobalreduce::num_to_reduce"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, num_to_reduce, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_num_to_reduce)); \
static int cctki_vi_r = -100; \
if (cctki_vi_r == -100) cctki_vi_r = CCTK_VarIndex("GRID::r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_r)); \
static int cctki_vi_real_avg_3D = -100; \
if (cctki_vi_real_avg_3D == -100) cctki_vi_real_avg_3D = CCTK_VarIndex("testglobalreduce::real_avg_3D"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, real_avg_3D, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_real_avg_3D)); \
static int cctki_vi_real_max_3D = -100; \
if (cctki_vi_real_max_3D == -100) cctki_vi_real_max_3D = CCTK_VarIndex("testglobalreduce::real_max_3D"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, real_max_3D, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_real_max_3D)); \
static int cctki_vi_real_min_3D = -100; \
if (cctki_vi_real_min_3D == -100) cctki_vi_real_min_3D = CCTK_VarIndex("testglobalreduce::real_min_3D"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, real_min_3D, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_real_min_3D)); \
static int cctki_vi_real_sum_3D = -100; \
if (cctki_vi_real_sum_3D == -100) cctki_vi_real_sum_3D = CCTK_VarIndex("testglobalreduce::real_sum_3D"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, real_sum_3D, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_real_sum_3D)); \
static int cctki_vi_real_sum_gf = -100; \
if (cctki_vi_real_sum_gf == -100) cctki_vi_real_sum_gf = CCTK_VarIndex("testglobalreduce::real_sum_gf"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, real_sum_gf, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_real_sum_gf)); \
static int cctki_vi_real_test_gf = -100; \
if (cctki_vi_real_test_gf == -100) cctki_vi_real_test_gf = CCTK_VarIndex("testglobalreduce::real_test_gf"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, real_test_gf, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_real_test_gf)); \
static int cctki_vi_sum_value = -100; \
if (cctki_vi_sum_value == -100) cctki_vi_sum_value = CCTK_VarIndex("testglobalreduce::sum_value"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, sum_value, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sum_value)); \
static int cctki_vi_weight = -100; \
if (cctki_vi_weight == -100) cctki_vi_weight = CCTK_VarIndex("testglobalreduce::weight"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, weight, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weight)); \
static int cctki_vi_weighted_int_avg = -100; \
if (cctki_vi_weighted_int_avg == -100) cctki_vi_weighted_int_avg = CCTK_VarIndex("testglobalreduce::weighted_int_avg"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, weighted_int_avg, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weighted_int_avg)); \
static int cctki_vi_weighted_int_max = -100; \
if (cctki_vi_weighted_int_max == -100) cctki_vi_weighted_int_max = CCTK_VarIndex("testglobalreduce::weighted_int_max"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, weighted_int_max, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weighted_int_max)); \
static int cctki_vi_weighted_int_min = -100; \
if (cctki_vi_weighted_int_min == -100) cctki_vi_weighted_int_min = CCTK_VarIndex("testglobalreduce::weighted_int_min"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, weighted_int_min, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weighted_int_min)); \
static int cctki_vi_weighted_int_sum = -100; \
if (cctki_vi_weighted_int_sum == -100) cctki_vi_weighted_int_sum = CCTK_VarIndex("testglobalreduce::weighted_int_sum"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, weighted_int_sum, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weighted_int_sum)); \
static int cctki_vi_weighted_real_avg = -100; \
if (cctki_vi_weighted_real_avg == -100) cctki_vi_weighted_real_avg = CCTK_VarIndex("testglobalreduce::weighted_real_avg"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, weighted_real_avg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weighted_real_avg)); \
static int cctki_vi_weighted_real_max = -100; \
if (cctki_vi_weighted_real_max == -100) cctki_vi_weighted_real_max = CCTK_VarIndex("testglobalreduce::weighted_real_max"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, weighted_real_max, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weighted_real_max)); \
static int cctki_vi_weighted_real_min = -100; \
if (cctki_vi_weighted_real_min == -100) cctki_vi_weighted_real_min = CCTK_VarIndex("testglobalreduce::weighted_real_min"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, weighted_real_min, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weighted_real_min)); \
static int cctki_vi_weighted_real_sum = -100; \
if (cctki_vi_weighted_real_sum == -100) cctki_vi_weighted_real_sum = CCTK_VarIndex("testglobalreduce::weighted_real_sum"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, weighted_real_sum, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_weighted_real_sum)); \
static int cctki_vi_x = -100; \
if (cctki_vi_x == -100) cctki_vi_x = CCTK_VarIndex("GRID::x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x)); \
static int cctki_vi_y = -100; \
if (cctki_vi_y == -100) cctki_vi_y = CCTK_VarIndex("GRID::y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_y)); \
static int cctki_vi_z = -100; \
if (cctki_vi_z == -100) cctki_vi_z = CCTK_VarIndex("GRID::z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_z));

#define DECLARE_TESTGLOBALREDUCE_PUBLIC_C2F \
static int CCTKARGNUM_coarse_dx = -1; \
static int CCTKGROUPNUM_gridspacings = -1; \
static int CCTKARGNUM_coarse_dy = -1; \
static int CCTKARGNUM_coarse_dz = -1; \
static int CCTKARGNUM_gf_max = -1; \
static int CCTKGROUPNUM_gf_vals = -1; \
static int CCTKARGNUM_gf_norm1 = -1; \
static int CCTKARGNUM_gf_norm2 = -1; \
static int CCTKARGNUM_gf_norm3 = -1; \
static int CCTKARGNUM_gf_norm4 = -1; \
static int CCTKARGNUM_gf_sum = -1; \
static int CCTKARGNUM_grid_int = -1; \
static int CCTKGROUPNUM_int_3d = -1; \
static int CCTKARGNUM_grid_real = -1; \
static int CCTKGROUPNUM_real_3d = -1; \
static int CCTKARGNUM_int_avg_3D = -1; \
static int CCTKGROUPNUM_int_vals = -1; \
static int CCTKARGNUM_int_max_3D = -1; \
static int CCTKARGNUM_int_min_3D = -1; \
static int CCTKARGNUM_int_sum_3D = -1; \
static int CCTKARGNUM_max_value = -1; \
static int CCTKGROUPNUM_scalar_reduction = -1; \
static int CCTKARGNUM_num_to_reduce = -1; \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_coordinates = -1; \
static int CCTKARGNUM_real_avg_3D = -1; \
static int CCTKGROUPNUM_real_vals = -1; \
static int CCTKARGNUM_real_max_3D = -1; \
static int CCTKARGNUM_real_min_3D = -1; \
static int CCTKARGNUM_real_sum_3D = -1; \
static int CCTKARGNUM_real_sum_gf = -1; \
static int CCTKGROUPNUM_real_gf = -1; \
static int CCTKARGNUM_real_test_gf = -1; \
static int CCTKARGNUM_sum_value = -1; \
static int CCTKARGNUM_weight = -1; \
static int CCTKGROUPNUM_weight_group = -1; \
static int CCTKARGNUM_weighted_int_avg = -1; \
static int CCTKGROUPNUM_weighted_int_vals = -1; \
static int CCTKARGNUM_weighted_int_max = -1; \
static int CCTKARGNUM_weighted_int_min = -1; \
static int CCTKARGNUM_weighted_int_sum = -1; \
static int CCTKARGNUM_weighted_real_avg = -1; \
static int CCTKGROUPNUM_weighted_real_vals = -1; \
static int CCTKARGNUM_weighted_real_max = -1; \
static int CCTKARGNUM_weighted_real_min = -1; \
static int CCTKARGNUM_weighted_real_sum = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_z = -1;

#define INITIALISE_TESTGLOBALREDUCE_PUBLIC_C2F \
if(CCTKARGNUM_coarse_dx == -1) CCTKARGNUM_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
if(CCTKGROUPNUM_gridspacings == -1) CCTKGROUPNUM_gridspacings = CCTK_GroupIndex("GRID::gridspacings"); \
if(CCTKARGNUM_coarse_dy == -1) CCTKARGNUM_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
if(CCTKARGNUM_coarse_dz == -1) CCTKARGNUM_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
if(CCTKARGNUM_gf_max == -1) CCTKARGNUM_gf_max = CCTK_VarIndex("testglobalreduce::gf_max"); \
if(CCTKGROUPNUM_gf_vals == -1) CCTKGROUPNUM_gf_vals = CCTK_GroupIndex("testglobalreduce::gf_vals"); \
if(CCTKARGNUM_gf_norm1 == -1) CCTKARGNUM_gf_norm1 = CCTK_VarIndex("testglobalreduce::gf_norm1"); \
if(CCTKARGNUM_gf_norm2 == -1) CCTKARGNUM_gf_norm2 = CCTK_VarIndex("testglobalreduce::gf_norm2"); \
if(CCTKARGNUM_gf_norm3 == -1) CCTKARGNUM_gf_norm3 = CCTK_VarIndex("testglobalreduce::gf_norm3"); \
if(CCTKARGNUM_gf_norm4 == -1) CCTKARGNUM_gf_norm4 = CCTK_VarIndex("testglobalreduce::gf_norm4"); \
if(CCTKARGNUM_gf_sum == -1) CCTKARGNUM_gf_sum = CCTK_VarIndex("testglobalreduce::gf_sum"); \
if(CCTKARGNUM_grid_int == -1) CCTKARGNUM_grid_int = CCTK_VarIndex("testglobalreduce::grid_int"); \
if(CCTKGROUPNUM_int_3d == -1) CCTKGROUPNUM_int_3d = CCTK_GroupIndex("testglobalreduce::int_3d"); \
if(CCTKARGNUM_grid_real == -1) CCTKARGNUM_grid_real = CCTK_VarIndex("testglobalreduce::grid_real"); \
if(CCTKGROUPNUM_real_3d == -1) CCTKGROUPNUM_real_3d = CCTK_GroupIndex("testglobalreduce::real_3d"); \
if(CCTKARGNUM_int_avg_3D == -1) CCTKARGNUM_int_avg_3D = CCTK_VarIndex("testglobalreduce::int_avg_3D"); \
if(CCTKGROUPNUM_int_vals == -1) CCTKGROUPNUM_int_vals = CCTK_GroupIndex("testglobalreduce::int_vals"); \
if(CCTKARGNUM_int_max_3D == -1) CCTKARGNUM_int_max_3D = CCTK_VarIndex("testglobalreduce::int_max_3D"); \
if(CCTKARGNUM_int_min_3D == -1) CCTKARGNUM_int_min_3D = CCTK_VarIndex("testglobalreduce::int_min_3D"); \
if(CCTKARGNUM_int_sum_3D == -1) CCTKARGNUM_int_sum_3D = CCTK_VarIndex("testglobalreduce::int_sum_3D"); \
if(CCTKARGNUM_max_value == -1) CCTKARGNUM_max_value = CCTK_VarIndex("testglobalreduce::max_value"); \
if(CCTKGROUPNUM_scalar_reduction == -1) CCTKGROUPNUM_scalar_reduction = CCTK_GroupIndex("testglobalreduce::scalar_reduction"); \
if(CCTKARGNUM_num_to_reduce == -1) CCTKARGNUM_num_to_reduce = CCTK_VarIndex("testglobalreduce::num_to_reduce"); \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("GRID::r"); \
if(CCTKGROUPNUM_coordinates == -1) CCTKGROUPNUM_coordinates = CCTK_GroupIndex("GRID::coordinates"); \
if(CCTKARGNUM_real_avg_3D == -1) CCTKARGNUM_real_avg_3D = CCTK_VarIndex("testglobalreduce::real_avg_3D"); \
if(CCTKGROUPNUM_real_vals == -1) CCTKGROUPNUM_real_vals = CCTK_GroupIndex("testglobalreduce::real_vals"); \
if(CCTKARGNUM_real_max_3D == -1) CCTKARGNUM_real_max_3D = CCTK_VarIndex("testglobalreduce::real_max_3D"); \
if(CCTKARGNUM_real_min_3D == -1) CCTKARGNUM_real_min_3D = CCTK_VarIndex("testglobalreduce::real_min_3D"); \
if(CCTKARGNUM_real_sum_3D == -1) CCTKARGNUM_real_sum_3D = CCTK_VarIndex("testglobalreduce::real_sum_3D"); \
if(CCTKARGNUM_real_sum_gf == -1) CCTKARGNUM_real_sum_gf = CCTK_VarIndex("testglobalreduce::real_sum_gf"); \
if(CCTKGROUPNUM_real_gf == -1) CCTKGROUPNUM_real_gf = CCTK_GroupIndex("testglobalreduce::real_gf"); \
if(CCTKARGNUM_real_test_gf == -1) CCTKARGNUM_real_test_gf = CCTK_VarIndex("testglobalreduce::real_test_gf"); \
if(CCTKARGNUM_sum_value == -1) CCTKARGNUM_sum_value = CCTK_VarIndex("testglobalreduce::sum_value"); \
if(CCTKARGNUM_weight == -1) CCTKARGNUM_weight = CCTK_VarIndex("testglobalreduce::weight"); \
if(CCTKGROUPNUM_weight_group == -1) CCTKGROUPNUM_weight_group = CCTK_GroupIndex("testglobalreduce::weight_group"); \
if(CCTKARGNUM_weighted_int_avg == -1) CCTKARGNUM_weighted_int_avg = CCTK_VarIndex("testglobalreduce::weighted_int_avg"); \
if(CCTKGROUPNUM_weighted_int_vals == -1) CCTKGROUPNUM_weighted_int_vals = CCTK_GroupIndex("testglobalreduce::weighted_int_vals"); \
if(CCTKARGNUM_weighted_int_max == -1) CCTKARGNUM_weighted_int_max = CCTK_VarIndex("testglobalreduce::weighted_int_max"); \
if(CCTKARGNUM_weighted_int_min == -1) CCTKARGNUM_weighted_int_min = CCTK_VarIndex("testglobalreduce::weighted_int_min"); \
if(CCTKARGNUM_weighted_int_sum == -1) CCTKARGNUM_weighted_int_sum = CCTK_VarIndex("testglobalreduce::weighted_int_sum"); \
if(CCTKARGNUM_weighted_real_avg == -1) CCTKARGNUM_weighted_real_avg = CCTK_VarIndex("testglobalreduce::weighted_real_avg"); \
if(CCTKGROUPNUM_weighted_real_vals == -1) CCTKGROUPNUM_weighted_real_vals = CCTK_GroupIndex("testglobalreduce::weighted_real_vals"); \
if(CCTKARGNUM_weighted_real_max == -1) CCTKARGNUM_weighted_real_max = CCTK_VarIndex("testglobalreduce::weighted_real_max"); \
if(CCTKARGNUM_weighted_real_min == -1) CCTKARGNUM_weighted_real_min = CCTK_VarIndex("testglobalreduce::weighted_real_min"); \
if(CCTKARGNUM_weighted_real_sum == -1) CCTKARGNUM_weighted_real_sum = CCTK_VarIndex("testglobalreduce::weighted_real_sum"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("GRID::x"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("GRID::y"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("GRID::z");

#define TESTGLOBALREDUCE_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_TESTGLOBALREDUCE_PUBLIC_C2F(GH) \
PASS_GROUPSIZE(int_3d, 0),\
PASS_GROUPSIZE(real_3d, 0),\
PASS_GROUPSIZE(weight_group, 0),\
PASS_GROUPSIZE(int_3d, 1),\
PASS_GROUPSIZE(real_3d, 1),\
PASS_GROUPSIZE(weight_group, 1),\
PASS_GROUPSIZE(int_3d, 2),\
PASS_GROUPSIZE(real_3d, 2),\
PASS_GROUPSIZE(weight_group, 2),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf_max, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf_norm1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf_norm2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf_norm3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf_norm4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(gf_sum, 0)),\
(CCTK_INT *)(PASS_REFERENCE(grid_int, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(grid_real, 0)),\
(CCTK_INT *)(PASS_REFERENCE(int_avg_3D, 0)),\
(CCTK_INT *)(PASS_REFERENCE(int_max_3D, 0)),\
(CCTK_INT *)(PASS_REFERENCE(int_min_3D, 0)),\
(CCTK_INT *)(PASS_REFERENCE(int_sum_3D, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(max_value, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(num_to_reduce, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(real_avg_3D, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(real_max_3D, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(real_min_3D, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(real_sum_3D, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(real_sum_gf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(real_test_gf, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(sum_value, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(weight, 0)),\
(CCTK_INT *)(PASS_REFERENCE(weighted_int_avg, 0)),\
(CCTK_INT *)(PASS_REFERENCE(weighted_int_max, 0)),\
(CCTK_INT *)(PASS_REFERENCE(weighted_int_min, 0)),\
(CCTK_INT *)(PASS_REFERENCE(weighted_int_sum, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(weighted_real_avg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(weighted_real_max, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(weighted_real_min, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(weighted_real_sum, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0))

#endif /* CCODE */

#ifdef FCODE
#define TESTGLOBALREDUCE_FARGUMENTS _CCTK_FARGUMENTS, TESTGLOBALREDUCE_PUBLIC_FARGUMENTS

#define DECLARE_TESTGLOBALREDUCE_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_TESTGLOBALREDUCE_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_TESTGLOBALREDUCE_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_TESTGLOBALREDUCE_PUBLIC_CARGUMENTS

#define TESTGLOBALREDUCE_C2F_PROTO _CCTK_C2F_PROTO, TESTGLOBALREDUCE_PUBLIC_C2F_PROTO

#define PASS_TESTGLOBALREDUCE_C2F(GH) _PASS_CCTK_C2F(GH), PASS_TESTGLOBALREDUCE_PUBLIC_C2F(GH)

#define DECLARE_TESTGLOBALREDUCE_C2F _DECLARE_CCTK_C2F DECLARE_TESTGLOBALREDUCE_PUBLIC_C2F

#define INITIALISE_TESTGLOBALREDUCE_C2F _INITIALISE_CCTK_C2F INITIALISE_TESTGLOBALREDUCE_PUBLIC_C2F

#define TESTGLOBALREDUCE_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
