/*@@
   @header  WaveMoL_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn WaveMoL
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_WAVEMOL_PRIVATE_FARGUMENTS \


#define WAVEMOL_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WAVEMOL_PRIVATE_CARGUMENTS \


#define DECLARE_WAVEMOL_PRIVATE_C2F \


#define INITIALISE_WAVEMOL_PRIVATE_C2F \


#define WAVEMOL_PRIVATE_C2F_PROTO \


#define PASS_WAVEMOL_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_WAVEMOL_PROTECTED_FARGUMENTS \


#define WAVEMOL_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WAVEMOL_PROTECTED_CARGUMENTS \


#define DECLARE_WAVEMOL_PROTECTED_C2F \


#define INITIALISE_WAVEMOL_PROTECTED_C2F \


#define WAVEMOL_PROTECTED_C2F_PROTO \


#define PASS_WAVEMOL_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_WAVEMOL_PUBLIC_FARGUMENTS \
CCTK_DECLARE(CCTK_REAL,energy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phi_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phi_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phirhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phit,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phit_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phit_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phitrhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phix,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phix_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phix_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phixrhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phiy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phiy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phiy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phiyrhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phiz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phiz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phiz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,phizrhs,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define WAVEMOL_PUBLIC_FARGUMENTS \
energy,phi,phi_p,phi_p_p,phirhs,phit,phit_p,phit_p_p,phitrhs,phix,phix_p,phix_p_p,phixrhs,phiy,phiy_p,phiy_p_p,phiyrhs,phiz,phiz_p,phiz_p_p,phizrhs

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WAVEMOL_PUBLIC_CARGUMENTS \
static int cctki_vi_energy = -100; \
if (cctki_vi_energy == -100) cctki_vi_energy = CCTK_VarIndex("wavemol::energy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, energy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_energy)); \
static int cctki_vi_phi = -100; \
if (cctki_vi_phi == -100) cctki_vi_phi = CCTK_VarIndex("wavemol::phi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phi_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_phi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phi_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_phi)); \
static int cctki_vi_phirhs = -100; \
if (cctki_vi_phirhs == -100) cctki_vi_phirhs = CCTK_VarIndex("wavemol::phirhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phirhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phirhs)); \
static int cctki_vi_phit = -100; \
if (cctki_vi_phit == -100) cctki_vi_phit = CCTK_VarIndex("wavemol::phit"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phit, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phit_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_phit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phit_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_phit)); \
static int cctki_vi_phitrhs = -100; \
if (cctki_vi_phitrhs == -100) cctki_vi_phitrhs = CCTK_VarIndex("wavemol::phitrhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phitrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phitrhs)); \
static int cctki_vi_phix = -100; \
if (cctki_vi_phix == -100) cctki_vi_phix = CCTK_VarIndex("wavemol::phix"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phix, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phix)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phix_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_phix)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phix_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_phix)); \
static int cctki_vi_phixrhs = -100; \
if (cctki_vi_phixrhs == -100) cctki_vi_phixrhs = CCTK_VarIndex("wavemol::phixrhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phixrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phixrhs)); \
static int cctki_vi_phiy = -100; \
if (cctki_vi_phiy == -100) cctki_vi_phiy = CCTK_VarIndex("wavemol::phiy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phiy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phiy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phiy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_phiy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phiy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_phiy)); \
static int cctki_vi_phiyrhs = -100; \
if (cctki_vi_phiyrhs == -100) cctki_vi_phiyrhs = CCTK_VarIndex("wavemol::phiyrhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phiyrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phiyrhs)); \
static int cctki_vi_phiz = -100; \
if (cctki_vi_phiz == -100) cctki_vi_phiz = CCTK_VarIndex("wavemol::phiz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phiz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phiz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phiz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_phiz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phiz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_phiz)); \
static int cctki_vi_phizrhs = -100; \
if (cctki_vi_phizrhs == -100) cctki_vi_phizrhs = CCTK_VarIndex("wavemol::phizrhs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, phizrhs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_phizrhs));

#define DECLARE_WAVEMOL_PUBLIC_C2F \
static int CCTKARGNUM_energy = -1; \
static int CCTKGROUPNUM_energy = -1; \
static int CCTKARGNUM_phi = -1; \
static int CCTKGROUPNUM_scalarevolvemol_scalar = -1; \
static int CCTKARGNUM_phirhs = -1; \
static int CCTKGROUPNUM_scalarrhsmol_scalar = -1; \
static int CCTKARGNUM_phit = -1; \
static int CCTKARGNUM_phitrhs = -1; \
static int CCTKARGNUM_phix = -1; \
static int CCTKGROUPNUM_scalarevolvemol_vector = -1; \
static int CCTKARGNUM_phixrhs = -1; \
static int CCTKGROUPNUM_scalarrhsmol_vector = -1; \
static int CCTKARGNUM_phiy = -1; \
static int CCTKARGNUM_phiyrhs = -1; \
static int CCTKARGNUM_phiz = -1; \
static int CCTKARGNUM_phizrhs = -1;

#define INITIALISE_WAVEMOL_PUBLIC_C2F \
if(CCTKARGNUM_energy == -1) CCTKARGNUM_energy = CCTK_VarIndex("wavemol::energy"); \
if(CCTKGROUPNUM_energy == -1) CCTKGROUPNUM_energy = CCTK_GroupIndex("wavemol::energy"); \
if(CCTKARGNUM_phi == -1) CCTKARGNUM_phi = CCTK_VarIndex("wavemol::phi"); \
if(CCTKGROUPNUM_scalarevolvemol_scalar == -1) CCTKGROUPNUM_scalarevolvemol_scalar = CCTK_GroupIndex("wavemol::scalarevolvemol_scalar"); \
if(CCTKARGNUM_phirhs == -1) CCTKARGNUM_phirhs = CCTK_VarIndex("wavemol::phirhs"); \
if(CCTKGROUPNUM_scalarrhsmol_scalar == -1) CCTKGROUPNUM_scalarrhsmol_scalar = CCTK_GroupIndex("wavemol::scalarrhsmol_scalar"); \
if(CCTKARGNUM_phit == -1) CCTKARGNUM_phit = CCTK_VarIndex("wavemol::phit"); \
if(CCTKARGNUM_phitrhs == -1) CCTKARGNUM_phitrhs = CCTK_VarIndex("wavemol::phitrhs"); \
if(CCTKARGNUM_phix == -1) CCTKARGNUM_phix = CCTK_VarIndex("wavemol::phix"); \
if(CCTKGROUPNUM_scalarevolvemol_vector == -1) CCTKGROUPNUM_scalarevolvemol_vector = CCTK_GroupIndex("wavemol::scalarevolvemol_vector"); \
if(CCTKARGNUM_phixrhs == -1) CCTKARGNUM_phixrhs = CCTK_VarIndex("wavemol::phixrhs"); \
if(CCTKGROUPNUM_scalarrhsmol_vector == -1) CCTKGROUPNUM_scalarrhsmol_vector = CCTK_GroupIndex("wavemol::scalarrhsmol_vector"); \
if(CCTKARGNUM_phiy == -1) CCTKARGNUM_phiy = CCTK_VarIndex("wavemol::phiy"); \
if(CCTKARGNUM_phiyrhs == -1) CCTKARGNUM_phiyrhs = CCTK_VarIndex("wavemol::phiyrhs"); \
if(CCTKARGNUM_phiz == -1) CCTKARGNUM_phiz = CCTK_VarIndex("wavemol::phiz"); \
if(CCTKARGNUM_phizrhs == -1) CCTKARGNUM_phizrhs = CCTK_VarIndex("wavemol::phizrhs");

#define WAVEMOL_PUBLIC_C2F_PROTO \
CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_WAVEMOL_PUBLIC_C2F(GH) \
(CCTK_REAL *)(PASS_REFERENCE(energy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phirhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phit, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phit, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phit, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phitrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phix, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phix, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phix, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phixrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phiy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phiyrhs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(phiz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(phiz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(phizrhs, 0))

#endif /* CCODE */

#ifdef FCODE
#define WAVEMOL_FARGUMENTS _CCTK_FARGUMENTS, WAVEMOL_PUBLIC_FARGUMENTS

#define DECLARE_WAVEMOL_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_WAVEMOL_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_WAVEMOL_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_WAVEMOL_PUBLIC_CARGUMENTS

#define WAVEMOL_C2F_PROTO _CCTK_C2F_PROTO, WAVEMOL_PUBLIC_C2F_PROTO

#define PASS_WAVEMOL_C2F(GH) _PASS_CCTK_C2F(GH), PASS_WAVEMOL_PUBLIC_C2F(GH)

#define DECLARE_WAVEMOL_C2F _DECLARE_CCTK_C2F DECLARE_WAVEMOL_PUBLIC_C2F

#define INITIALISE_WAVEMOL_C2F _INITIALISE_CCTK_C2F INITIALISE_WAVEMOL_PUBLIC_C2F

#define WAVEMOL_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
