/*@@
   @header  NullSHRExtract_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn NullSHRExtract
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_NULLSHREXTRACT_PRIVATE_FARGUMENTS \
INTEGER N1Ylm_length&&\
INTEGER NT1Ylm_length&&\
INTEGER NTYlm_length&&\
INTEGER NYlm_length&&\
INTEGER S1Ylm_length&&\
INTEGER ST1Ylm_length&&\
INTEGER STYlm_length&&\
INTEGER SYlm_length&&\
INTEGER TClm_length&&\
INTEGER TCrlm_length&&\
INTEGER TCtlm_length&&\
INTEGER WT_3vectors_length&&\
INTEGER WT_4vectors_length&&\
INTEGER WT_affine_metric_length&&\
INTEGER WT_d4vectors_length&&\
INTEGER WT_deta0_vect_length&&\
INTEGER WT_dj0_vect_length&&\
INTEGER WT_dsigma_vect_length&&\
INTEGER WT_g1_vect_length&&\
INTEGER WT_gup_vect_length&&\
INTEGER WT_jac_length&&\
INTEGER WT_r1_length&&\
INTEGER WT_scalars_length&&\
INTEGER X0Clm&&\
INTEGER X0N1Ylm&&\
INTEGER X0NT1Ylm&&\
INTEGER X0NTYlm&&\
INTEGER X0NYlm&&\
INTEGER X0S1Ylm&&\
INTEGER X0ST1Ylm&&\
INTEGER X0STYlm&&\
INTEGER X0SYlm&&\
INTEGER X0TClm&&\
INTEGER X0TCrlm&&\
INTEGER X0TCtlm&&\
INTEGER X0WT_3vectors&&\
INTEGER X0WT_4vectors&&\
INTEGER X0WT_CmpxCoord&&\
INTEGER X0WT_affine_metric&&\
INTEGER X0WT_d4vectors&&\
INTEGER X0WT_deta0_vect&&\
INTEGER X0WT_dj0_vect&&\
INTEGER X0WT_dsigma_vect&&\
INTEGER X0WT_g1_vect&&\
INTEGER X0WT_gup_vect&&\
INTEGER X0WT_jac&&\
INTEGER X0WT_r1&&\
INTEGER X0WT_scalars&&\
INTEGER X0drClm&&\
INTEGER X0dtClm&&\
INTEGER X1N1Ylm&&\
INTEGER X1NT1Ylm&&\
INTEGER X1NTYlm&&\
INTEGER X1NYlm&&\
INTEGER X1S1Ylm&&\
INTEGER X1ST1Ylm&&\
INTEGER X1STYlm&&\
INTEGER X1SYlm&&\
INTEGER X1WT_3vectors&&\
INTEGER X1WT_4vectors&&\
INTEGER X1WT_CmpxCoord&&\
INTEGER X1WT_affine_metric&&\
INTEGER X1WT_d4vectors&&\
INTEGER X1WT_deta0_vect&&\
INTEGER X1WT_dj0_vect&&\
INTEGER X1WT_dsigma_vect&&\
INTEGER X1WT_g1_vect&&\
INTEGER X1WT_gup_vect&&\
INTEGER X1WT_jac&&\
INTEGER X1WT_r1&&\
INTEGER X1WT_scalars&&\
CCTK_DECLARE(CCTK_REAL,IC,(X0Clm))&&\
CCTK_DECLARE(CCTK_REAL,ICr,(X0drClm))&&\
CCTK_DECLARE(CCTK_REAL,ICt,(X0dtClm))&&\
CCTK_DECLARE(CCTK_REAL,ITC,(X0TClm,TClm_length))&&\
CCTK_DECLARE(CCTK_REAL,ITCr,(X0TCrlm,TCrlm_length))&&\
CCTK_DECLARE(CCTK_REAL,ITCt,(X0TCtlm,TCtlm_length))&&\
CCTK_DECLARE(CCTK_REAL,RC,(X0Clm))&&\
CCTK_DECLARE(CCTK_REAL,RCr,(X0drClm))&&\
CCTK_DECLARE(CCTK_REAL,RCt,(X0dtClm))&&\
CCTK_DECLARE(CCTK_REAL,RTC,(X0TClm,TClm_length))&&\
CCTK_DECLARE(CCTK_REAL,RTCr,(X0TCrlm,TCrlm_length))&&\
CCTK_DECLARE(CCTK_REAL,RTCt,(X0TCtlm,TCtlm_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_DNnorm_vect,(X0WT_d4vectors,X1WT_d4vectors,WT_d4vectors_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_DSnorm_vect,(X0WT_d4vectors,X1WT_d4vectors,WT_d4vectors_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_delld_vect,(X0WT_4vectors,X1WT_4vectors,WT_4vectors_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_deta0_vect,(X0WT_deta0_vect,X1WT_deta0_vect,WT_deta0_vect_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_detg,(X0WT_scalars,X1WT_scalars,WT_scalars_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_dj0_vect,(X0WT_dj0_vect,X1WT_dj0_vect,WT_dj0_vect_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_dr0_vect,(X0WT_3vectors,X1WT_3vectors,WT_3vectors_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_dr1_vect,(X0WT_4vectors,X1WT_4vectors,WT_4vectors_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_dsigma_vect,(X0WT_dsigma_vect,X1WT_dsigma_vect,WT_dsigma_vect_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_ell_vect,(X0WT_4vectors,X1WT_4vectors,WT_4vectors_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_elld,(X0WT_scalars,X1WT_scalars,WT_scalars_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_eta0_vect,(X0WT_affine_metric,X1WT_affine_metric,WT_affine_metric_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_eta1_vect,(X0WT_affine_metric,X1WT_affine_metric,WT_affine_metric_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_etaup0_vect,(X0WT_affine_metric,X1WT_affine_metric,WT_affine_metric_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_etaup1_vect,(X0WT_affine_metric,X1WT_affine_metric,WT_affine_metric_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_g1_vect,(X0WT_g1_vect,X1WT_g1_vect,WT_g1_vect_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_gup_vect,(X0WT_gup_vect,X1WT_gup_vect,WT_gup_vect_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_j0_vect,(X0WT_jac,X1WT_jac,WT_jac_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_j0inv_vect,(X0WT_jac,X1WT_jac,WT_jac_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_j1_vect,(X0WT_jac,X1WT_jac,WT_jac_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_na_vect,(X0WT_4vectors,X1WT_4vectors,WT_4vectors_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_r1,(X0WT_r1,X1WT_r1,WT_r1_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_r1_p,(X0WT_r1,X1WT_r1,WT_r1_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_r1_p_p,(X0WT_r1,X1WT_r1,WT_r1_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_sa_vect,(X0WT_4vectors,X1WT_4vectors,WT_4vectors_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_sigma2,(X0WT_scalars,X1WT_scalars,WT_scalars_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_sigma_vect,(X0WT_3vectors,X1WT_3vectors,WT_3vectors_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_temp,(X0WT_scalars,X1WT_scalars,WT_scalars_length))&&\
CCTK_DECLARE(CCTK_REAL,im1TYN,(X0NT1Ylm,X1NT1Ylm,NT1Ylm_length))&&\
CCTK_DECLARE(CCTK_REAL,im1TYS,(X0ST1Ylm,X1ST1Ylm,ST1Ylm_length))&&\
CCTK_DECLARE(CCTK_REAL,im1YN,(X0N1Ylm,X1N1Ylm,N1Ylm_length))&&\
CCTK_DECLARE(CCTK_REAL,im1YS,(X0S1Ylm,X1S1Ylm,S1Ylm_length))&&\
CCTK_DECLARE(CCTK_REAL,imTYN,(X0NTYlm,X1NTYlm,NTYlm_length))&&\
CCTK_DECLARE(CCTK_REAL,imTYS,(X0STYlm,X1STYlm,STYlm_length))&&\
CCTK_DECLARE(CCTK_REAL,imYN,(X0NYlm,X1NYlm,NYlm_length))&&\
CCTK_DECLARE(CCTK_REAL,imYS,(X0SYlm,X1SYlm,SYlm_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qa_2,(X0WT_CmpxCoord,X1WT_CmpxCoord))&&\
CCTK_DECLARE(CCTK_COMPLEX,qa_3,(X0WT_CmpxCoord,X1WT_CmpxCoord))&&\
CCTK_DECLARE(CCTK_REAL,re1TYN,(X0NT1Ylm,X1NT1Ylm,NT1Ylm_length))&&\
CCTK_DECLARE(CCTK_REAL,re1TYS,(X0ST1Ylm,X1ST1Ylm,ST1Ylm_length))&&\
CCTK_DECLARE(CCTK_REAL,re1YN,(X0N1Ylm,X1N1Ylm,N1Ylm_length))&&\
CCTK_DECLARE(CCTK_REAL,re1YS,(X0S1Ylm,X1S1Ylm,S1Ylm_length))&&\
CCTK_DECLARE(CCTK_REAL,reTYN,(X0NTYlm,X1NTYlm,NTYlm_length))&&\
CCTK_DECLARE(CCTK_REAL,reTYS,(X0STYlm,X1STYlm,STYlm_length))&&\
CCTK_DECLARE(CCTK_REAL,reYN,(X0NYlm,X1NYlm,NYlm_length))&&\
CCTK_DECLARE(CCTK_REAL,reYS,(X0SYlm,X1SYlm,SYlm_length))&&\


#define NULLSHREXTRACT_PRIVATE_FARGUMENTS \
N1Ylm_length,NT1Ylm_length,NTYlm_length,NYlm_length,S1Ylm_length,ST1Ylm_length,STYlm_length,SYlm_length,TClm_length,TCrlm_length,TCtlm_length,WT_3vectors_length,WT_4vectors_length,WT_affine_metric_length,WT_d4vectors_length,WT_deta0_vect_length,WT_dj0_vect_length,WT_dsigma_vect_length,WT_g1_vect_length,WT_gup_vect_length,WT_jac_length,WT_r1_length,WT_scalars_length,X0Clm,X0N1Ylm,X0NT1Ylm,X0NTYlm,X0NYlm,X0S1Ylm,X0ST1Ylm,X0STYlm,X0SYlm,X0TClm,X0TCrlm,X0TCtlm,X0WT_3vectors,X0WT_4vectors,X0WT_CmpxCoord,X0WT_affine_metric,X0WT_d4vectors,X0WT_deta0_vect,X0WT_dj0_vect,X0WT_dsigma_vect,X0WT_g1_vect,X0WT_gup_vect,X0WT_jac,X0WT_r1,X0WT_scalars,X0drClm,X0dtClm,X1N1Ylm,X1NT1Ylm,X1NTYlm,X1NYlm,X1S1Ylm,X1ST1Ylm,X1STYlm,X1SYlm,X1WT_3vectors,X1WT_4vectors,X1WT_CmpxCoord,X1WT_affine_metric,X1WT_d4vectors,X1WT_deta0_vect,X1WT_dj0_vect,X1WT_dsigma_vect,X1WT_g1_vect,X1WT_gup_vect,X1WT_jac,X1WT_r1,X1WT_scalars,IC,ICr,ICt,ITC,ITCr,ITCt,RC,RCr,RCt,RTC,RTCr,RTCt,WT_DNnorm_vect,WT_DSnorm_vect,WT_delld_vect,WT_deta0_vect,WT_detg,WT_dj0_vect,WT_dr0_vect,WT_dr1_vect,WT_dsigma_vect,WT_ell_vect,WT_elld,WT_eta0_vect,WT_eta1_vect,WT_etaup0_vect,WT_etaup1_vect,WT_g1_vect,WT_gup_vect,WT_j0_vect,WT_j0inv_vect,WT_j1_vect,WT_na_vect,WT_r1,WT_r1_p,WT_r1_p_p,WT_sa_vect,WT_sigma2,WT_sigma_vect,WT_temp,im1TYN,im1TYS,im1YN,im1YS,imTYN,imTYS,imYN,imYS,qa_2,qa_3,re1TYN,re1TYS,re1YN,re1YS,reTYN,reTYS,reYN,reYS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLSHREXTRACT_PRIVATE_CARGUMENTS \
static int cctki_vi_IC = -100; \
if (cctki_vi_IC == -100) cctki_vi_IC = CCTK_VarIndex("NullSHRExtract::IC"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, IC, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_IC)); \
static int cctki_vi_ICr = -100; \
if (cctki_vi_ICr == -100) cctki_vi_ICr = CCTK_VarIndex("NullSHRExtract::ICr"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ICr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ICr)); \
static int cctki_vi_ICt = -100; \
if (cctki_vi_ICt == -100) cctki_vi_ICt = CCTK_VarIndex("NullSHRExtract::ICt"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ICt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ICt)); \
static int cctki_vi_ITC = -100; \
if (cctki_vi_ITC == -100) cctki_vi_ITC = CCTK_VarIndex("NullSHRExtract::ITC[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ITC, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ITC)); \
static int cctki_vi_ITCr = -100; \
if (cctki_vi_ITCr == -100) cctki_vi_ITCr = CCTK_VarIndex("NullSHRExtract::ITCr[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ITCr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ITCr)); \
static int cctki_vi_ITCt = -100; \
if (cctki_vi_ITCt == -100) cctki_vi_ITCt = CCTK_VarIndex("NullSHRExtract::ITCt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ITCt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ITCt)); \
static int cctki_vi_RC = -100; \
if (cctki_vi_RC == -100) cctki_vi_RC = CCTK_VarIndex("NullSHRExtract::RC"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, RC, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_RC)); \
static int cctki_vi_RCr = -100; \
if (cctki_vi_RCr == -100) cctki_vi_RCr = CCTK_VarIndex("NullSHRExtract::RCr"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, RCr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_RCr)); \
static int cctki_vi_RCt = -100; \
if (cctki_vi_RCt == -100) cctki_vi_RCt = CCTK_VarIndex("NullSHRExtract::RCt"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, RCt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_RCt)); \
static int cctki_vi_RTC = -100; \
if (cctki_vi_RTC == -100) cctki_vi_RTC = CCTK_VarIndex("NullSHRExtract::RTC[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, RTC, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_RTC)); \
static int cctki_vi_RTCr = -100; \
if (cctki_vi_RTCr == -100) cctki_vi_RTCr = CCTK_VarIndex("NullSHRExtract::RTCr[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, RTCr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_RTCr)); \
static int cctki_vi_RTCt = -100; \
if (cctki_vi_RTCt == -100) cctki_vi_RTCt = CCTK_VarIndex("NullSHRExtract::RTCt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, RTCt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_RTCt)); \
static int cctki_vi_WT_DNnorm_vect = -100; \
if (cctki_vi_WT_DNnorm_vect == -100) cctki_vi_WT_DNnorm_vect = CCTK_VarIndex("NullSHRExtract::WT_DNnorm_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_DNnorm_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_DNnorm_vect)); \
static int cctki_vi_WT_DSnorm_vect = -100; \
if (cctki_vi_WT_DSnorm_vect == -100) cctki_vi_WT_DSnorm_vect = CCTK_VarIndex("NullSHRExtract::WT_DSnorm_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_DSnorm_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_DSnorm_vect)); \
static int cctki_vi_WT_delld_vect = -100; \
if (cctki_vi_WT_delld_vect == -100) cctki_vi_WT_delld_vect = CCTK_VarIndex("NullSHRExtract::WT_delld_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_delld_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_delld_vect)); \
static int cctki_vi_WT_deta0_vect = -100; \
if (cctki_vi_WT_deta0_vect == -100) cctki_vi_WT_deta0_vect = CCTK_VarIndex("NullSHRExtract::WT_deta0_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_deta0_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_deta0_vect)); \
static int cctki_vi_WT_detg = -100; \
if (cctki_vi_WT_detg == -100) cctki_vi_WT_detg = CCTK_VarIndex("NullSHRExtract::WT_detg[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_detg, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_detg)); \
static int cctki_vi_WT_dj0_vect = -100; \
if (cctki_vi_WT_dj0_vect == -100) cctki_vi_WT_dj0_vect = CCTK_VarIndex("NullSHRExtract::WT_dj0_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_dj0_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_dj0_vect)); \
static int cctki_vi_WT_dr0_vect = -100; \
if (cctki_vi_WT_dr0_vect == -100) cctki_vi_WT_dr0_vect = CCTK_VarIndex("NullSHRExtract::WT_dr0_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_dr0_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_dr0_vect)); \
static int cctki_vi_WT_dr1_vect = -100; \
if (cctki_vi_WT_dr1_vect == -100) cctki_vi_WT_dr1_vect = CCTK_VarIndex("NullSHRExtract::WT_dr1_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_dr1_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_dr1_vect)); \
static int cctki_vi_WT_dsigma_vect = -100; \
if (cctki_vi_WT_dsigma_vect == -100) cctki_vi_WT_dsigma_vect = CCTK_VarIndex("NullSHRExtract::WT_dsigma_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_dsigma_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_dsigma_vect)); \
static int cctki_vi_WT_ell_vect = -100; \
if (cctki_vi_WT_ell_vect == -100) cctki_vi_WT_ell_vect = CCTK_VarIndex("NullSHRExtract::WT_ell_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_ell_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_ell_vect)); \
static int cctki_vi_WT_elld = -100; \
if (cctki_vi_WT_elld == -100) cctki_vi_WT_elld = CCTK_VarIndex("NullSHRExtract::WT_elld[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_elld, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_elld)); \
static int cctki_vi_WT_eta0_vect = -100; \
if (cctki_vi_WT_eta0_vect == -100) cctki_vi_WT_eta0_vect = CCTK_VarIndex("NullSHRExtract::WT_eta0_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_eta0_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_eta0_vect)); \
static int cctki_vi_WT_eta1_vect = -100; \
if (cctki_vi_WT_eta1_vect == -100) cctki_vi_WT_eta1_vect = CCTK_VarIndex("NullSHRExtract::WT_eta1_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_eta1_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_eta1_vect)); \
static int cctki_vi_WT_etaup0_vect = -100; \
if (cctki_vi_WT_etaup0_vect == -100) cctki_vi_WT_etaup0_vect = CCTK_VarIndex("NullSHRExtract::WT_etaup0_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_etaup0_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_etaup0_vect)); \
static int cctki_vi_WT_etaup1_vect = -100; \
if (cctki_vi_WT_etaup1_vect == -100) cctki_vi_WT_etaup1_vect = CCTK_VarIndex("NullSHRExtract::WT_etaup1_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_etaup1_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_etaup1_vect)); \
static int cctki_vi_WT_g1_vect = -100; \
if (cctki_vi_WT_g1_vect == -100) cctki_vi_WT_g1_vect = CCTK_VarIndex("NullSHRExtract::WT_g1_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_g1_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_g1_vect)); \
static int cctki_vi_WT_gup_vect = -100; \
if (cctki_vi_WT_gup_vect == -100) cctki_vi_WT_gup_vect = CCTK_VarIndex("NullSHRExtract::WT_gup_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_gup_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_gup_vect)); \
static int cctki_vi_WT_j0_vect = -100; \
if (cctki_vi_WT_j0_vect == -100) cctki_vi_WT_j0_vect = CCTK_VarIndex("NullSHRExtract::WT_j0_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_j0_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_j0_vect)); \
static int cctki_vi_WT_j0inv_vect = -100; \
if (cctki_vi_WT_j0inv_vect == -100) cctki_vi_WT_j0inv_vect = CCTK_VarIndex("NullSHRExtract::WT_j0inv_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_j0inv_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_j0inv_vect)); \
static int cctki_vi_WT_j1_vect = -100; \
if (cctki_vi_WT_j1_vect == -100) cctki_vi_WT_j1_vect = CCTK_VarIndex("NullSHRExtract::WT_j1_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_j1_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_j1_vect)); \
static int cctki_vi_WT_na_vect = -100; \
if (cctki_vi_WT_na_vect == -100) cctki_vi_WT_na_vect = CCTK_VarIndex("NullSHRExtract::WT_na_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_na_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_na_vect)); \
static int cctki_vi_WT_r1 = -100; \
if (cctki_vi_WT_r1 == -100) cctki_vi_WT_r1 = CCTK_VarIndex("NullSHRExtract::WT_r1[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_r1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_r1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_r1_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_WT_r1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_r1_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_WT_r1)); \
static int cctki_vi_WT_sa_vect = -100; \
if (cctki_vi_WT_sa_vect == -100) cctki_vi_WT_sa_vect = CCTK_VarIndex("NullSHRExtract::WT_sa_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_sa_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_sa_vect)); \
static int cctki_vi_WT_sigma2 = -100; \
if (cctki_vi_WT_sigma2 == -100) cctki_vi_WT_sigma2 = CCTK_VarIndex("NullSHRExtract::WT_sigma2[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_sigma2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_sigma2)); \
static int cctki_vi_WT_sigma_vect = -100; \
if (cctki_vi_WT_sigma_vect == -100) cctki_vi_WT_sigma_vect = CCTK_VarIndex("NullSHRExtract::WT_sigma_vect[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_sigma_vect, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_sigma_vect)); \
static int cctki_vi_WT_temp = -100; \
if (cctki_vi_WT_temp == -100) cctki_vi_WT_temp = CCTK_VarIndex("NullSHRExtract::WT_temp[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_temp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_temp)); \
static int cctki_vi_im1TYN = -100; \
if (cctki_vi_im1TYN == -100) cctki_vi_im1TYN = CCTK_VarIndex("NullSHRExtract::im1TYN[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, im1TYN, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_im1TYN)); \
static int cctki_vi_im1TYS = -100; \
if (cctki_vi_im1TYS == -100) cctki_vi_im1TYS = CCTK_VarIndex("NullSHRExtract::im1TYS[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, im1TYS, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_im1TYS)); \
static int cctki_vi_im1YN = -100; \
if (cctki_vi_im1YN == -100) cctki_vi_im1YN = CCTK_VarIndex("NullSHRExtract::im1YN[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, im1YN, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_im1YN)); \
static int cctki_vi_im1YS = -100; \
if (cctki_vi_im1YS == -100) cctki_vi_im1YS = CCTK_VarIndex("NullSHRExtract::im1YS[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, im1YS, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_im1YS)); \
static int cctki_vi_imTYN = -100; \
if (cctki_vi_imTYN == -100) cctki_vi_imTYN = CCTK_VarIndex("NullSHRExtract::imTYN[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, imTYN, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_imTYN)); \
static int cctki_vi_imTYS = -100; \
if (cctki_vi_imTYS == -100) cctki_vi_imTYS = CCTK_VarIndex("NullSHRExtract::imTYS[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, imTYS, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_imTYS)); \
static int cctki_vi_imYN = -100; \
if (cctki_vi_imYN == -100) cctki_vi_imYN = CCTK_VarIndex("NullSHRExtract::imYN[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, imYN, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_imYN)); \
static int cctki_vi_imYS = -100; \
if (cctki_vi_imYS == -100) cctki_vi_imYS = CCTK_VarIndex("NullSHRExtract::imYS[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, imYS, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_imYS)); \
static int cctki_vi_qa_2 = -100; \
if (cctki_vi_qa_2 == -100) cctki_vi_qa_2 = CCTK_VarIndex("NullSHRExtract::qa_2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qa_2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qa_2)); \
static int cctki_vi_qa_3 = -100; \
if (cctki_vi_qa_3 == -100) cctki_vi_qa_3 = CCTK_VarIndex("NullSHRExtract::qa_3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qa_3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qa_3)); \
static int cctki_vi_re1TYN = -100; \
if (cctki_vi_re1TYN == -100) cctki_vi_re1TYN = CCTK_VarIndex("NullSHRExtract::re1TYN[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, re1TYN, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_re1TYN)); \
static int cctki_vi_re1TYS = -100; \
if (cctki_vi_re1TYS == -100) cctki_vi_re1TYS = CCTK_VarIndex("NullSHRExtract::re1TYS[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, re1TYS, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_re1TYS)); \
static int cctki_vi_re1YN = -100; \
if (cctki_vi_re1YN == -100) cctki_vi_re1YN = CCTK_VarIndex("NullSHRExtract::re1YN[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, re1YN, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_re1YN)); \
static int cctki_vi_re1YS = -100; \
if (cctki_vi_re1YS == -100) cctki_vi_re1YS = CCTK_VarIndex("NullSHRExtract::re1YS[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, re1YS, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_re1YS)); \
static int cctki_vi_reTYN = -100; \
if (cctki_vi_reTYN == -100) cctki_vi_reTYN = CCTK_VarIndex("NullSHRExtract::reTYN[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, reTYN, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_reTYN)); \
static int cctki_vi_reTYS = -100; \
if (cctki_vi_reTYS == -100) cctki_vi_reTYS = CCTK_VarIndex("NullSHRExtract::reTYS[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, reTYS, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_reTYS)); \
static int cctki_vi_reYN = -100; \
if (cctki_vi_reYN == -100) cctki_vi_reYN = CCTK_VarIndex("NullSHRExtract::reYN[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, reYN, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_reYN)); \
static int cctki_vi_reYS = -100; \
if (cctki_vi_reYS == -100) cctki_vi_reYS = CCTK_VarIndex("NullSHRExtract::reYS[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, reYS, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_reYS));

#define DECLARE_NULLSHREXTRACT_PRIVATE_C2F \
static int CCTKARGNUM_IC = -1; \
static int CCTKGROUPNUM_Clm = -1; \
static int CCTKARGNUM_ICr = -1; \
static int CCTKGROUPNUM_drClm = -1; \
static int CCTKARGNUM_ICt = -1; \
static int CCTKGROUPNUM_dtClm = -1; \
static int CCTKARGNUM_ITC = -1; \
static int CCTKGROUPNUM_TClm = -1; \
static int CCTKARGNUM_ITCr = -1; \
static int CCTKGROUPNUM_TCrlm = -1; \
static int CCTKARGNUM_ITCt = -1; \
static int CCTKGROUPNUM_TCtlm = -1; \
static int CCTKARGNUM_RC = -1; \
static int CCTKARGNUM_RCr = -1; \
static int CCTKARGNUM_RCt = -1; \
static int CCTKARGNUM_RTC = -1; \
static int CCTKARGNUM_RTCr = -1; \
static int CCTKARGNUM_RTCt = -1; \
static int CCTKARGNUM_WT_DNnorm_vect = -1; \
static int CCTKGROUPNUM_WT_d4vectors = -1; \
static int CCTKARGNUM_WT_DSnorm_vect = -1; \
static int CCTKARGNUM_WT_delld_vect = -1; \
static int CCTKGROUPNUM_WT_4vectors = -1; \
static int CCTKARGNUM_WT_deta0_vect = -1; \
static int CCTKGROUPNUM_WT_deta0_vect = -1; \
static int CCTKARGNUM_WT_detg = -1; \
static int CCTKGROUPNUM_WT_scalars = -1; \
static int CCTKARGNUM_WT_dj0_vect = -1; \
static int CCTKGROUPNUM_WT_dj0_vect = -1; \
static int CCTKARGNUM_WT_dr0_vect = -1; \
static int CCTKGROUPNUM_WT_3vectors = -1; \
static int CCTKARGNUM_WT_dr1_vect = -1; \
static int CCTKARGNUM_WT_dsigma_vect = -1; \
static int CCTKGROUPNUM_WT_dsigma_vect = -1; \
static int CCTKARGNUM_WT_ell_vect = -1; \
static int CCTKARGNUM_WT_elld = -1; \
static int CCTKARGNUM_WT_eta0_vect = -1; \
static int CCTKGROUPNUM_WT_affine_metric = -1; \
static int CCTKARGNUM_WT_eta1_vect = -1; \
static int CCTKARGNUM_WT_etaup0_vect = -1; \
static int CCTKARGNUM_WT_etaup1_vect = -1; \
static int CCTKARGNUM_WT_g1_vect = -1; \
static int CCTKGROUPNUM_WT_g1_vect = -1; \
static int CCTKARGNUM_WT_gup_vect = -1; \
static int CCTKGROUPNUM_WT_gup_vect = -1; \
static int CCTKARGNUM_WT_j0_vect = -1; \
static int CCTKGROUPNUM_WT_jac = -1; \
static int CCTKARGNUM_WT_j0inv_vect = -1; \
static int CCTKARGNUM_WT_j1_vect = -1; \
static int CCTKARGNUM_WT_na_vect = -1; \
static int CCTKARGNUM_WT_r1 = -1; \
static int CCTKGROUPNUM_WT_r1 = -1; \
static int CCTKARGNUM_WT_sa_vect = -1; \
static int CCTKARGNUM_WT_sigma2 = -1; \
static int CCTKARGNUM_WT_sigma_vect = -1; \
static int CCTKARGNUM_WT_temp = -1; \
static int CCTKARGNUM_im1TYN = -1; \
static int CCTKGROUPNUM_NT1Ylm = -1; \
static int CCTKARGNUM_im1TYS = -1; \
static int CCTKGROUPNUM_ST1Ylm = -1; \
static int CCTKARGNUM_im1YN = -1; \
static int CCTKGROUPNUM_N1Ylm = -1; \
static int CCTKARGNUM_im1YS = -1; \
static int CCTKGROUPNUM_S1Ylm = -1; \
static int CCTKARGNUM_imTYN = -1; \
static int CCTKGROUPNUM_NTYlm = -1; \
static int CCTKARGNUM_imTYS = -1; \
static int CCTKGROUPNUM_STYlm = -1; \
static int CCTKARGNUM_imYN = -1; \
static int CCTKGROUPNUM_NYlm = -1; \
static int CCTKARGNUM_imYS = -1; \
static int CCTKGROUPNUM_SYlm = -1; \
static int CCTKARGNUM_qa_2 = -1; \
static int CCTKGROUPNUM_WT_CmpxCoord = -1; \
static int CCTKARGNUM_qa_3 = -1; \
static int CCTKARGNUM_re1TYN = -1; \
static int CCTKARGNUM_re1TYS = -1; \
static int CCTKARGNUM_re1YN = -1; \
static int CCTKARGNUM_re1YS = -1; \
static int CCTKARGNUM_reTYN = -1; \
static int CCTKARGNUM_reTYS = -1; \
static int CCTKARGNUM_reYN = -1; \
static int CCTKARGNUM_reYS = -1;

#define INITIALISE_NULLSHREXTRACT_PRIVATE_C2F \
if(CCTKARGNUM_IC == -1) CCTKARGNUM_IC = CCTK_VarIndex("NullSHRExtract::IC"); \
if(CCTKGROUPNUM_Clm == -1) CCTKGROUPNUM_Clm = CCTK_GroupIndex("NullSHRExtract::Clm"); \
if(CCTKARGNUM_ICr == -1) CCTKARGNUM_ICr = CCTK_VarIndex("NullSHRExtract::ICr"); \
if(CCTKGROUPNUM_drClm == -1) CCTKGROUPNUM_drClm = CCTK_GroupIndex("NullSHRExtract::drClm"); \
if(CCTKARGNUM_ICt == -1) CCTKARGNUM_ICt = CCTK_VarIndex("NullSHRExtract::ICt"); \
if(CCTKGROUPNUM_dtClm == -1) CCTKGROUPNUM_dtClm = CCTK_GroupIndex("NullSHRExtract::dtClm"); \
if(CCTKARGNUM_ITC == -1) CCTKARGNUM_ITC = CCTK_VarIndex("NullSHRExtract::ITC[0]"); \
if(CCTKGROUPNUM_TClm == -1) CCTKGROUPNUM_TClm = CCTK_GroupIndex("NullSHRExtract::TClm"); \
if(CCTKARGNUM_ITCr == -1) CCTKARGNUM_ITCr = CCTK_VarIndex("NullSHRExtract::ITCr[0]"); \
if(CCTKGROUPNUM_TCrlm == -1) CCTKGROUPNUM_TCrlm = CCTK_GroupIndex("NullSHRExtract::TCrlm"); \
if(CCTKARGNUM_ITCt == -1) CCTKARGNUM_ITCt = CCTK_VarIndex("NullSHRExtract::ITCt[0]"); \
if(CCTKGROUPNUM_TCtlm == -1) CCTKGROUPNUM_TCtlm = CCTK_GroupIndex("NullSHRExtract::TCtlm"); \
if(CCTKARGNUM_RC == -1) CCTKARGNUM_RC = CCTK_VarIndex("NullSHRExtract::RC"); \
if(CCTKARGNUM_RCr == -1) CCTKARGNUM_RCr = CCTK_VarIndex("NullSHRExtract::RCr"); \
if(CCTKARGNUM_RCt == -1) CCTKARGNUM_RCt = CCTK_VarIndex("NullSHRExtract::RCt"); \
if(CCTKARGNUM_RTC == -1) CCTKARGNUM_RTC = CCTK_VarIndex("NullSHRExtract::RTC[0]"); \
if(CCTKARGNUM_RTCr == -1) CCTKARGNUM_RTCr = CCTK_VarIndex("NullSHRExtract::RTCr[0]"); \
if(CCTKARGNUM_RTCt == -1) CCTKARGNUM_RTCt = CCTK_VarIndex("NullSHRExtract::RTCt[0]"); \
if(CCTKARGNUM_WT_DNnorm_vect == -1) CCTKARGNUM_WT_DNnorm_vect = CCTK_VarIndex("NullSHRExtract::WT_DNnorm_vect[0]"); \
if(CCTKGROUPNUM_WT_d4vectors == -1) CCTKGROUPNUM_WT_d4vectors = CCTK_GroupIndex("NullSHRExtract::WT_d4vectors"); \
if(CCTKARGNUM_WT_DSnorm_vect == -1) CCTKARGNUM_WT_DSnorm_vect = CCTK_VarIndex("NullSHRExtract::WT_DSnorm_vect[0]"); \
if(CCTKARGNUM_WT_delld_vect == -1) CCTKARGNUM_WT_delld_vect = CCTK_VarIndex("NullSHRExtract::WT_delld_vect[0]"); \
if(CCTKGROUPNUM_WT_4vectors == -1) CCTKGROUPNUM_WT_4vectors = CCTK_GroupIndex("NullSHRExtract::WT_4vectors"); \
if(CCTKARGNUM_WT_deta0_vect == -1) CCTKARGNUM_WT_deta0_vect = CCTK_VarIndex("NullSHRExtract::WT_deta0_vect[0]"); \
if(CCTKGROUPNUM_WT_deta0_vect == -1) CCTKGROUPNUM_WT_deta0_vect = CCTK_GroupIndex("NullSHRExtract::WT_deta0_vect"); \
if(CCTKARGNUM_WT_detg == -1) CCTKARGNUM_WT_detg = CCTK_VarIndex("NullSHRExtract::WT_detg[0]"); \
if(CCTKGROUPNUM_WT_scalars == -1) CCTKGROUPNUM_WT_scalars = CCTK_GroupIndex("NullSHRExtract::WT_scalars"); \
if(CCTKARGNUM_WT_dj0_vect == -1) CCTKARGNUM_WT_dj0_vect = CCTK_VarIndex("NullSHRExtract::WT_dj0_vect[0]"); \
if(CCTKGROUPNUM_WT_dj0_vect == -1) CCTKGROUPNUM_WT_dj0_vect = CCTK_GroupIndex("NullSHRExtract::WT_dj0_vect"); \
if(CCTKARGNUM_WT_dr0_vect == -1) CCTKARGNUM_WT_dr0_vect = CCTK_VarIndex("NullSHRExtract::WT_dr0_vect[0]"); \
if(CCTKGROUPNUM_WT_3vectors == -1) CCTKGROUPNUM_WT_3vectors = CCTK_GroupIndex("NullSHRExtract::WT_3vectors"); \
if(CCTKARGNUM_WT_dr1_vect == -1) CCTKARGNUM_WT_dr1_vect = CCTK_VarIndex("NullSHRExtract::WT_dr1_vect[0]"); \
if(CCTKARGNUM_WT_dsigma_vect == -1) CCTKARGNUM_WT_dsigma_vect = CCTK_VarIndex("NullSHRExtract::WT_dsigma_vect[0]"); \
if(CCTKGROUPNUM_WT_dsigma_vect == -1) CCTKGROUPNUM_WT_dsigma_vect = CCTK_GroupIndex("NullSHRExtract::WT_dsigma_vect"); \
if(CCTKARGNUM_WT_ell_vect == -1) CCTKARGNUM_WT_ell_vect = CCTK_VarIndex("NullSHRExtract::WT_ell_vect[0]"); \
if(CCTKARGNUM_WT_elld == -1) CCTKARGNUM_WT_elld = CCTK_VarIndex("NullSHRExtract::WT_elld[0]"); \
if(CCTKARGNUM_WT_eta0_vect == -1) CCTKARGNUM_WT_eta0_vect = CCTK_VarIndex("NullSHRExtract::WT_eta0_vect[0]"); \
if(CCTKGROUPNUM_WT_affine_metric == -1) CCTKGROUPNUM_WT_affine_metric = CCTK_GroupIndex("NullSHRExtract::WT_affine_metric"); \
if(CCTKARGNUM_WT_eta1_vect == -1) CCTKARGNUM_WT_eta1_vect = CCTK_VarIndex("NullSHRExtract::WT_eta1_vect[0]"); \
if(CCTKARGNUM_WT_etaup0_vect == -1) CCTKARGNUM_WT_etaup0_vect = CCTK_VarIndex("NullSHRExtract::WT_etaup0_vect[0]"); \
if(CCTKARGNUM_WT_etaup1_vect == -1) CCTKARGNUM_WT_etaup1_vect = CCTK_VarIndex("NullSHRExtract::WT_etaup1_vect[0]"); \
if(CCTKARGNUM_WT_g1_vect == -1) CCTKARGNUM_WT_g1_vect = CCTK_VarIndex("NullSHRExtract::WT_g1_vect[0]"); \
if(CCTKGROUPNUM_WT_g1_vect == -1) CCTKGROUPNUM_WT_g1_vect = CCTK_GroupIndex("NullSHRExtract::WT_g1_vect"); \
if(CCTKARGNUM_WT_gup_vect == -1) CCTKARGNUM_WT_gup_vect = CCTK_VarIndex("NullSHRExtract::WT_gup_vect[0]"); \
if(CCTKGROUPNUM_WT_gup_vect == -1) CCTKGROUPNUM_WT_gup_vect = CCTK_GroupIndex("NullSHRExtract::WT_gup_vect"); \
if(CCTKARGNUM_WT_j0_vect == -1) CCTKARGNUM_WT_j0_vect = CCTK_VarIndex("NullSHRExtract::WT_j0_vect[0]"); \
if(CCTKGROUPNUM_WT_jac == -1) CCTKGROUPNUM_WT_jac = CCTK_GroupIndex("NullSHRExtract::WT_jac"); \
if(CCTKARGNUM_WT_j0inv_vect == -1) CCTKARGNUM_WT_j0inv_vect = CCTK_VarIndex("NullSHRExtract::WT_j0inv_vect[0]"); \
if(CCTKARGNUM_WT_j1_vect == -1) CCTKARGNUM_WT_j1_vect = CCTK_VarIndex("NullSHRExtract::WT_j1_vect[0]"); \
if(CCTKARGNUM_WT_na_vect == -1) CCTKARGNUM_WT_na_vect = CCTK_VarIndex("NullSHRExtract::WT_na_vect[0]"); \
if(CCTKARGNUM_WT_r1 == -1) CCTKARGNUM_WT_r1 = CCTK_VarIndex("NullSHRExtract::WT_r1[0]"); \
if(CCTKGROUPNUM_WT_r1 == -1) CCTKGROUPNUM_WT_r1 = CCTK_GroupIndex("NullSHRExtract::WT_r1"); \
if(CCTKARGNUM_WT_sa_vect == -1) CCTKARGNUM_WT_sa_vect = CCTK_VarIndex("NullSHRExtract::WT_sa_vect[0]"); \
if(CCTKARGNUM_WT_sigma2 == -1) CCTKARGNUM_WT_sigma2 = CCTK_VarIndex("NullSHRExtract::WT_sigma2[0]"); \
if(CCTKARGNUM_WT_sigma_vect == -1) CCTKARGNUM_WT_sigma_vect = CCTK_VarIndex("NullSHRExtract::WT_sigma_vect[0]"); \
if(CCTKARGNUM_WT_temp == -1) CCTKARGNUM_WT_temp = CCTK_VarIndex("NullSHRExtract::WT_temp[0]"); \
if(CCTKARGNUM_im1TYN == -1) CCTKARGNUM_im1TYN = CCTK_VarIndex("NullSHRExtract::im1TYN[0]"); \
if(CCTKGROUPNUM_NT1Ylm == -1) CCTKGROUPNUM_NT1Ylm = CCTK_GroupIndex("NullSHRExtract::NT1Ylm"); \
if(CCTKARGNUM_im1TYS == -1) CCTKARGNUM_im1TYS = CCTK_VarIndex("NullSHRExtract::im1TYS[0]"); \
if(CCTKGROUPNUM_ST1Ylm == -1) CCTKGROUPNUM_ST1Ylm = CCTK_GroupIndex("NullSHRExtract::ST1Ylm"); \
if(CCTKARGNUM_im1YN == -1) CCTKARGNUM_im1YN = CCTK_VarIndex("NullSHRExtract::im1YN[0]"); \
if(CCTKGROUPNUM_N1Ylm == -1) CCTKGROUPNUM_N1Ylm = CCTK_GroupIndex("NullSHRExtract::N1Ylm"); \
if(CCTKARGNUM_im1YS == -1) CCTKARGNUM_im1YS = CCTK_VarIndex("NullSHRExtract::im1YS[0]"); \
if(CCTKGROUPNUM_S1Ylm == -1) CCTKGROUPNUM_S1Ylm = CCTK_GroupIndex("NullSHRExtract::S1Ylm"); \
if(CCTKARGNUM_imTYN == -1) CCTKARGNUM_imTYN = CCTK_VarIndex("NullSHRExtract::imTYN[0]"); \
if(CCTKGROUPNUM_NTYlm == -1) CCTKGROUPNUM_NTYlm = CCTK_GroupIndex("NullSHRExtract::NTYlm"); \
if(CCTKARGNUM_imTYS == -1) CCTKARGNUM_imTYS = CCTK_VarIndex("NullSHRExtract::imTYS[0]"); \
if(CCTKGROUPNUM_STYlm == -1) CCTKGROUPNUM_STYlm = CCTK_GroupIndex("NullSHRExtract::STYlm"); \
if(CCTKARGNUM_imYN == -1) CCTKARGNUM_imYN = CCTK_VarIndex("NullSHRExtract::imYN[0]"); \
if(CCTKGROUPNUM_NYlm == -1) CCTKGROUPNUM_NYlm = CCTK_GroupIndex("NullSHRExtract::NYlm"); \
if(CCTKARGNUM_imYS == -1) CCTKARGNUM_imYS = CCTK_VarIndex("NullSHRExtract::imYS[0]"); \
if(CCTKGROUPNUM_SYlm == -1) CCTKGROUPNUM_SYlm = CCTK_GroupIndex("NullSHRExtract::SYlm"); \
if(CCTKARGNUM_qa_2 == -1) CCTKARGNUM_qa_2 = CCTK_VarIndex("NullSHRExtract::qa_2"); \
if(CCTKGROUPNUM_WT_CmpxCoord == -1) CCTKGROUPNUM_WT_CmpxCoord = CCTK_GroupIndex("NullSHRExtract::WT_CmpxCoord"); \
if(CCTKARGNUM_qa_3 == -1) CCTKARGNUM_qa_3 = CCTK_VarIndex("NullSHRExtract::qa_3"); \
if(CCTKARGNUM_re1TYN == -1) CCTKARGNUM_re1TYN = CCTK_VarIndex("NullSHRExtract::re1TYN[0]"); \
if(CCTKARGNUM_re1TYS == -1) CCTKARGNUM_re1TYS = CCTK_VarIndex("NullSHRExtract::re1TYS[0]"); \
if(CCTKARGNUM_re1YN == -1) CCTKARGNUM_re1YN = CCTK_VarIndex("NullSHRExtract::re1YN[0]"); \
if(CCTKARGNUM_re1YS == -1) CCTKARGNUM_re1YS = CCTK_VarIndex("NullSHRExtract::re1YS[0]"); \
if(CCTKARGNUM_reTYN == -1) CCTKARGNUM_reTYN = CCTK_VarIndex("NullSHRExtract::reTYN[0]"); \
if(CCTKARGNUM_reTYS == -1) CCTKARGNUM_reTYS = CCTK_VarIndex("NullSHRExtract::reTYS[0]"); \
if(CCTKARGNUM_reYN == -1) CCTKARGNUM_reYN = CCTK_VarIndex("NullSHRExtract::reYN[0]"); \
if(CCTKARGNUM_reYS == -1) CCTKARGNUM_reYS = CCTK_VarIndex("NullSHRExtract::reYS[0]");

#define NULLSHREXTRACT_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int

#define PASS_NULLSHREXTRACT_PRIVATE_C2F(GH) \
PASS_GROUPLEN(NullSHRExtract, N1Ylm),\
PASS_GROUPLEN(NullSHRExtract, NT1Ylm),\
PASS_GROUPLEN(NullSHRExtract, NTYlm),\
PASS_GROUPLEN(NullSHRExtract, NYlm),\
PASS_GROUPLEN(NullSHRExtract, S1Ylm),\
PASS_GROUPLEN(NullSHRExtract, ST1Ylm),\
PASS_GROUPLEN(NullSHRExtract, STYlm),\
PASS_GROUPLEN(NullSHRExtract, SYlm),\
PASS_GROUPLEN(NullSHRExtract, TClm),\
PASS_GROUPLEN(NullSHRExtract, TCrlm),\
PASS_GROUPLEN(NullSHRExtract, TCtlm),\
PASS_GROUPLEN(NullSHRExtract, WT_3vectors),\
PASS_GROUPLEN(NullSHRExtract, WT_4vectors),\
PASS_GROUPLEN(NullSHRExtract, WT_affine_metric),\
PASS_GROUPLEN(NullSHRExtract, WT_d4vectors),\
PASS_GROUPLEN(NullSHRExtract, WT_deta0_vect),\
PASS_GROUPLEN(NullSHRExtract, WT_dj0_vect),\
PASS_GROUPLEN(NullSHRExtract, WT_dsigma_vect),\
PASS_GROUPLEN(NullSHRExtract, WT_g1_vect),\
PASS_GROUPLEN(NullSHRExtract, WT_gup_vect),\
PASS_GROUPLEN(NullSHRExtract, WT_jac),\
PASS_GROUPLEN(NullSHRExtract, WT_r1),\
PASS_GROUPLEN(NullSHRExtract, WT_scalars),\
PASS_GROUPSIZE(Clm, 0),\
PASS_GROUPSIZE(N1Ylm, 0),\
PASS_GROUPSIZE(NT1Ylm, 0),\
PASS_GROUPSIZE(NTYlm, 0),\
PASS_GROUPSIZE(NYlm, 0),\
PASS_GROUPSIZE(S1Ylm, 0),\
PASS_GROUPSIZE(ST1Ylm, 0),\
PASS_GROUPSIZE(STYlm, 0),\
PASS_GROUPSIZE(SYlm, 0),\
PASS_GROUPSIZE(TClm, 0),\
PASS_GROUPSIZE(TCrlm, 0),\
PASS_GROUPSIZE(TCtlm, 0),\
PASS_GROUPSIZE(WT_3vectors, 0),\
PASS_GROUPSIZE(WT_4vectors, 0),\
PASS_GROUPSIZE(WT_CmpxCoord, 0),\
PASS_GROUPSIZE(WT_affine_metric, 0),\
PASS_GROUPSIZE(WT_d4vectors, 0),\
PASS_GROUPSIZE(WT_deta0_vect, 0),\
PASS_GROUPSIZE(WT_dj0_vect, 0),\
PASS_GROUPSIZE(WT_dsigma_vect, 0),\
PASS_GROUPSIZE(WT_g1_vect, 0),\
PASS_GROUPSIZE(WT_gup_vect, 0),\
PASS_GROUPSIZE(WT_jac, 0),\
PASS_GROUPSIZE(WT_r1, 0),\
PASS_GROUPSIZE(WT_scalars, 0),\
PASS_GROUPSIZE(drClm, 0),\
PASS_GROUPSIZE(dtClm, 0),\
PASS_GROUPSIZE(N1Ylm, 1),\
PASS_GROUPSIZE(NT1Ylm, 1),\
PASS_GROUPSIZE(NTYlm, 1),\
PASS_GROUPSIZE(NYlm, 1),\
PASS_GROUPSIZE(S1Ylm, 1),\
PASS_GROUPSIZE(ST1Ylm, 1),\
PASS_GROUPSIZE(STYlm, 1),\
PASS_GROUPSIZE(SYlm, 1),\
PASS_GROUPSIZE(WT_3vectors, 1),\
PASS_GROUPSIZE(WT_4vectors, 1),\
PASS_GROUPSIZE(WT_CmpxCoord, 1),\
PASS_GROUPSIZE(WT_affine_metric, 1),\
PASS_GROUPSIZE(WT_d4vectors, 1),\
PASS_GROUPSIZE(WT_deta0_vect, 1),\
PASS_GROUPSIZE(WT_dj0_vect, 1),\
PASS_GROUPSIZE(WT_dsigma_vect, 1),\
PASS_GROUPSIZE(WT_g1_vect, 1),\
PASS_GROUPSIZE(WT_gup_vect, 1),\
PASS_GROUPSIZE(WT_jac, 1),\
PASS_GROUPSIZE(WT_r1, 1),\
PASS_GROUPSIZE(WT_scalars, 1),\
(CCTK_REAL *)(PASS_REFERENCE(IC, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ICr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ICt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ITC, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ITCr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ITCt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RC, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RCr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RCt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RTC, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RTCr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(RTCt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_DNnorm_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_DSnorm_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_delld_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_deta0_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_detg, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_dj0_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_dr0_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_dr1_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_dsigma_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_ell_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_elld, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_eta0_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_eta1_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_etaup0_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_etaup1_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_g1_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_gup_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_j0_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_j0inv_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_j1_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_na_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_r1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_r1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_r1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_sa_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_sigma2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_sigma_vect, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_temp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(im1TYN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(im1TYS, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(im1YN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(im1YS, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(imTYN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(imTYS, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(imYN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(imYS, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qa_2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qa_3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(re1TYN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(re1TYS, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(re1YN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(re1YS, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(reTYN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(reTYS, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(reYN, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(reYS, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLSHREXTRACT_PROTECTED_FARGUMENTS \
INTEGER SHRE_alpha_e_length&&\
INTEGER SHRE_beta_e_length&&\
INTEGER SHRE_dalpha_e_length&&\
INTEGER SHRE_dbeta_e_length&&\
INTEGER SHRE_dgij_e_length&&\
INTEGER SHRE_dgit_e_length&&\
INTEGER SHRE_gij_e_length&&\
INTEGER SHRE_git_e_length&&\
INTEGER WT_r0_length&&\
INTEGER X0SHRE_alpha_e&&\
INTEGER X0SHRE_beta_e&&\
INTEGER X0SHRE_dalpha_e&&\
INTEGER X0SHRE_dbeta_e&&\
INTEGER X0SHRE_dgij_e&&\
INTEGER X0SHRE_dgit_e&&\
INTEGER X0SHRE_gij_e&&\
INTEGER X0SHRE_git_e&&\
INTEGER X0WT_r0&&\
INTEGER X0beta_l&&\
INTEGER X0beta_wt&&\
INTEGER X0j_l&&\
INTEGER X0j_wt&&\
INTEGER X0q_wt&&\
INTEGER X0u_l&&\
INTEGER X0u_wt&&\
INTEGER X0u_x_wt&&\
INTEGER X0w_l&&\
INTEGER X0w_wt&&\
INTEGER X0x_wt&&\
INTEGER X1SHRE_alpha_e&&\
INTEGER X1SHRE_beta_e&&\
INTEGER X1SHRE_dalpha_e&&\
INTEGER X1SHRE_dbeta_e&&\
INTEGER X1SHRE_dgij_e&&\
INTEGER X1SHRE_dgit_e&&\
INTEGER X1SHRE_gij_e&&\
INTEGER X1SHRE_git_e&&\
INTEGER X1WT_r0&&\
INTEGER X1beta_l&&\
INTEGER X1beta_wt&&\
INTEGER X1j_l&&\
INTEGER X1j_wt&&\
INTEGER X1q_wt&&\
INTEGER X1u_l&&\
INTEGER X1u_wt&&\
INTEGER X1u_x_wt&&\
INTEGER X1w_l&&\
INTEGER X1w_wt&&\
INTEGER X1x_wt&&\
INTEGER beta_l_length&&\
INTEGER beta_wt_length&&\
INTEGER j_l_length&&\
INTEGER j_wt_length&&\
INTEGER q_wt_length&&\
INTEGER u_l_length&&\
INTEGER u_wt_length&&\
INTEGER u_x_wt_length&&\
INTEGER w_l_length&&\
INTEGER w_wt_length&&\
INTEGER x_wt_length&&\
CCTK_DECLARE(CCTK_REAL,SHRE_alpha_e,(X0SHRE_alpha_e,X1SHRE_alpha_e,SHRE_alpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_beta_e,(X0SHRE_beta_e,X1SHRE_beta_e,SHRE_beta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpalpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqalpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dralpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtalpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_gij_e,(X0SHRE_gij_e,X1SHRE_gij_e,SHRE_gij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_git_e,(X0SHRE_git_e,X1SHRE_git_e,SHRE_git_e_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_r0,(X0WT_r0,X1WT_r0,WT_r0_length))&&\
CCTK_DECLARE(CCTK_REAL,beta_l,(X0beta_l,X1beta_l,beta_l_length))&&\
CCTK_DECLARE(CCTK_REAL,beta_wt,(X0beta_wt,X1beta_wt,beta_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,beta_wt_p,(X0beta_wt,X1beta_wt,beta_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,j_l,(X0j_l,X1j_l,j_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,j_wt,(X0j_wt,X1j_wt,j_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,j_wt_p,(X0j_wt,X1j_wt,j_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,q_wt,(X0q_wt,X1q_wt,q_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,q_wt_p,(X0q_wt,X1q_wt,q_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_l,(X0u_l,X1u_l,u_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_wt,(X0u_wt,X1u_wt,u_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_wt_p,(X0u_wt,X1u_wt,u_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_x_wt,(X0u_x_wt,X1u_x_wt,u_x_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,w_l,(X0w_l,X1w_l,w_l_length))&&\
CCTK_DECLARE(CCTK_REAL,w_wt,(X0w_wt,X1w_wt,w_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,w_wt_p,(X0w_wt,X1w_wt,w_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,x_wt,(X0x_wt,X1x_wt,x_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,x_wt_p,(X0x_wt,X1x_wt,x_wt_length))&&\


#define NULLSHREXTRACT_PROTECTED_FARGUMENTS \
SHRE_alpha_e_length,SHRE_beta_e_length,SHRE_dalpha_e_length,SHRE_dbeta_e_length,SHRE_dgij_e_length,SHRE_dgit_e_length,SHRE_gij_e_length,SHRE_git_e_length,WT_r0_length,X0SHRE_alpha_e,X0SHRE_beta_e,X0SHRE_dalpha_e,X0SHRE_dbeta_e,X0SHRE_dgij_e,X0SHRE_dgit_e,X0SHRE_gij_e,X0SHRE_git_e,X0WT_r0,X0beta_l,X0beta_wt,X0j_l,X0j_wt,X0q_wt,X0u_l,X0u_wt,X0u_x_wt,X0w_l,X0w_wt,X0x_wt,X1SHRE_alpha_e,X1SHRE_beta_e,X1SHRE_dalpha_e,X1SHRE_dbeta_e,X1SHRE_dgij_e,X1SHRE_dgit_e,X1SHRE_gij_e,X1SHRE_git_e,X1WT_r0,X1beta_l,X1beta_wt,X1j_l,X1j_wt,X1q_wt,X1u_l,X1u_wt,X1u_x_wt,X1w_l,X1w_wt,X1x_wt,beta_l_length,beta_wt_length,j_l_length,j_wt_length,q_wt_length,u_l_length,u_wt_length,u_x_wt_length,w_l_length,w_wt_length,x_wt_length,SHRE_alpha_e,SHRE_beta_e,SHRE_dpalpha_e,SHRE_dpbeta_e,SHRE_dpgij_e,SHRE_dpgit_e,SHRE_dqalpha_e,SHRE_dqbeta_e,SHRE_dqgij_e,SHRE_dqgit_e,SHRE_dralpha_e,SHRE_drbeta_e,SHRE_drgij_e,SHRE_drgit_e,SHRE_dtalpha_e,SHRE_dtbeta_e,SHRE_dtgij_e,SHRE_dtgit_e,SHRE_gij_e,SHRE_git_e,WT_r0,beta_l,beta_wt,beta_wt_p,j_l,j_wt,j_wt_p,q_wt,q_wt_p,u_l,u_wt,u_wt_p,u_x_wt,w_l,w_wt,w_wt_p,x_wt,x_wt_p

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLSHREXTRACT_PROTECTED_CARGUMENTS \
static int cctki_vi_SHRE_alpha_e = -100; \
if (cctki_vi_SHRE_alpha_e == -100) cctki_vi_SHRE_alpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_alpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_alpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_alpha_e)); \
static int cctki_vi_SHRE_beta_e = -100; \
if (cctki_vi_SHRE_beta_e == -100) cctki_vi_SHRE_beta_e = CCTK_VarIndex("NullSHRExtract::SHRE_beta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_beta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_beta_e)); \
static int cctki_vi_SHRE_dpalpha_e = -100; \
if (cctki_vi_SHRE_dpalpha_e == -100) cctki_vi_SHRE_dpalpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_dpalpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpalpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpalpha_e)); \
static int cctki_vi_SHRE_dpbeta_e = -100; \
if (cctki_vi_SHRE_dpbeta_e == -100) cctki_vi_SHRE_dpbeta_e = CCTK_VarIndex("NullSHRExtract::SHRE_dpbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpbeta_e)); \
static int cctki_vi_SHRE_dpgij_e = -100; \
if (cctki_vi_SHRE_dpgij_e == -100) cctki_vi_SHRE_dpgij_e = CCTK_VarIndex("NullSHRExtract::SHRE_dpgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpgij_e)); \
static int cctki_vi_SHRE_dpgit_e = -100; \
if (cctki_vi_SHRE_dpgit_e == -100) cctki_vi_SHRE_dpgit_e = CCTK_VarIndex("NullSHRExtract::SHRE_dpgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpgit_e)); \
static int cctki_vi_SHRE_dqalpha_e = -100; \
if (cctki_vi_SHRE_dqalpha_e == -100) cctki_vi_SHRE_dqalpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_dqalpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqalpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqalpha_e)); \
static int cctki_vi_SHRE_dqbeta_e = -100; \
if (cctki_vi_SHRE_dqbeta_e == -100) cctki_vi_SHRE_dqbeta_e = CCTK_VarIndex("NullSHRExtract::SHRE_dqbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqbeta_e)); \
static int cctki_vi_SHRE_dqgij_e = -100; \
if (cctki_vi_SHRE_dqgij_e == -100) cctki_vi_SHRE_dqgij_e = CCTK_VarIndex("NullSHRExtract::SHRE_dqgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqgij_e)); \
static int cctki_vi_SHRE_dqgit_e = -100; \
if (cctki_vi_SHRE_dqgit_e == -100) cctki_vi_SHRE_dqgit_e = CCTK_VarIndex("NullSHRExtract::SHRE_dqgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqgit_e)); \
static int cctki_vi_SHRE_dralpha_e = -100; \
if (cctki_vi_SHRE_dralpha_e == -100) cctki_vi_SHRE_dralpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_dralpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dralpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dralpha_e)); \
static int cctki_vi_SHRE_drbeta_e = -100; \
if (cctki_vi_SHRE_drbeta_e == -100) cctki_vi_SHRE_drbeta_e = CCTK_VarIndex("NullSHRExtract::SHRE_drbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drbeta_e)); \
static int cctki_vi_SHRE_drgij_e = -100; \
if (cctki_vi_SHRE_drgij_e == -100) cctki_vi_SHRE_drgij_e = CCTK_VarIndex("NullSHRExtract::SHRE_drgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drgij_e)); \
static int cctki_vi_SHRE_drgit_e = -100; \
if (cctki_vi_SHRE_drgit_e == -100) cctki_vi_SHRE_drgit_e = CCTK_VarIndex("NullSHRExtract::SHRE_drgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drgit_e)); \
static int cctki_vi_SHRE_dtalpha_e = -100; \
if (cctki_vi_SHRE_dtalpha_e == -100) cctki_vi_SHRE_dtalpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_dtalpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtalpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtalpha_e)); \
static int cctki_vi_SHRE_dtbeta_e = -100; \
if (cctki_vi_SHRE_dtbeta_e == -100) cctki_vi_SHRE_dtbeta_e = CCTK_VarIndex("NullSHRExtract::SHRE_dtbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtbeta_e)); \
static int cctki_vi_SHRE_dtgij_e = -100; \
if (cctki_vi_SHRE_dtgij_e == -100) cctki_vi_SHRE_dtgij_e = CCTK_VarIndex("NullSHRExtract::SHRE_dtgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtgij_e)); \
static int cctki_vi_SHRE_dtgit_e = -100; \
if (cctki_vi_SHRE_dtgit_e == -100) cctki_vi_SHRE_dtgit_e = CCTK_VarIndex("NullSHRExtract::SHRE_dtgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtgit_e)); \
static int cctki_vi_SHRE_gij_e = -100; \
if (cctki_vi_SHRE_gij_e == -100) cctki_vi_SHRE_gij_e = CCTK_VarIndex("NullSHRExtract::SHRE_gij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_gij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_gij_e)); \
static int cctki_vi_SHRE_git_e = -100; \
if (cctki_vi_SHRE_git_e == -100) cctki_vi_SHRE_git_e = CCTK_VarIndex("NullSHRExtract::SHRE_git_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_git_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_git_e)); \
static int cctki_vi_WT_r0 = -100; \
if (cctki_vi_WT_r0 == -100) cctki_vi_WT_r0 = CCTK_VarIndex("NullSHRExtract::WT_r0[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_r0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_r0)); \
static int cctki_vi_beta_l = -100; \
if (cctki_vi_beta_l == -100) cctki_vi_beta_l = CCTK_VarIndex("NullSHRExtract::beta_l[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta_l, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta_l)); \
static int cctki_vi_beta_wt = -100; \
if (cctki_vi_beta_wt == -100) cctki_vi_beta_wt = CCTK_VarIndex("NullSHRExtract::beta_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta_wt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta_wt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta_wt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_beta_wt)); \
static int cctki_vi_j_l = -100; \
if (cctki_vi_j_l == -100) cctki_vi_j_l = CCTK_VarIndex("NullSHRExtract::j_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, j_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_j_l)); \
static int cctki_vi_j_wt = -100; \
if (cctki_vi_j_wt == -100) cctki_vi_j_wt = CCTK_VarIndex("NullSHRExtract::j_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, j_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_j_wt)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, j_wt_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_j_wt)); \
static int cctki_vi_q_wt = -100; \
if (cctki_vi_q_wt == -100) cctki_vi_q_wt = CCTK_VarIndex("NullSHRExtract::q_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, q_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_q_wt)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, q_wt_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_q_wt)); \
static int cctki_vi_u_l = -100; \
if (cctki_vi_u_l == -100) cctki_vi_u_l = CCTK_VarIndex("NullSHRExtract::u_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_u_l)); \
static int cctki_vi_u_wt = -100; \
if (cctki_vi_u_wt == -100) cctki_vi_u_wt = CCTK_VarIndex("NullSHRExtract::u_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_u_wt)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_wt_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_u_wt)); \
static int cctki_vi_u_x_wt = -100; \
if (cctki_vi_u_x_wt == -100) cctki_vi_u_x_wt = CCTK_VarIndex("NullSHRExtract::u_x_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_x_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_u_x_wt)); \
static int cctki_vi_w_l = -100; \
if (cctki_vi_w_l == -100) cctki_vi_w_l = CCTK_VarIndex("NullSHRExtract::w_l[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_l, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_w_l)); \
static int cctki_vi_w_wt = -100; \
if (cctki_vi_w_wt == -100) cctki_vi_w_wt = CCTK_VarIndex("NullSHRExtract::w_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_wt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_w_wt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_wt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_w_wt)); \
static int cctki_vi_x_wt = -100; \
if (cctki_vi_x_wt == -100) cctki_vi_x_wt = CCTK_VarIndex("NullSHRExtract::x_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x_wt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x_wt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x_wt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_x_wt));

#define DECLARE_NULLSHREXTRACT_PROTECTED_C2F \
static int CCTKARGNUM_SHRE_alpha_e = -1; \
static int CCTKGROUPNUM_SHRE_alpha_e = -1; \
static int CCTKARGNUM_SHRE_beta_e = -1; \
static int CCTKGROUPNUM_SHRE_beta_e = -1; \
static int CCTKARGNUM_SHRE_dpalpha_e = -1; \
static int CCTKGROUPNUM_SHRE_dalpha_e = -1; \
static int CCTKARGNUM_SHRE_dpbeta_e = -1; \
static int CCTKGROUPNUM_SHRE_dbeta_e = -1; \
static int CCTKARGNUM_SHRE_dpgij_e = -1; \
static int CCTKGROUPNUM_SHRE_dgij_e = -1; \
static int CCTKARGNUM_SHRE_dpgit_e = -1; \
static int CCTKGROUPNUM_SHRE_dgit_e = -1; \
static int CCTKARGNUM_SHRE_dqalpha_e = -1; \
static int CCTKARGNUM_SHRE_dqbeta_e = -1; \
static int CCTKARGNUM_SHRE_dqgij_e = -1; \
static int CCTKARGNUM_SHRE_dqgit_e = -1; \
static int CCTKARGNUM_SHRE_dralpha_e = -1; \
static int CCTKARGNUM_SHRE_drbeta_e = -1; \
static int CCTKARGNUM_SHRE_drgij_e = -1; \
static int CCTKARGNUM_SHRE_drgit_e = -1; \
static int CCTKARGNUM_SHRE_dtalpha_e = -1; \
static int CCTKARGNUM_SHRE_dtbeta_e = -1; \
static int CCTKARGNUM_SHRE_dtgij_e = -1; \
static int CCTKARGNUM_SHRE_dtgit_e = -1; \
static int CCTKARGNUM_SHRE_gij_e = -1; \
static int CCTKGROUPNUM_SHRE_gij_e = -1; \
static int CCTKARGNUM_SHRE_git_e = -1; \
static int CCTKGROUPNUM_SHRE_git_e = -1; \
static int CCTKARGNUM_WT_r0 = -1; \
static int CCTKGROUPNUM_WT_r0 = -1; \
static int CCTKARGNUM_beta_l = -1; \
static int CCTKGROUPNUM_beta_l = -1; \
static int CCTKARGNUM_beta_wt = -1; \
static int CCTKGROUPNUM_beta_wt = -1; \
static int CCTKARGNUM_j_l = -1; \
static int CCTKGROUPNUM_j_l = -1; \
static int CCTKARGNUM_j_wt = -1; \
static int CCTKGROUPNUM_j_wt = -1; \
static int CCTKARGNUM_q_wt = -1; \
static int CCTKGROUPNUM_q_wt = -1; \
static int CCTKARGNUM_u_l = -1; \
static int CCTKGROUPNUM_u_l = -1; \
static int CCTKARGNUM_u_wt = -1; \
static int CCTKGROUPNUM_u_wt = -1; \
static int CCTKARGNUM_u_x_wt = -1; \
static int CCTKGROUPNUM_u_x_wt = -1; \
static int CCTKARGNUM_w_l = -1; \
static int CCTKGROUPNUM_w_l = -1; \
static int CCTKARGNUM_w_wt = -1; \
static int CCTKGROUPNUM_w_wt = -1; \
static int CCTKARGNUM_x_wt = -1; \
static int CCTKGROUPNUM_x_wt = -1;

#define INITIALISE_NULLSHREXTRACT_PROTECTED_C2F \
if(CCTKARGNUM_SHRE_alpha_e == -1) CCTKARGNUM_SHRE_alpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_alpha_e[0]"); \
if(CCTKGROUPNUM_SHRE_alpha_e == -1) CCTKGROUPNUM_SHRE_alpha_e = CCTK_GroupIndex("NullSHRExtract::SHRE_alpha_e"); \
if(CCTKARGNUM_SHRE_beta_e == -1) CCTKARGNUM_SHRE_beta_e = CCTK_VarIndex("NullSHRExtract::SHRE_beta_e[0]"); \
if(CCTKGROUPNUM_SHRE_beta_e == -1) CCTKGROUPNUM_SHRE_beta_e = CCTK_GroupIndex("NullSHRExtract::SHRE_beta_e"); \
if(CCTKARGNUM_SHRE_dpalpha_e == -1) CCTKARGNUM_SHRE_dpalpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_dpalpha_e[0]"); \
if(CCTKGROUPNUM_SHRE_dalpha_e == -1) CCTKGROUPNUM_SHRE_dalpha_e = CCTK_GroupIndex("NullSHRExtract::SHRE_dalpha_e"); \
if(CCTKARGNUM_SHRE_dpbeta_e == -1) CCTKARGNUM_SHRE_dpbeta_e = CCTK_VarIndex("NullSHRExtract::SHRE_dpbeta_e[0]"); \
if(CCTKGROUPNUM_SHRE_dbeta_e == -1) CCTKGROUPNUM_SHRE_dbeta_e = CCTK_GroupIndex("NullSHRExtract::SHRE_dbeta_e"); \
if(CCTKARGNUM_SHRE_dpgij_e == -1) CCTKARGNUM_SHRE_dpgij_e = CCTK_VarIndex("NullSHRExtract::SHRE_dpgij_e[0]"); \
if(CCTKGROUPNUM_SHRE_dgij_e == -1) CCTKGROUPNUM_SHRE_dgij_e = CCTK_GroupIndex("NullSHRExtract::SHRE_dgij_e"); \
if(CCTKARGNUM_SHRE_dpgit_e == -1) CCTKARGNUM_SHRE_dpgit_e = CCTK_VarIndex("NullSHRExtract::SHRE_dpgit_e[0]"); \
if(CCTKGROUPNUM_SHRE_dgit_e == -1) CCTKGROUPNUM_SHRE_dgit_e = CCTK_GroupIndex("NullSHRExtract::SHRE_dgit_e"); \
if(CCTKARGNUM_SHRE_dqalpha_e == -1) CCTKARGNUM_SHRE_dqalpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_dqalpha_e[0]"); \
if(CCTKARGNUM_SHRE_dqbeta_e == -1) CCTKARGNUM_SHRE_dqbeta_e = CCTK_VarIndex("NullSHRExtract::SHRE_dqbeta_e[0]"); \
if(CCTKARGNUM_SHRE_dqgij_e == -1) CCTKARGNUM_SHRE_dqgij_e = CCTK_VarIndex("NullSHRExtract::SHRE_dqgij_e[0]"); \
if(CCTKARGNUM_SHRE_dqgit_e == -1) CCTKARGNUM_SHRE_dqgit_e = CCTK_VarIndex("NullSHRExtract::SHRE_dqgit_e[0]"); \
if(CCTKARGNUM_SHRE_dralpha_e == -1) CCTKARGNUM_SHRE_dralpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_dralpha_e[0]"); \
if(CCTKARGNUM_SHRE_drbeta_e == -1) CCTKARGNUM_SHRE_drbeta_e = CCTK_VarIndex("NullSHRExtract::SHRE_drbeta_e[0]"); \
if(CCTKARGNUM_SHRE_drgij_e == -1) CCTKARGNUM_SHRE_drgij_e = CCTK_VarIndex("NullSHRExtract::SHRE_drgij_e[0]"); \
if(CCTKARGNUM_SHRE_drgit_e == -1) CCTKARGNUM_SHRE_drgit_e = CCTK_VarIndex("NullSHRExtract::SHRE_drgit_e[0]"); \
if(CCTKARGNUM_SHRE_dtalpha_e == -1) CCTKARGNUM_SHRE_dtalpha_e = CCTK_VarIndex("NullSHRExtract::SHRE_dtalpha_e[0]"); \
if(CCTKARGNUM_SHRE_dtbeta_e == -1) CCTKARGNUM_SHRE_dtbeta_e = CCTK_VarIndex("NullSHRExtract::SHRE_dtbeta_e[0]"); \
if(CCTKARGNUM_SHRE_dtgij_e == -1) CCTKARGNUM_SHRE_dtgij_e = CCTK_VarIndex("NullSHRExtract::SHRE_dtgij_e[0]"); \
if(CCTKARGNUM_SHRE_dtgit_e == -1) CCTKARGNUM_SHRE_dtgit_e = CCTK_VarIndex("NullSHRExtract::SHRE_dtgit_e[0]"); \
if(CCTKARGNUM_SHRE_gij_e == -1) CCTKARGNUM_SHRE_gij_e = CCTK_VarIndex("NullSHRExtract::SHRE_gij_e[0]"); \
if(CCTKGROUPNUM_SHRE_gij_e == -1) CCTKGROUPNUM_SHRE_gij_e = CCTK_GroupIndex("NullSHRExtract::SHRE_gij_e"); \
if(CCTKARGNUM_SHRE_git_e == -1) CCTKARGNUM_SHRE_git_e = CCTK_VarIndex("NullSHRExtract::SHRE_git_e[0]"); \
if(CCTKGROUPNUM_SHRE_git_e == -1) CCTKGROUPNUM_SHRE_git_e = CCTK_GroupIndex("NullSHRExtract::SHRE_git_e"); \
if(CCTKARGNUM_WT_r0 == -1) CCTKARGNUM_WT_r0 = CCTK_VarIndex("NullSHRExtract::WT_r0[0]"); \
if(CCTKGROUPNUM_WT_r0 == -1) CCTKGROUPNUM_WT_r0 = CCTK_GroupIndex("NullSHRExtract::WT_r0"); \
if(CCTKARGNUM_beta_l == -1) CCTKARGNUM_beta_l = CCTK_VarIndex("NullSHRExtract::beta_l[0]"); \
if(CCTKGROUPNUM_beta_l == -1) CCTKGROUPNUM_beta_l = CCTK_GroupIndex("NullSHRExtract::beta_l"); \
if(CCTKARGNUM_beta_wt == -1) CCTKARGNUM_beta_wt = CCTK_VarIndex("NullSHRExtract::beta_wt[0]"); \
if(CCTKGROUPNUM_beta_wt == -1) CCTKGROUPNUM_beta_wt = CCTK_GroupIndex("NullSHRExtract::beta_wt"); \
if(CCTKARGNUM_j_l == -1) CCTKARGNUM_j_l = CCTK_VarIndex("NullSHRExtract::j_l[0]"); \
if(CCTKGROUPNUM_j_l == -1) CCTKGROUPNUM_j_l = CCTK_GroupIndex("NullSHRExtract::j_l"); \
if(CCTKARGNUM_j_wt == -1) CCTKARGNUM_j_wt = CCTK_VarIndex("NullSHRExtract::j_wt[0]"); \
if(CCTKGROUPNUM_j_wt == -1) CCTKGROUPNUM_j_wt = CCTK_GroupIndex("NullSHRExtract::j_wt"); \
if(CCTKARGNUM_q_wt == -1) CCTKARGNUM_q_wt = CCTK_VarIndex("NullSHRExtract::q_wt[0]"); \
if(CCTKGROUPNUM_q_wt == -1) CCTKGROUPNUM_q_wt = CCTK_GroupIndex("NullSHRExtract::q_wt"); \
if(CCTKARGNUM_u_l == -1) CCTKARGNUM_u_l = CCTK_VarIndex("NullSHRExtract::u_l[0]"); \
if(CCTKGROUPNUM_u_l == -1) CCTKGROUPNUM_u_l = CCTK_GroupIndex("NullSHRExtract::u_l"); \
if(CCTKARGNUM_u_wt == -1) CCTKARGNUM_u_wt = CCTK_VarIndex("NullSHRExtract::u_wt[0]"); \
if(CCTKGROUPNUM_u_wt == -1) CCTKGROUPNUM_u_wt = CCTK_GroupIndex("NullSHRExtract::u_wt"); \
if(CCTKARGNUM_u_x_wt == -1) CCTKARGNUM_u_x_wt = CCTK_VarIndex("NullSHRExtract::u_x_wt[0]"); \
if(CCTKGROUPNUM_u_x_wt == -1) CCTKGROUPNUM_u_x_wt = CCTK_GroupIndex("NullSHRExtract::u_x_wt"); \
if(CCTKARGNUM_w_l == -1) CCTKARGNUM_w_l = CCTK_VarIndex("NullSHRExtract::w_l[0]"); \
if(CCTKGROUPNUM_w_l == -1) CCTKGROUPNUM_w_l = CCTK_GroupIndex("NullSHRExtract::w_l"); \
if(CCTKARGNUM_w_wt == -1) CCTKARGNUM_w_wt = CCTK_VarIndex("NullSHRExtract::w_wt[0]"); \
if(CCTKGROUPNUM_w_wt == -1) CCTKGROUPNUM_w_wt = CCTK_GroupIndex("NullSHRExtract::w_wt"); \
if(CCTKARGNUM_x_wt == -1) CCTKARGNUM_x_wt = CCTK_VarIndex("NullSHRExtract::x_wt[0]"); \
if(CCTKGROUPNUM_x_wt == -1) CCTKGROUPNUM_x_wt = CCTK_GroupIndex("NullSHRExtract::x_wt");

#define NULLSHREXTRACT_PROTECTED_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_NULLSHREXTRACT_PROTECTED_C2F(GH) \
PASS_GROUPLEN(NullSHRExtract, SHRE_alpha_e),\
PASS_GROUPLEN(NullSHRExtract, SHRE_beta_e),\
PASS_GROUPLEN(NullSHRExtract, SHRE_dalpha_e),\
PASS_GROUPLEN(NullSHRExtract, SHRE_dbeta_e),\
PASS_GROUPLEN(NullSHRExtract, SHRE_dgij_e),\
PASS_GROUPLEN(NullSHRExtract, SHRE_dgit_e),\
PASS_GROUPLEN(NullSHRExtract, SHRE_gij_e),\
PASS_GROUPLEN(NullSHRExtract, SHRE_git_e),\
PASS_GROUPLEN(NullSHRExtract, WT_r0),\
PASS_GROUPSIZE(SHRE_alpha_e, 0),\
PASS_GROUPSIZE(SHRE_beta_e, 0),\
PASS_GROUPSIZE(SHRE_dalpha_e, 0),\
PASS_GROUPSIZE(SHRE_dbeta_e, 0),\
PASS_GROUPSIZE(SHRE_dgij_e, 0),\
PASS_GROUPSIZE(SHRE_dgit_e, 0),\
PASS_GROUPSIZE(SHRE_gij_e, 0),\
PASS_GROUPSIZE(SHRE_git_e, 0),\
PASS_GROUPSIZE(WT_r0, 0),\
PASS_GROUPSIZE(beta_l, 0),\
PASS_GROUPSIZE(beta_wt, 0),\
PASS_GROUPSIZE(j_l, 0),\
PASS_GROUPSIZE(j_wt, 0),\
PASS_GROUPSIZE(q_wt, 0),\
PASS_GROUPSIZE(u_l, 0),\
PASS_GROUPSIZE(u_wt, 0),\
PASS_GROUPSIZE(u_x_wt, 0),\
PASS_GROUPSIZE(w_l, 0),\
PASS_GROUPSIZE(w_wt, 0),\
PASS_GROUPSIZE(x_wt, 0),\
PASS_GROUPSIZE(SHRE_alpha_e, 1),\
PASS_GROUPSIZE(SHRE_beta_e, 1),\
PASS_GROUPSIZE(SHRE_dalpha_e, 1),\
PASS_GROUPSIZE(SHRE_dbeta_e, 1),\
PASS_GROUPSIZE(SHRE_dgij_e, 1),\
PASS_GROUPSIZE(SHRE_dgit_e, 1),\
PASS_GROUPSIZE(SHRE_gij_e, 1),\
PASS_GROUPSIZE(SHRE_git_e, 1),\
PASS_GROUPSIZE(WT_r0, 1),\
PASS_GROUPSIZE(beta_l, 1),\
PASS_GROUPSIZE(beta_wt, 1),\
PASS_GROUPSIZE(j_l, 1),\
PASS_GROUPSIZE(j_wt, 1),\
PASS_GROUPSIZE(q_wt, 1),\
PASS_GROUPSIZE(u_l, 1),\
PASS_GROUPSIZE(u_wt, 1),\
PASS_GROUPSIZE(u_x_wt, 1),\
PASS_GROUPSIZE(w_l, 1),\
PASS_GROUPSIZE(w_wt, 1),\
PASS_GROUPSIZE(x_wt, 1),\
PASS_GROUPLEN(NullSHRExtract, beta_l),\
PASS_GROUPLEN(NullSHRExtract, beta_wt),\
PASS_GROUPLEN(NullSHRExtract, j_l),\
PASS_GROUPLEN(NullSHRExtract, j_wt),\
PASS_GROUPLEN(NullSHRExtract, q_wt),\
PASS_GROUPLEN(NullSHRExtract, u_l),\
PASS_GROUPLEN(NullSHRExtract, u_wt),\
PASS_GROUPLEN(NullSHRExtract, u_x_wt),\
PASS_GROUPLEN(NullSHRExtract, w_l),\
PASS_GROUPLEN(NullSHRExtract, w_wt),\
PASS_GROUPLEN(NullSHRExtract, x_wt),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_alpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_beta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpalpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqalpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dralpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtalpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_gij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_git_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_r0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta_l, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(j_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(j_wt, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(j_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(q_wt, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(q_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_wt, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_x_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_l, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_wt, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(x_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x_wt, 1))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLSHREXTRACT_PUBLIC_FARGUMENTS \
INTEGER SHRE_alpha_length&&\
INTEGER SHRE_beta_length&&\
INTEGER SHRE_dalpha_length&&\
INTEGER SHRE_dbeta_length&&\
INTEGER SHRE_dgij_length&&\
INTEGER SHRE_dgit_length&&\
INTEGER SHRE_gij_length&&\
INTEGER SHRE_git_length&&\
INTEGER X0EG_mask&&\
INTEGER X0EQ_mask&&\
INTEGER X0EV_mask&&\
INTEGER X0NullGrParArrI&&\
INTEGER X0NullGrParArrR&&\
INTEGER X0RadCrd&&\
INTEGER X0SHRE_alpha&&\
INTEGER X0SHRE_beta&&\
INTEGER X0SHRE_dalpha&&\
INTEGER X0SHRE_dbeta&&\
INTEGER X0SHRE_dgij&&\
INTEGER X0SHRE_dgit&&\
INTEGER X0SHRE_gij&&\
INTEGER X0SHRE_git&&\
INTEGER X0StCmCrd&&\
INTEGER X0StCrd&&\
INTEGER X0cmplxcharfuncs_aux&&\
INTEGER X0cmplxcharfuncs_basic&&\
INTEGER X0guard_mask&&\
INTEGER X0null_mask&&\
INTEGER X0realcharfuncs&&\
INTEGER X0tmp_cgf&&\
INTEGER X0tmp_cgf3&&\
INTEGER X0tmp_rgf&&\
INTEGER X1EG_mask&&\
INTEGER X1EQ_mask&&\
INTEGER X1EV_mask&&\
INTEGER X1SHRE_alpha&&\
INTEGER X1SHRE_beta&&\
INTEGER X1SHRE_dalpha&&\
INTEGER X1SHRE_dbeta&&\
INTEGER X1SHRE_dgij&&\
INTEGER X1SHRE_dgit&&\
INTEGER X1SHRE_gij&&\
INTEGER X1SHRE_git&&\
INTEGER X1StCmCrd&&\
INTEGER X1StCrd&&\
INTEGER X1cmplxcharfuncs_aux&&\
INTEGER X1cmplxcharfuncs_basic&&\
INTEGER X1guard_mask&&\
INTEGER X1null_mask&&\
INTEGER X1realcharfuncs&&\
INTEGER X1tmp_cgf&&\
INTEGER X1tmp_cgf3&&\
INTEGER X1tmp_rgf&&\
INTEGER cmplxcharfuncs_aux_length&&\
INTEGER cmplxcharfuncs_basic_length&&\
INTEGER realcharfuncs_length&&\
CCTK_DECLARE(CCTK_INT,EG_mask,(X0EG_mask,X1EG_mask))&&\
CCTK_DECLARE(CCTK_INT,EQ_mask,(X0EQ_mask,X1EQ_mask))&&\
CCTK_DECLARE(CCTK_INT,EV_mask,(X0EV_mask,X1EV_mask))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_alpha,(X0SHRE_alpha,X1SHRE_alpha,SHRE_alpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_alpha_p,(X0SHRE_alpha,X1SHRE_alpha,SHRE_alpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_alpha_p_p,(X0SHRE_alpha,X1SHRE_alpha,SHRE_alpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_beta,(X0SHRE_beta,X1SHRE_beta,SHRE_beta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_beta_p,(X0SHRE_beta,X1SHRE_beta,SHRE_beta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_beta_p_p,(X0SHRE_beta,X1SHRE_beta,SHRE_beta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpalpha,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpalpha_p,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpalpha_p_p,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpbeta,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpbeta_p,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpbeta_p_p,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgij,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgij_p,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgij_p_p,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgit,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgit_p,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgit_p_p,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqalpha,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqalpha_p,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqalpha_p_p,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqbeta,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqbeta_p,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqbeta_p_p,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgij,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgij_p,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgij_p_p,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgit,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgit_p,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgit_p_p,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dralpha,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dralpha_p,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dralpha_p_p,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drbeta,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drbeta_p,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drbeta_p_p,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgij,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgij_p,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgij_p_p,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgit,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgit_p,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgit_p_p,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtalpha,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtalpha_p,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtalpha_p_p,(X0SHRE_dalpha,X1SHRE_dalpha,SHRE_dalpha_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtbeta,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtbeta_p,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtbeta_p_p,(X0SHRE_dbeta,X1SHRE_dbeta,SHRE_dbeta_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgij,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgij_p,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgij_p_p,(X0SHRE_dgij,X1SHRE_dgij,SHRE_dgij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgit,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgit_p,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgit_p_p,(X0SHRE_dgit,X1SHRE_dgit,SHRE_dgit_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_gij,(X0SHRE_gij,X1SHRE_gij,SHRE_gij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_gij_p,(X0SHRE_gij,X1SHRE_gij,SHRE_gij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_gij_p_p,(X0SHRE_gij,X1SHRE_gij,SHRE_gij_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_git,(X0SHRE_git,X1SHRE_git,SHRE_git_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_git_p,(X0SHRE_git,X1SHRE_git,SHRE_git_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_git_p_p,(X0SHRE_git,X1SHRE_git,SHRE_git_length))&&\
CCTK_DECLARE(CCTK_REAL,bcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_INT,boundary_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,boundary_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_INT,evolution_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,evolution_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_REAL,evolution_radius,)&&\
CCTK_DECLARE(CCTK_INT,guard_mask,(X0guard_mask,X1guard_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_REAL,null_delta,(X0NullGrParArrR))&&\
CCTK_DECLARE(CCTK_REAL,null_dx,)&&\
CCTK_DECLARE(CCTK_INT,null_gsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lbnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_rb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_rbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_INT,null_ubnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_xb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_xbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_REAL,qsize,)&&\
CCTK_DECLARE(CCTK_REAL,stereo_p,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_pp,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_q,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfn,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfs,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,zeta,(X0StCmCrd,X1StCmCrd))&&\


#define NULLSHREXTRACT_PUBLIC_FARGUMENTS \
SHRE_alpha_length,SHRE_beta_length,SHRE_dalpha_length,SHRE_dbeta_length,SHRE_dgij_length,SHRE_dgit_length,SHRE_gij_length,SHRE_git_length,X0EG_mask,X0EQ_mask,X0EV_mask,X0NullGrParArrI,X0NullGrParArrR,X0RadCrd,X0SHRE_alpha,X0SHRE_beta,X0SHRE_dalpha,X0SHRE_dbeta,X0SHRE_dgij,X0SHRE_dgit,X0SHRE_gij,X0SHRE_git,X0StCmCrd,X0StCrd,X0cmplxcharfuncs_aux,X0cmplxcharfuncs_basic,X0guard_mask,X0null_mask,X0realcharfuncs,X0tmp_cgf,X0tmp_cgf3,X0tmp_rgf,X1EG_mask,X1EQ_mask,X1EV_mask,X1SHRE_alpha,X1SHRE_beta,X1SHRE_dalpha,X1SHRE_dbeta,X1SHRE_dgij,X1SHRE_dgit,X1SHRE_gij,X1SHRE_git,X1StCmCrd,X1StCrd,X1cmplxcharfuncs_aux,X1cmplxcharfuncs_basic,X1guard_mask,X1null_mask,X1realcharfuncs,X1tmp_cgf,X1tmp_cgf3,X1tmp_rgf,cmplxcharfuncs_aux_length,cmplxcharfuncs_basic_length,realcharfuncs_length,EG_mask,EQ_mask,EV_mask,SHRE_alpha,SHRE_alpha_p,SHRE_alpha_p_p,SHRE_beta,SHRE_beta_p,SHRE_beta_p_p,SHRE_dpalpha,SHRE_dpalpha_p,SHRE_dpalpha_p_p,SHRE_dpbeta,SHRE_dpbeta_p,SHRE_dpbeta_p_p,SHRE_dpgij,SHRE_dpgij_p,SHRE_dpgij_p_p,SHRE_dpgit,SHRE_dpgit_p,SHRE_dpgit_p_p,SHRE_dqalpha,SHRE_dqalpha_p,SHRE_dqalpha_p_p,SHRE_dqbeta,SHRE_dqbeta_p,SHRE_dqbeta_p_p,SHRE_dqgij,SHRE_dqgij_p,SHRE_dqgij_p_p,SHRE_dqgit,SHRE_dqgit_p,SHRE_dqgit_p_p,SHRE_dralpha,SHRE_dralpha_p,SHRE_dralpha_p_p,SHRE_drbeta,SHRE_drbeta_p,SHRE_drbeta_p_p,SHRE_drgij,SHRE_drgij_p,SHRE_drgij_p_p,SHRE_drgit,SHRE_drgit_p,SHRE_drgit_p_p,SHRE_dtalpha,SHRE_dtalpha_p,SHRE_dtalpha_p_p,SHRE_dtbeta,SHRE_dtbeta_p,SHRE_dtbeta_p_p,SHRE_dtgij,SHRE_dtgij_p,SHRE_dtgij_p_p,SHRE_dtgit,SHRE_dtgit_p,SHRE_dtgit_p_p,SHRE_gij,SHRE_gij_p,SHRE_gij_p_p,SHRE_git,SHRE_git_p,SHRE_git_p_p,bcn,bcn_p,bcs,bcs_p,boundary_maskn,boundary_masks,cbcn,cbcn_p,cbcs,cbcs_p,ckcn,ckcn_p,ckcs,ckcs_p,dxjcn,dxjcn_p,dxjcs,dxjcs_p,eth2jcn,eth2jcn_p,eth2jcs,eth2jcs_p,evolution_maskn,evolution_masks,evolution_radius,guard_mask,jcn,jcn_p,jcs,jcs_p,nucn,nucn_p,nucs,nucs_p,null_delta,null_dx,null_gsh,null_lbnd,null_lsh,null_rb,null_rbh,null_ubnd,null_xb,null_xbh,qcn,qcn_p,qcs,qcs_p,qsize,stereo_p,stereo_pp,stereo_q,tmp_cgfn,tmp_cgfn1,tmp_cgfn2,tmp_cgfn3,tmp_cgfs,tmp_cgfs1,tmp_cgfs2,tmp_cgfs3,tmp_rgfn,tmp_rgfs,ucn,ucn_p,ucs,ucs_p,wcn,wcn_p,wcs,wcs_p,zeta

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLSHREXTRACT_PUBLIC_CARGUMENTS \
static int cctki_vi_EG_mask = -100; \
if (cctki_vi_EG_mask == -100) cctki_vi_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EG_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EG_mask)); \
static int cctki_vi_EQ_mask = -100; \
if (cctki_vi_EQ_mask == -100) cctki_vi_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EQ_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EQ_mask)); \
static int cctki_vi_EV_mask = -100; \
if (cctki_vi_EV_mask == -100) cctki_vi_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EV_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EV_mask)); \
static int cctki_vi_SHRE_alpha = -100; \
if (cctki_vi_SHRE_alpha == -100) cctki_vi_SHRE_alpha = CCTK_VarIndex("NullSHRExtract::SHRE_alpha[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_alpha, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_alpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_alpha_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_alpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_alpha_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_alpha)); \
static int cctki_vi_SHRE_beta = -100; \
if (cctki_vi_SHRE_beta == -100) cctki_vi_SHRE_beta = CCTK_VarIndex("NullSHRExtract::SHRE_beta[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_beta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_beta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_beta_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_beta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_beta_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_beta)); \
static int cctki_vi_SHRE_dpalpha = -100; \
if (cctki_vi_SHRE_dpalpha == -100) cctki_vi_SHRE_dpalpha = CCTK_VarIndex("NullSHRExtract::SHRE_dpalpha[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpalpha, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpalpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpalpha_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dpalpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpalpha_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dpalpha)); \
static int cctki_vi_SHRE_dpbeta = -100; \
if (cctki_vi_SHRE_dpbeta == -100) cctki_vi_SHRE_dpbeta = CCTK_VarIndex("NullSHRExtract::SHRE_dpbeta[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpbeta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpbeta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpbeta_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dpbeta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpbeta_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dpbeta)); \
static int cctki_vi_SHRE_dpgij = -100; \
if (cctki_vi_SHRE_dpgij == -100) cctki_vi_SHRE_dpgij = CCTK_VarIndex("NullSHRExtract::SHRE_dpgij[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgij, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpgij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgij_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dpgij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgij_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dpgij)); \
static int cctki_vi_SHRE_dpgit = -100; \
if (cctki_vi_SHRE_dpgit == -100) cctki_vi_SHRE_dpgit = CCTK_VarIndex("NullSHRExtract::SHRE_dpgit[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgit, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpgit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgit_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dpgit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgit_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dpgit)); \
static int cctki_vi_SHRE_dqalpha = -100; \
if (cctki_vi_SHRE_dqalpha == -100) cctki_vi_SHRE_dqalpha = CCTK_VarIndex("NullSHRExtract::SHRE_dqalpha[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqalpha, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqalpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqalpha_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dqalpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqalpha_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dqalpha)); \
static int cctki_vi_SHRE_dqbeta = -100; \
if (cctki_vi_SHRE_dqbeta == -100) cctki_vi_SHRE_dqbeta = CCTK_VarIndex("NullSHRExtract::SHRE_dqbeta[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqbeta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqbeta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqbeta_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dqbeta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqbeta_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dqbeta)); \
static int cctki_vi_SHRE_dqgij = -100; \
if (cctki_vi_SHRE_dqgij == -100) cctki_vi_SHRE_dqgij = CCTK_VarIndex("NullSHRExtract::SHRE_dqgij[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgij, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqgij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgij_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dqgij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgij_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dqgij)); \
static int cctki_vi_SHRE_dqgit = -100; \
if (cctki_vi_SHRE_dqgit == -100) cctki_vi_SHRE_dqgit = CCTK_VarIndex("NullSHRExtract::SHRE_dqgit[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgit, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqgit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgit_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dqgit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgit_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dqgit)); \
static int cctki_vi_SHRE_dralpha = -100; \
if (cctki_vi_SHRE_dralpha == -100) cctki_vi_SHRE_dralpha = CCTK_VarIndex("NullSHRExtract::SHRE_dralpha[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dralpha, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dralpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dralpha_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dralpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dralpha_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dralpha)); \
static int cctki_vi_SHRE_drbeta = -100; \
if (cctki_vi_SHRE_drbeta == -100) cctki_vi_SHRE_drbeta = CCTK_VarIndex("NullSHRExtract::SHRE_drbeta[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drbeta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drbeta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drbeta_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_drbeta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drbeta_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_drbeta)); \
static int cctki_vi_SHRE_drgij = -100; \
if (cctki_vi_SHRE_drgij == -100) cctki_vi_SHRE_drgij = CCTK_VarIndex("NullSHRExtract::SHRE_drgij[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgij, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drgij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgij_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_drgij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgij_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_drgij)); \
static int cctki_vi_SHRE_drgit = -100; \
if (cctki_vi_SHRE_drgit == -100) cctki_vi_SHRE_drgit = CCTK_VarIndex("NullSHRExtract::SHRE_drgit[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgit, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drgit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgit_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_drgit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgit_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_drgit)); \
static int cctki_vi_SHRE_dtalpha = -100; \
if (cctki_vi_SHRE_dtalpha == -100) cctki_vi_SHRE_dtalpha = CCTK_VarIndex("NullSHRExtract::SHRE_dtalpha[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtalpha, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtalpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtalpha_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dtalpha)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtalpha_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dtalpha)); \
static int cctki_vi_SHRE_dtbeta = -100; \
if (cctki_vi_SHRE_dtbeta == -100) cctki_vi_SHRE_dtbeta = CCTK_VarIndex("NullSHRExtract::SHRE_dtbeta[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtbeta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtbeta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtbeta_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dtbeta)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtbeta_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dtbeta)); \
static int cctki_vi_SHRE_dtgij = -100; \
if (cctki_vi_SHRE_dtgij == -100) cctki_vi_SHRE_dtgij = CCTK_VarIndex("NullSHRExtract::SHRE_dtgij[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgij, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtgij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgij_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dtgij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgij_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dtgij)); \
static int cctki_vi_SHRE_dtgit = -100; \
if (cctki_vi_SHRE_dtgit == -100) cctki_vi_SHRE_dtgit = CCTK_VarIndex("NullSHRExtract::SHRE_dtgit[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgit, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtgit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgit_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_dtgit)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgit_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_dtgit)); \
static int cctki_vi_SHRE_gij = -100; \
if (cctki_vi_SHRE_gij == -100) cctki_vi_SHRE_gij = CCTK_VarIndex("NullSHRExtract::SHRE_gij[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_gij, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_gij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_gij_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_gij)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_gij_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_gij)); \
static int cctki_vi_SHRE_git = -100; \
if (cctki_vi_SHRE_git == -100) cctki_vi_SHRE_git = CCTK_VarIndex("NullSHRExtract::SHRE_git[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_git, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_git)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_git_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_SHRE_git)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_git_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_SHRE_git)); \
static int cctki_vi_bcn = -100; \
if (cctki_vi_bcn == -100) cctki_vi_bcn = CCTK_VarIndex("NULLVARS::bcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcn)); \
static int cctki_vi_bcs = -100; \
if (cctki_vi_bcs == -100) cctki_vi_bcs = CCTK_VarIndex("NULLVARS::bcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcs)); \
static int cctki_vi_boundary_maskn = -100; \
if (cctki_vi_boundary_maskn == -100) cctki_vi_boundary_maskn = CCTK_VarIndex("NULLVARS::boundary_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_maskn)); \
static int cctki_vi_boundary_masks = -100; \
if (cctki_vi_boundary_masks == -100) cctki_vi_boundary_masks = CCTK_VarIndex("NULLVARS::boundary_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_masks)); \
static int cctki_vi_cbcn = -100; \
if (cctki_vi_cbcn == -100) cctki_vi_cbcn = CCTK_VarIndex("NULLVARS::cbcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcn)); \
static int cctki_vi_cbcs = -100; \
if (cctki_vi_cbcs == -100) cctki_vi_cbcs = CCTK_VarIndex("NULLVARS::cbcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcs)); \
static int cctki_vi_ckcn = -100; \
if (cctki_vi_ckcn == -100) cctki_vi_ckcn = CCTK_VarIndex("NULLVARS::ckcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcn)); \
static int cctki_vi_ckcs = -100; \
if (cctki_vi_ckcs == -100) cctki_vi_ckcs = CCTK_VarIndex("NULLVARS::ckcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcs)); \
static int cctki_vi_dxjcn = -100; \
if (cctki_vi_dxjcn == -100) cctki_vi_dxjcn = CCTK_VarIndex("NULLVARS::dxjcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcn)); \
static int cctki_vi_dxjcs = -100; \
if (cctki_vi_dxjcs == -100) cctki_vi_dxjcs = CCTK_VarIndex("NULLVARS::dxjcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcs)); \
static int cctki_vi_eth2jcn = -100; \
if (cctki_vi_eth2jcn == -100) cctki_vi_eth2jcn = CCTK_VarIndex("NULLVARS::eth2jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcn)); \
static int cctki_vi_eth2jcs = -100; \
if (cctki_vi_eth2jcs == -100) cctki_vi_eth2jcs = CCTK_VarIndex("NULLVARS::eth2jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcs)); \
static int cctki_vi_evolution_maskn = -100; \
if (cctki_vi_evolution_maskn == -100) cctki_vi_evolution_maskn = CCTK_VarIndex("NULLVARS::evolution_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_maskn)); \
static int cctki_vi_evolution_masks = -100; \
if (cctki_vi_evolution_masks == -100) cctki_vi_evolution_masks = CCTK_VarIndex("NULLVARS::evolution_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_masks)); \
static int cctki_vi_evolution_radius = -100; \
if (cctki_vi_evolution_radius == -100) cctki_vi_evolution_radius = CCTK_VarIndex("NULLINTERP::evolution_radius"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, evolution_radius, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_radius)); \
static int cctki_vi_guard_mask = -100; \
if (cctki_vi_guard_mask == -100) cctki_vi_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, guard_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_guard_mask)); \
static int cctki_vi_jcn = -100; \
if (cctki_vi_jcn == -100) cctki_vi_jcn = CCTK_VarIndex("NULLVARS::jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcn)); \
static int cctki_vi_jcs = -100; \
if (cctki_vi_jcs == -100) cctki_vi_jcs = CCTK_VarIndex("NULLVARS::jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcs)); \
static int cctki_vi_nucn = -100; \
if (cctki_vi_nucn == -100) cctki_vi_nucn = CCTK_VarIndex("NULLVARS::nucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucn)); \
static int cctki_vi_nucs = -100; \
if (cctki_vi_nucs == -100) cctki_vi_nucs = CCTK_VarIndex("NULLVARS::nucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucs)); \
static int cctki_vi_null_delta = -100; \
if (cctki_vi_null_delta == -100) cctki_vi_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_delta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_delta)); \
static int cctki_vi_null_dx = -100; \
if (cctki_vi_null_dx == -100) cctki_vi_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_dx)); \
static int cctki_vi_null_gsh = -100; \
if (cctki_vi_null_gsh == -100) cctki_vi_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_gsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_gsh)); \
static int cctki_vi_null_lbnd = -100; \
if (cctki_vi_null_lbnd == -100) cctki_vi_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lbnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lbnd)); \
static int cctki_vi_null_lsh = -100; \
if (cctki_vi_null_lsh == -100) cctki_vi_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lsh)); \
static int cctki_vi_null_rb = -100; \
if (cctki_vi_null_rb == -100) cctki_vi_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rb)); \
static int cctki_vi_null_rbh = -100; \
if (cctki_vi_null_rbh == -100) cctki_vi_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rbh)); \
static int cctki_vi_null_ubnd = -100; \
if (cctki_vi_null_ubnd == -100) cctki_vi_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_ubnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_ubnd)); \
static int cctki_vi_null_xb = -100; \
if (cctki_vi_null_xb == -100) cctki_vi_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xb)); \
static int cctki_vi_null_xbh = -100; \
if (cctki_vi_null_xbh == -100) cctki_vi_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xbh)); \
static int cctki_vi_qcn = -100; \
if (cctki_vi_qcn == -100) cctki_vi_qcn = CCTK_VarIndex("NULLVARS::qcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcn)); \
static int cctki_vi_qcs = -100; \
if (cctki_vi_qcs == -100) cctki_vi_qcs = CCTK_VarIndex("NULLVARS::qcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcs)); \
static int cctki_vi_qsize = -100; \
if (cctki_vi_qsize == -100) cctki_vi_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, qsize, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qsize)); \
static int cctki_vi_stereo_p = -100; \
if (cctki_vi_stereo_p == -100) cctki_vi_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_p)); \
static int cctki_vi_stereo_pp = -100; \
if (cctki_vi_stereo_pp == -100) cctki_vi_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_pp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_pp)); \
static int cctki_vi_stereo_q = -100; \
if (cctki_vi_stereo_q == -100) cctki_vi_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_q, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_q)); \
static int cctki_vi_tmp_cgfn = -100; \
if (cctki_vi_tmp_cgfn == -100) cctki_vi_tmp_cgfn = CCTK_VarIndex("NULLINTERP::tmp_cgfn"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn)); \
static int cctki_vi_tmp_cgfn1 = -100; \
if (cctki_vi_tmp_cgfn1 == -100) cctki_vi_tmp_cgfn1 = CCTK_VarIndex("NULLINTERP::tmp_cgfn1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn1)); \
static int cctki_vi_tmp_cgfn2 = -100; \
if (cctki_vi_tmp_cgfn2 == -100) cctki_vi_tmp_cgfn2 = CCTK_VarIndex("NULLINTERP::tmp_cgfn2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn2)); \
static int cctki_vi_tmp_cgfn3 = -100; \
if (cctki_vi_tmp_cgfn3 == -100) cctki_vi_tmp_cgfn3 = CCTK_VarIndex("NULLINTERP::tmp_cgfn3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn3)); \
static int cctki_vi_tmp_cgfs = -100; \
if (cctki_vi_tmp_cgfs == -100) cctki_vi_tmp_cgfs = CCTK_VarIndex("NULLINTERP::tmp_cgfs"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs)); \
static int cctki_vi_tmp_cgfs1 = -100; \
if (cctki_vi_tmp_cgfs1 == -100) cctki_vi_tmp_cgfs1 = CCTK_VarIndex("NULLINTERP::tmp_cgfs1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs1)); \
static int cctki_vi_tmp_cgfs2 = -100; \
if (cctki_vi_tmp_cgfs2 == -100) cctki_vi_tmp_cgfs2 = CCTK_VarIndex("NULLINTERP::tmp_cgfs2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs2)); \
static int cctki_vi_tmp_cgfs3 = -100; \
if (cctki_vi_tmp_cgfs3 == -100) cctki_vi_tmp_cgfs3 = CCTK_VarIndex("NULLINTERP::tmp_cgfs3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs3)); \
static int cctki_vi_tmp_rgfn = -100; \
if (cctki_vi_tmp_rgfn == -100) cctki_vi_tmp_rgfn = CCTK_VarIndex("NULLINTERP::tmp_rgfn"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfn)); \
static int cctki_vi_tmp_rgfs = -100; \
if (cctki_vi_tmp_rgfs == -100) cctki_vi_tmp_rgfs = CCTK_VarIndex("NULLINTERP::tmp_rgfs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfs)); \
static int cctki_vi_ucn = -100; \
if (cctki_vi_ucn == -100) cctki_vi_ucn = CCTK_VarIndex("NULLVARS::ucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucn)); \
static int cctki_vi_ucs = -100; \
if (cctki_vi_ucs == -100) cctki_vi_ucs = CCTK_VarIndex("NULLVARS::ucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucs)); \
static int cctki_vi_wcn = -100; \
if (cctki_vi_wcn == -100) cctki_vi_wcn = CCTK_VarIndex("NULLVARS::wcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcn)); \
static int cctki_vi_wcs = -100; \
if (cctki_vi_wcs == -100) cctki_vi_wcs = CCTK_VarIndex("NULLVARS::wcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcs)); \
static int cctki_vi_zeta = -100; \
if (cctki_vi_zeta == -100) cctki_vi_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, zeta, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zeta));

#define DECLARE_NULLSHREXTRACT_PUBLIC_C2F \
static int CCTKARGNUM_EG_mask = -1; \
static int CCTKGROUPNUM_EG_mask = -1; \
static int CCTKARGNUM_EQ_mask = -1; \
static int CCTKGROUPNUM_EQ_mask = -1; \
static int CCTKARGNUM_EV_mask = -1; \
static int CCTKGROUPNUM_EV_mask = -1; \
static int CCTKARGNUM_SHRE_alpha = -1; \
static int CCTKGROUPNUM_SHRE_alpha = -1; \
static int CCTKARGNUM_SHRE_beta = -1; \
static int CCTKGROUPNUM_SHRE_beta = -1; \
static int CCTKARGNUM_SHRE_dpalpha = -1; \
static int CCTKGROUPNUM_SHRE_dalpha = -1; \
static int CCTKARGNUM_SHRE_dpbeta = -1; \
static int CCTKGROUPNUM_SHRE_dbeta = -1; \
static int CCTKARGNUM_SHRE_dpgij = -1; \
static int CCTKGROUPNUM_SHRE_dgij = -1; \
static int CCTKARGNUM_SHRE_dpgit = -1; \
static int CCTKGROUPNUM_SHRE_dgit = -1; \
static int CCTKARGNUM_SHRE_dqalpha = -1; \
static int CCTKARGNUM_SHRE_dqbeta = -1; \
static int CCTKARGNUM_SHRE_dqgij = -1; \
static int CCTKARGNUM_SHRE_dqgit = -1; \
static int CCTKARGNUM_SHRE_dralpha = -1; \
static int CCTKARGNUM_SHRE_drbeta = -1; \
static int CCTKARGNUM_SHRE_drgij = -1; \
static int CCTKARGNUM_SHRE_drgit = -1; \
static int CCTKARGNUM_SHRE_dtalpha = -1; \
static int CCTKARGNUM_SHRE_dtbeta = -1; \
static int CCTKARGNUM_SHRE_dtgij = -1; \
static int CCTKARGNUM_SHRE_dtgit = -1; \
static int CCTKARGNUM_SHRE_gij = -1; \
static int CCTKGROUPNUM_SHRE_gij = -1; \
static int CCTKARGNUM_SHRE_git = -1; \
static int CCTKGROUPNUM_SHRE_git = -1; \
static int CCTKARGNUM_bcn = -1; \
static int CCTKGROUPNUM_realcharfuncs = -1; \
static int CCTKARGNUM_bcs = -1; \
static int CCTKARGNUM_boundary_maskn = -1; \
static int CCTKGROUPNUM_null_mask = -1; \
static int CCTKARGNUM_boundary_masks = -1; \
static int CCTKARGNUM_cbcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_aux = -1; \
static int CCTKARGNUM_cbcs = -1; \
static int CCTKARGNUM_ckcn = -1; \
static int CCTKARGNUM_ckcs = -1; \
static int CCTKARGNUM_dxjcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_basic = -1; \
static int CCTKARGNUM_dxjcs = -1; \
static int CCTKARGNUM_eth2jcn = -1; \
static int CCTKARGNUM_eth2jcs = -1; \
static int CCTKARGNUM_evolution_maskn = -1; \
static int CCTKARGNUM_evolution_masks = -1; \
static int CCTKARGNUM_evolution_radius = -1; \
static int CCTKGROUPNUM_evolution_radius = -1; \
static int CCTKARGNUM_guard_mask = -1; \
static int CCTKGROUPNUM_guard_mask = -1; \
static int CCTKARGNUM_jcn = -1; \
static int CCTKARGNUM_jcs = -1; \
static int CCTKARGNUM_nucn = -1; \
static int CCTKARGNUM_nucs = -1; \
static int CCTKARGNUM_null_delta = -1; \
static int CCTKGROUPNUM_NullGrParArrR = -1; \
static int CCTKARGNUM_null_dx = -1; \
static int CCTKGROUPNUM_NullSclr = -1; \
static int CCTKARGNUM_null_gsh = -1; \
static int CCTKGROUPNUM_NullGrParArrI = -1; \
static int CCTKARGNUM_null_lbnd = -1; \
static int CCTKARGNUM_null_lsh = -1; \
static int CCTKARGNUM_null_rb = -1; \
static int CCTKGROUPNUM_RadCrd = -1; \
static int CCTKARGNUM_null_rbh = -1; \
static int CCTKARGNUM_null_ubnd = -1; \
static int CCTKARGNUM_null_xb = -1; \
static int CCTKARGNUM_null_xbh = -1; \
static int CCTKARGNUM_qcn = -1; \
static int CCTKARGNUM_qcs = -1; \
static int CCTKARGNUM_qsize = -1; \
static int CCTKARGNUM_stereo_p = -1; \
static int CCTKGROUPNUM_StCrd = -1; \
static int CCTKARGNUM_stereo_pp = -1; \
static int CCTKARGNUM_stereo_q = -1; \
static int CCTKARGNUM_tmp_cgfn = -1; \
static int CCTKGROUPNUM_tmp_cgf = -1; \
static int CCTKARGNUM_tmp_cgfn1 = -1; \
static int CCTKGROUPNUM_tmp_cgf3 = -1; \
static int CCTKARGNUM_tmp_cgfn2 = -1; \
static int CCTKARGNUM_tmp_cgfn3 = -1; \
static int CCTKARGNUM_tmp_cgfs = -1; \
static int CCTKARGNUM_tmp_cgfs1 = -1; \
static int CCTKARGNUM_tmp_cgfs2 = -1; \
static int CCTKARGNUM_tmp_cgfs3 = -1; \
static int CCTKARGNUM_tmp_rgfn = -1; \
static int CCTKGROUPNUM_tmp_rgf = -1; \
static int CCTKARGNUM_tmp_rgfs = -1; \
static int CCTKARGNUM_ucn = -1; \
static int CCTKARGNUM_ucs = -1; \
static int CCTKARGNUM_wcn = -1; \
static int CCTKARGNUM_wcs = -1; \
static int CCTKARGNUM_zeta = -1; \
static int CCTKGROUPNUM_StCmCrd = -1;

#define INITIALISE_NULLSHREXTRACT_PUBLIC_C2F \
if(CCTKARGNUM_EG_mask == -1) CCTKARGNUM_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
if(CCTKGROUPNUM_EG_mask == -1) CCTKGROUPNUM_EG_mask = CCTK_GroupIndex("NULLGRID::EG_mask"); \
if(CCTKARGNUM_EQ_mask == -1) CCTKARGNUM_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
if(CCTKGROUPNUM_EQ_mask == -1) CCTKGROUPNUM_EQ_mask = CCTK_GroupIndex("NULLGRID::EQ_mask"); \
if(CCTKARGNUM_EV_mask == -1) CCTKARGNUM_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
if(CCTKGROUPNUM_EV_mask == -1) CCTKGROUPNUM_EV_mask = CCTK_GroupIndex("NULLGRID::EV_mask"); \
if(CCTKARGNUM_SHRE_alpha == -1) CCTKARGNUM_SHRE_alpha = CCTK_VarIndex("NullSHRExtract::SHRE_alpha[0]"); \
if(CCTKGROUPNUM_SHRE_alpha == -1) CCTKGROUPNUM_SHRE_alpha = CCTK_GroupIndex("NullSHRExtract::SHRE_alpha"); \
if(CCTKARGNUM_SHRE_beta == -1) CCTKARGNUM_SHRE_beta = CCTK_VarIndex("NullSHRExtract::SHRE_beta[0]"); \
if(CCTKGROUPNUM_SHRE_beta == -1) CCTKGROUPNUM_SHRE_beta = CCTK_GroupIndex("NullSHRExtract::SHRE_beta"); \
if(CCTKARGNUM_SHRE_dpalpha == -1) CCTKARGNUM_SHRE_dpalpha = CCTK_VarIndex("NullSHRExtract::SHRE_dpalpha[0]"); \
if(CCTKGROUPNUM_SHRE_dalpha == -1) CCTKGROUPNUM_SHRE_dalpha = CCTK_GroupIndex("NullSHRExtract::SHRE_dalpha"); \
if(CCTKARGNUM_SHRE_dpbeta == -1) CCTKARGNUM_SHRE_dpbeta = CCTK_VarIndex("NullSHRExtract::SHRE_dpbeta[0]"); \
if(CCTKGROUPNUM_SHRE_dbeta == -1) CCTKGROUPNUM_SHRE_dbeta = CCTK_GroupIndex("NullSHRExtract::SHRE_dbeta"); \
if(CCTKARGNUM_SHRE_dpgij == -1) CCTKARGNUM_SHRE_dpgij = CCTK_VarIndex("NullSHRExtract::SHRE_dpgij[0]"); \
if(CCTKGROUPNUM_SHRE_dgij == -1) CCTKGROUPNUM_SHRE_dgij = CCTK_GroupIndex("NullSHRExtract::SHRE_dgij"); \
if(CCTKARGNUM_SHRE_dpgit == -1) CCTKARGNUM_SHRE_dpgit = CCTK_VarIndex("NullSHRExtract::SHRE_dpgit[0]"); \
if(CCTKGROUPNUM_SHRE_dgit == -1) CCTKGROUPNUM_SHRE_dgit = CCTK_GroupIndex("NullSHRExtract::SHRE_dgit"); \
if(CCTKARGNUM_SHRE_dqalpha == -1) CCTKARGNUM_SHRE_dqalpha = CCTK_VarIndex("NullSHRExtract::SHRE_dqalpha[0]"); \
if(CCTKARGNUM_SHRE_dqbeta == -1) CCTKARGNUM_SHRE_dqbeta = CCTK_VarIndex("NullSHRExtract::SHRE_dqbeta[0]"); \
if(CCTKARGNUM_SHRE_dqgij == -1) CCTKARGNUM_SHRE_dqgij = CCTK_VarIndex("NullSHRExtract::SHRE_dqgij[0]"); \
if(CCTKARGNUM_SHRE_dqgit == -1) CCTKARGNUM_SHRE_dqgit = CCTK_VarIndex("NullSHRExtract::SHRE_dqgit[0]"); \
if(CCTKARGNUM_SHRE_dralpha == -1) CCTKARGNUM_SHRE_dralpha = CCTK_VarIndex("NullSHRExtract::SHRE_dralpha[0]"); \
if(CCTKARGNUM_SHRE_drbeta == -1) CCTKARGNUM_SHRE_drbeta = CCTK_VarIndex("NullSHRExtract::SHRE_drbeta[0]"); \
if(CCTKARGNUM_SHRE_drgij == -1) CCTKARGNUM_SHRE_drgij = CCTK_VarIndex("NullSHRExtract::SHRE_drgij[0]"); \
if(CCTKARGNUM_SHRE_drgit == -1) CCTKARGNUM_SHRE_drgit = CCTK_VarIndex("NullSHRExtract::SHRE_drgit[0]"); \
if(CCTKARGNUM_SHRE_dtalpha == -1) CCTKARGNUM_SHRE_dtalpha = CCTK_VarIndex("NullSHRExtract::SHRE_dtalpha[0]"); \
if(CCTKARGNUM_SHRE_dtbeta == -1) CCTKARGNUM_SHRE_dtbeta = CCTK_VarIndex("NullSHRExtract::SHRE_dtbeta[0]"); \
if(CCTKARGNUM_SHRE_dtgij == -1) CCTKARGNUM_SHRE_dtgij = CCTK_VarIndex("NullSHRExtract::SHRE_dtgij[0]"); \
if(CCTKARGNUM_SHRE_dtgit == -1) CCTKARGNUM_SHRE_dtgit = CCTK_VarIndex("NullSHRExtract::SHRE_dtgit[0]"); \
if(CCTKARGNUM_SHRE_gij == -1) CCTKARGNUM_SHRE_gij = CCTK_VarIndex("NullSHRExtract::SHRE_gij[0]"); \
if(CCTKGROUPNUM_SHRE_gij == -1) CCTKGROUPNUM_SHRE_gij = CCTK_GroupIndex("NullSHRExtract::SHRE_gij"); \
if(CCTKARGNUM_SHRE_git == -1) CCTKARGNUM_SHRE_git = CCTK_VarIndex("NullSHRExtract::SHRE_git[0]"); \
if(CCTKGROUPNUM_SHRE_git == -1) CCTKGROUPNUM_SHRE_git = CCTK_GroupIndex("NullSHRExtract::SHRE_git"); \
if(CCTKARGNUM_bcn == -1) CCTKARGNUM_bcn = CCTK_VarIndex("NULLVARS::bcn[0]"); \
if(CCTKGROUPNUM_realcharfuncs == -1) CCTKGROUPNUM_realcharfuncs = CCTK_GroupIndex("NULLVARS::realcharfuncs"); \
if(CCTKARGNUM_bcs == -1) CCTKARGNUM_bcs = CCTK_VarIndex("NULLVARS::bcs[0]"); \
if(CCTKARGNUM_boundary_maskn == -1) CCTKARGNUM_boundary_maskn = CCTK_VarIndex("NULLVARS::boundary_maskn"); \
if(CCTKGROUPNUM_null_mask == -1) CCTKGROUPNUM_null_mask = CCTK_GroupIndex("NULLVARS::null_mask"); \
if(CCTKARGNUM_boundary_masks == -1) CCTKARGNUM_boundary_masks = CCTK_VarIndex("NULLVARS::boundary_masks"); \
if(CCTKARGNUM_cbcn == -1) CCTKARGNUM_cbcn = CCTK_VarIndex("NULLVARS::cbcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_aux == -1) CCTKGROUPNUM_cmplxcharfuncs_aux = CCTK_GroupIndex("NULLVARS::cmplxcharfuncs_aux"); \
if(CCTKARGNUM_cbcs == -1) CCTKARGNUM_cbcs = CCTK_VarIndex("NULLVARS::cbcs[0]"); \
if(CCTKARGNUM_ckcn == -1) CCTKARGNUM_ckcn = CCTK_VarIndex("NULLVARS::ckcn[0]"); \
if(CCTKARGNUM_ckcs == -1) CCTKARGNUM_ckcs = CCTK_VarIndex("NULLVARS::ckcs[0]"); \
if(CCTKARGNUM_dxjcn == -1) CCTKARGNUM_dxjcn = CCTK_VarIndex("NULLVARS::dxjcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_basic == -1) CCTKGROUPNUM_cmplxcharfuncs_basic = CCTK_GroupIndex("NULLVARS::cmplxcharfuncs_basic"); \
if(CCTKARGNUM_dxjcs == -1) CCTKARGNUM_dxjcs = CCTK_VarIndex("NULLVARS::dxjcs[0]"); \
if(CCTKARGNUM_eth2jcn == -1) CCTKARGNUM_eth2jcn = CCTK_VarIndex("NULLVARS::eth2jcn[0]"); \
if(CCTKARGNUM_eth2jcs == -1) CCTKARGNUM_eth2jcs = CCTK_VarIndex("NULLVARS::eth2jcs[0]"); \
if(CCTKARGNUM_evolution_maskn == -1) CCTKARGNUM_evolution_maskn = CCTK_VarIndex("NULLVARS::evolution_maskn"); \
if(CCTKARGNUM_evolution_masks == -1) CCTKARGNUM_evolution_masks = CCTK_VarIndex("NULLVARS::evolution_masks"); \
if(CCTKARGNUM_evolution_radius == -1) CCTKARGNUM_evolution_radius = CCTK_VarIndex("NULLINTERP::evolution_radius"); \
if(CCTKGROUPNUM_evolution_radius == -1) CCTKGROUPNUM_evolution_radius = CCTK_GroupIndex("NULLINTERP::evolution_radius"); \
if(CCTKARGNUM_guard_mask == -1) CCTKARGNUM_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
if(CCTKGROUPNUM_guard_mask == -1) CCTKGROUPNUM_guard_mask = CCTK_GroupIndex("NULLGRID::guard_mask"); \
if(CCTKARGNUM_jcn == -1) CCTKARGNUM_jcn = CCTK_VarIndex("NULLVARS::jcn[0]"); \
if(CCTKARGNUM_jcs == -1) CCTKARGNUM_jcs = CCTK_VarIndex("NULLVARS::jcs[0]"); \
if(CCTKARGNUM_nucn == -1) CCTKARGNUM_nucn = CCTK_VarIndex("NULLVARS::nucn[0]"); \
if(CCTKARGNUM_nucs == -1) CCTKARGNUM_nucs = CCTK_VarIndex("NULLVARS::nucs[0]"); \
if(CCTKARGNUM_null_delta == -1) CCTKARGNUM_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
if(CCTKGROUPNUM_NullGrParArrR == -1) CCTKGROUPNUM_NullGrParArrR = CCTK_GroupIndex("NULLGRID::NullGrParArrR"); \
if(CCTKARGNUM_null_dx == -1) CCTKARGNUM_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
if(CCTKGROUPNUM_NullSclr == -1) CCTKGROUPNUM_NullSclr = CCTK_GroupIndex("NULLGRID::NullSclr"); \
if(CCTKARGNUM_null_gsh == -1) CCTKARGNUM_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
if(CCTKGROUPNUM_NullGrParArrI == -1) CCTKGROUPNUM_NullGrParArrI = CCTK_GroupIndex("NULLGRID::NullGrParArrI"); \
if(CCTKARGNUM_null_lbnd == -1) CCTKARGNUM_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
if(CCTKARGNUM_null_lsh == -1) CCTKARGNUM_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
if(CCTKARGNUM_null_rb == -1) CCTKARGNUM_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
if(CCTKGROUPNUM_RadCrd == -1) CCTKGROUPNUM_RadCrd = CCTK_GroupIndex("NULLGRID::RadCrd"); \
if(CCTKARGNUM_null_rbh == -1) CCTKARGNUM_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
if(CCTKARGNUM_null_ubnd == -1) CCTKARGNUM_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
if(CCTKARGNUM_null_xb == -1) CCTKARGNUM_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
if(CCTKARGNUM_null_xbh == -1) CCTKARGNUM_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
if(CCTKARGNUM_qcn == -1) CCTKARGNUM_qcn = CCTK_VarIndex("NULLVARS::qcn[0]"); \
if(CCTKARGNUM_qcs == -1) CCTKARGNUM_qcs = CCTK_VarIndex("NULLVARS::qcs[0]"); \
if(CCTKARGNUM_qsize == -1) CCTKARGNUM_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
if(CCTKARGNUM_stereo_p == -1) CCTKARGNUM_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
if(CCTKGROUPNUM_StCrd == -1) CCTKGROUPNUM_StCrd = CCTK_GroupIndex("NULLGRID::StCrd"); \
if(CCTKARGNUM_stereo_pp == -1) CCTKARGNUM_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
if(CCTKARGNUM_stereo_q == -1) CCTKARGNUM_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
if(CCTKARGNUM_tmp_cgfn == -1) CCTKARGNUM_tmp_cgfn = CCTK_VarIndex("NULLINTERP::tmp_cgfn"); \
if(CCTKGROUPNUM_tmp_cgf == -1) CCTKGROUPNUM_tmp_cgf = CCTK_GroupIndex("NULLINTERP::tmp_cgf"); \
if(CCTKARGNUM_tmp_cgfn1 == -1) CCTKARGNUM_tmp_cgfn1 = CCTK_VarIndex("NULLINTERP::tmp_cgfn1"); \
if(CCTKGROUPNUM_tmp_cgf3 == -1) CCTKGROUPNUM_tmp_cgf3 = CCTK_GroupIndex("NULLINTERP::tmp_cgf3"); \
if(CCTKARGNUM_tmp_cgfn2 == -1) CCTKARGNUM_tmp_cgfn2 = CCTK_VarIndex("NULLINTERP::tmp_cgfn2"); \
if(CCTKARGNUM_tmp_cgfn3 == -1) CCTKARGNUM_tmp_cgfn3 = CCTK_VarIndex("NULLINTERP::tmp_cgfn3"); \
if(CCTKARGNUM_tmp_cgfs == -1) CCTKARGNUM_tmp_cgfs = CCTK_VarIndex("NULLINTERP::tmp_cgfs"); \
if(CCTKARGNUM_tmp_cgfs1 == -1) CCTKARGNUM_tmp_cgfs1 = CCTK_VarIndex("NULLINTERP::tmp_cgfs1"); \
if(CCTKARGNUM_tmp_cgfs2 == -1) CCTKARGNUM_tmp_cgfs2 = CCTK_VarIndex("NULLINTERP::tmp_cgfs2"); \
if(CCTKARGNUM_tmp_cgfs3 == -1) CCTKARGNUM_tmp_cgfs3 = CCTK_VarIndex("NULLINTERP::tmp_cgfs3"); \
if(CCTKARGNUM_tmp_rgfn == -1) CCTKARGNUM_tmp_rgfn = CCTK_VarIndex("NULLINTERP::tmp_rgfn"); \
if(CCTKGROUPNUM_tmp_rgf == -1) CCTKGROUPNUM_tmp_rgf = CCTK_GroupIndex("NULLINTERP::tmp_rgf"); \
if(CCTKARGNUM_tmp_rgfs == -1) CCTKARGNUM_tmp_rgfs = CCTK_VarIndex("NULLINTERP::tmp_rgfs"); \
if(CCTKARGNUM_ucn == -1) CCTKARGNUM_ucn = CCTK_VarIndex("NULLVARS::ucn[0]"); \
if(CCTKARGNUM_ucs == -1) CCTKARGNUM_ucs = CCTK_VarIndex("NULLVARS::ucs[0]"); \
if(CCTKARGNUM_wcn == -1) CCTKARGNUM_wcn = CCTK_VarIndex("NULLVARS::wcn[0]"); \
if(CCTKARGNUM_wcs == -1) CCTKARGNUM_wcs = CCTK_VarIndex("NULLVARS::wcs[0]"); \
if(CCTKARGNUM_zeta == -1) CCTKARGNUM_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
if(CCTKGROUPNUM_StCmCrd == -1) CCTKGROUPNUM_StCmCrd = CCTK_GroupIndex("NULLGRID::StCmCrd");

#define NULLSHREXTRACT_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int

#define PASS_NULLSHREXTRACT_PUBLIC_C2F(GH) \
PASS_GROUPLEN(NullSHRExtract, SHRE_alpha),\
PASS_GROUPLEN(NullSHRExtract, SHRE_beta),\
PASS_GROUPLEN(NullSHRExtract, SHRE_dalpha),\
PASS_GROUPLEN(NullSHRExtract, SHRE_dbeta),\
PASS_GROUPLEN(NullSHRExtract, SHRE_dgij),\
PASS_GROUPLEN(NullSHRExtract, SHRE_dgit),\
PASS_GROUPLEN(NullSHRExtract, SHRE_gij),\
PASS_GROUPLEN(NullSHRExtract, SHRE_git),\
PASS_GROUPSIZE(EG_mask, 0),\
PASS_GROUPSIZE(EQ_mask, 0),\
PASS_GROUPSIZE(EV_mask, 0),\
PASS_GROUPSIZE(NullGrParArrI, 0),\
PASS_GROUPSIZE(NullGrParArrR, 0),\
PASS_GROUPSIZE(RadCrd, 0),\
PASS_GROUPSIZE(SHRE_alpha, 0),\
PASS_GROUPSIZE(SHRE_beta, 0),\
PASS_GROUPSIZE(SHRE_dalpha, 0),\
PASS_GROUPSIZE(SHRE_dbeta, 0),\
PASS_GROUPSIZE(SHRE_dgij, 0),\
PASS_GROUPSIZE(SHRE_dgit, 0),\
PASS_GROUPSIZE(SHRE_gij, 0),\
PASS_GROUPSIZE(SHRE_git, 0),\
PASS_GROUPSIZE(StCmCrd, 0),\
PASS_GROUPSIZE(StCrd, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_aux, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 0),\
PASS_GROUPSIZE(guard_mask, 0),\
PASS_GROUPSIZE(null_mask, 0),\
PASS_GROUPSIZE(realcharfuncs, 0),\
PASS_GROUPSIZE(tmp_cgf, 0),\
PASS_GROUPSIZE(tmp_cgf3, 0),\
PASS_GROUPSIZE(tmp_rgf, 0),\
PASS_GROUPSIZE(EG_mask, 1),\
PASS_GROUPSIZE(EQ_mask, 1),\
PASS_GROUPSIZE(EV_mask, 1),\
PASS_GROUPSIZE(SHRE_alpha, 1),\
PASS_GROUPSIZE(SHRE_beta, 1),\
PASS_GROUPSIZE(SHRE_dalpha, 1),\
PASS_GROUPSIZE(SHRE_dbeta, 1),\
PASS_GROUPSIZE(SHRE_dgij, 1),\
PASS_GROUPSIZE(SHRE_dgit, 1),\
PASS_GROUPSIZE(SHRE_gij, 1),\
PASS_GROUPSIZE(SHRE_git, 1),\
PASS_GROUPSIZE(StCmCrd, 1),\
PASS_GROUPSIZE(StCrd, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_aux, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 1),\
PASS_GROUPSIZE(guard_mask, 1),\
PASS_GROUPSIZE(null_mask, 1),\
PASS_GROUPSIZE(realcharfuncs, 1),\
PASS_GROUPSIZE(tmp_cgf, 1),\
PASS_GROUPSIZE(tmp_cgf3, 1),\
PASS_GROUPSIZE(tmp_rgf, 1),\
PASS_GROUPLEN(NULLVARS, cmplxcharfuncs_aux),\
PASS_GROUPLEN(NULLVARS, cmplxcharfuncs_basic),\
PASS_GROUPLEN(NULLVARS, realcharfuncs),\
(CCTK_INT *)(PASS_REFERENCE(EG_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EQ_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EV_mask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_alpha, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_alpha, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_alpha, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_beta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_beta, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_beta, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpalpha, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpalpha, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpalpha, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpbeta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpbeta, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpbeta, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgij, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgij, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgij, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgit, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgit, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgit, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqalpha, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqalpha, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqalpha, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqbeta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqbeta, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqbeta, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgij, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgij, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgij, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgit, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgit, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgit, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dralpha, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dralpha, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dralpha, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drbeta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drbeta, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drbeta, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgij, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgij, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgij, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgit, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgit, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgit, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtalpha, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtalpha, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtalpha, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtbeta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtbeta, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtbeta, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgij, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgij, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgij, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgit, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgit, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgit, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_gij, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_gij, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_gij, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_git, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_git, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_git, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_masks, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_masks, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(evolution_radius, 0)),\
(CCTK_INT *)(PASS_REFERENCE(guard_mask, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(null_delta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_dx, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_gsh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lbnd, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lsh, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rbh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_ubnd, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xbh, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(qsize, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_pp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_q, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn3, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(zeta, 0))

#endif /* CCODE */

#ifdef FCODE
#define NULLSHREXTRACT_FARGUMENTS _CCTK_FARGUMENTS, NULLSHREXTRACT_PRIVATE_FARGUMENTS, NULLSHREXTRACT_PROTECTED_FARGUMENTS, NULLSHREXTRACT_PUBLIC_FARGUMENTS

#define DECLARE_NULLSHREXTRACT_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_NULLSHREXTRACT_PRIVATE_FARGUMENTS DECLARE_NULLSHREXTRACT_PROTECTED_FARGUMENTS DECLARE_NULLSHREXTRACT_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLSHREXTRACT_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_NULLSHREXTRACT_PRIVATE_CARGUMENTS DECLARE_NULLSHREXTRACT_PROTECTED_CARGUMENTS DECLARE_NULLSHREXTRACT_PUBLIC_CARGUMENTS

#define NULLSHREXTRACT_C2F_PROTO _CCTK_C2F_PROTO, NULLSHREXTRACT_PRIVATE_C2F_PROTO, NULLSHREXTRACT_PROTECTED_C2F_PROTO, NULLSHREXTRACT_PUBLIC_C2F_PROTO

#define PASS_NULLSHREXTRACT_C2F(GH) _PASS_CCTK_C2F(GH), PASS_NULLSHREXTRACT_PRIVATE_C2F(GH), PASS_NULLSHREXTRACT_PROTECTED_C2F(GH), PASS_NULLSHREXTRACT_PUBLIC_C2F(GH)

#define DECLARE_NULLSHREXTRACT_C2F _DECLARE_CCTK_C2F DECLARE_NULLSHREXTRACT_PRIVATE_C2F DECLARE_NULLSHREXTRACT_PROTECTED_C2F DECLARE_NULLSHREXTRACT_PUBLIC_C2F

#define INITIALISE_NULLSHREXTRACT_C2F _INITIALISE_CCTK_C2F INITIALISE_NULLSHREXTRACT_PRIVATE_C2F INITIALISE_NULLSHREXTRACT_PROTECTED_C2F INITIALISE_NULLSHREXTRACT_PUBLIC_C2F

#define NULLSHREXTRACT_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
