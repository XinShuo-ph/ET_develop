/*@@
   @header  CT_Analytic_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn CT_Analytic
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_CT_ANALYTIC_PRIVATE_FARGUMENTS \


#define CT_ANALYTIC_PRIVATE_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CT_ANALYTIC_PRIVATE_CARGUMENTS \


#define DECLARE_CT_ANALYTIC_PRIVATE_C2F \


#define INITIALISE_CT_ANALYTIC_PRIVATE_C2F \


#define CT_ANALYTIC_PRIVATE_C2F_PROTO \


#define PASS_CT_ANALYTIC_PRIVATE_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_CT_ANALYTIC_PROTECTED_FARGUMENTS \


#define CT_ANALYTIC_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CT_ANALYTIC_PROTECTED_CARGUMENTS \


#define DECLARE_CT_ANALYTIC_PROTECTED_C2F \


#define INITIALISE_CT_ANALYTIC_PROTECTED_C2F \


#define CT_ANALYTIC_PROTECTED_C2F_PROTO \


#define PASS_CT_ANALYTIC_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_CT_ANALYTIC_PUBLIC_FARGUMENTS \
CCTK_DECLARE(CCTK_REAL,coarse_dx,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dy,)&&\
CCTK_DECLARE(CCTK_REAL,coarse_dz,)&&\
CCTK_DECLARE(CCTK_REAL,elaplacian,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,elaplacian_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,elaplacian_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,epsi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,epsi_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,epsi_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,r,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAzz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAzz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testAzz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testK,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testK_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testK_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testW,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testW_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testW_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testXx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testXx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testXx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testXy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testXy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testXy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testXz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testXz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testXz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testZ,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testZ_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testZ_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa0,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa0_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa0_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa1,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa1_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa1_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa2_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa2_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa3_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa3_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa4,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa4_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testa4_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc0,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc0_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc0_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc1,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc1_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc1_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc2,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc2_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc2_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc3,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc3_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc3_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc4,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc4_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testc4_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcxx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcxx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcxx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcxy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcxy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcxy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcxz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcxz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcxz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcyy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcyy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcyy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcyz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcyz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcyz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testcz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testczz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testczz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testczz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testdxK,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testdxK_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testdxK_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testdyK,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testdyK_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testdyK_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testdzK,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testdzK_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testdzK_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinipsi,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinipsi_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinipsi_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinixx,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinixx_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinixx_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinixy,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinixy_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinixy_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinixz,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinixz_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,testinixz_p_p,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,x,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,y,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,z,(cctk_ash1,cctk_ash2,cctk_ash3))&&\


#define CT_ANALYTIC_PUBLIC_FARGUMENTS \
coarse_dx,coarse_dy,coarse_dz,elaplacian,elaplacian_p,elaplacian_p_p,epsi,epsi_p,epsi_p_p,r,testAxx,testAxx_p,testAxx_p_p,testAxy,testAxy_p,testAxy_p_p,testAxz,testAxz_p,testAxz_p_p,testAyy,testAyy_p,testAyy_p_p,testAyz,testAyz_p,testAyz_p_p,testAzz,testAzz_p,testAzz_p_p,testK,testK_p,testK_p_p,testW,testW_p,testW_p_p,testXx,testXx_p,testXx_p_p,testXy,testXy_p,testXy_p_p,testXz,testXz_p,testXz_p_p,testZ,testZ_p,testZ_p_p,testa0,testa0_p,testa0_p_p,testa1,testa1_p,testa1_p_p,testa2,testa2_p,testa2_p_p,testa3,testa3_p,testa3_p_p,testa4,testa4_p,testa4_p_p,testc0,testc0_p,testc0_p_p,testc1,testc1_p,testc1_p_p,testc2,testc2_p,testc2_p_p,testc3,testc3_p,testc3_p_p,testc4,testc4_p,testc4_p_p,testcx,testcx_p,testcx_p_p,testcxx,testcxx_p,testcxx_p_p,testcxy,testcxy_p,testcxy_p_p,testcxz,testcxz_p,testcxz_p_p,testcy,testcy_p,testcy_p_p,testcyy,testcyy_p,testcyy_p_p,testcyz,testcyz_p,testcyz_p_p,testcz,testcz_p,testcz_p_p,testczz,testczz_p,testczz_p_p,testdxK,testdxK_p,testdxK_p_p,testdyK,testdyK_p,testdyK_p_p,testdzK,testdzK_p,testdzK_p_p,testinipsi,testinipsi_p,testinipsi_p_p,testinixx,testinixx_p,testinixx_p_p,testinixy,testinixy_p,testinixy_p_p,testinixz,testinixz_p,testinixz_p_p,x,y,z

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CT_ANALYTIC_PUBLIC_CARGUMENTS \
static int cctki_vi_coarse_dx = -100; \
if (cctki_vi_coarse_dx == -100) cctki_vi_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dx)); \
static int cctki_vi_coarse_dy = -100; \
if (cctki_vi_coarse_dy == -100) cctki_vi_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dy)); \
static int cctki_vi_coarse_dz = -100; \
if (cctki_vi_coarse_dz == -100) cctki_vi_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, coarse_dz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_coarse_dz)); \
static int cctki_vi_elaplacian = -100; \
if (cctki_vi_elaplacian == -100) cctki_vi_elaplacian = CCTK_VarIndex("CT_Analytic::elaplacian"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, elaplacian, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_elaplacian)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, elaplacian_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_elaplacian)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, elaplacian_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_elaplacian)); \
static int cctki_vi_epsi = -100; \
if (cctki_vi_epsi == -100) cctki_vi_epsi = CCTK_VarIndex("CT_Analytic::epsi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, epsi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_epsi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, epsi_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_epsi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, epsi_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_epsi)); \
static int cctki_vi_r = -100; \
if (cctki_vi_r == -100) cctki_vi_r = CCTK_VarIndex("GRID::r"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_r)); \
static int cctki_vi_testAxx = -100; \
if (cctki_vi_testAxx == -100) cctki_vi_testAxx = CCTK_VarIndex("CT_Analytic::testAxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testAxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testAxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testAxx)); \
static int cctki_vi_testAxy = -100; \
if (cctki_vi_testAxy == -100) cctki_vi_testAxy = CCTK_VarIndex("CT_Analytic::testAxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testAxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testAxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testAxy)); \
static int cctki_vi_testAxz = -100; \
if (cctki_vi_testAxz == -100) cctki_vi_testAxz = CCTK_VarIndex("CT_Analytic::testAxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testAxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testAxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testAxz)); \
static int cctki_vi_testAyy = -100; \
if (cctki_vi_testAyy == -100) cctki_vi_testAyy = CCTK_VarIndex("CT_Analytic::testAyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testAyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testAyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testAyy)); \
static int cctki_vi_testAyz = -100; \
if (cctki_vi_testAyz == -100) cctki_vi_testAyz = CCTK_VarIndex("CT_Analytic::testAyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testAyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testAyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testAyz)); \
static int cctki_vi_testAzz = -100; \
if (cctki_vi_testAzz == -100) cctki_vi_testAzz = CCTK_VarIndex("CT_Analytic::testAzz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAzz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testAzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAzz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testAzz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testAzz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testAzz)); \
static int cctki_vi_testK = -100; \
if (cctki_vi_testK == -100) cctki_vi_testK = CCTK_VarIndex("CT_Analytic::testK"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testK, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testK_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testK_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testK)); \
static int cctki_vi_testW = -100; \
if (cctki_vi_testW == -100) cctki_vi_testW = CCTK_VarIndex("CT_Analytic::testW"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testW, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testW)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testW_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testW)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testW_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testW)); \
static int cctki_vi_testXx = -100; \
if (cctki_vi_testXx == -100) cctki_vi_testXx = CCTK_VarIndex("CT_Analytic::testXx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testXx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testXx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testXx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testXx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testXx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testXx)); \
static int cctki_vi_testXy = -100; \
if (cctki_vi_testXy == -100) cctki_vi_testXy = CCTK_VarIndex("CT_Analytic::testXy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testXy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testXy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testXy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testXy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testXy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testXy)); \
static int cctki_vi_testXz = -100; \
if (cctki_vi_testXz == -100) cctki_vi_testXz = CCTK_VarIndex("CT_Analytic::testXz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testXz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testXz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testXz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testXz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testXz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testXz)); \
static int cctki_vi_testZ = -100; \
if (cctki_vi_testZ == -100) cctki_vi_testZ = CCTK_VarIndex("CT_Analytic::testZ"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testZ, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testZ)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testZ_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testZ)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testZ_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testZ)); \
static int cctki_vi_testa0 = -100; \
if (cctki_vi_testa0 == -100) cctki_vi_testa0 = CCTK_VarIndex("CT_Analytic::testa0"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testa0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa0_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testa0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa0_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testa0)); \
static int cctki_vi_testa1 = -100; \
if (cctki_vi_testa1 == -100) cctki_vi_testa1 = CCTK_VarIndex("CT_Analytic::testa1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testa1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa1_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testa1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa1_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testa1)); \
static int cctki_vi_testa2 = -100; \
if (cctki_vi_testa2 == -100) cctki_vi_testa2 = CCTK_VarIndex("CT_Analytic::testa2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testa2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testa2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testa2)); \
static int cctki_vi_testa3 = -100; \
if (cctki_vi_testa3 == -100) cctki_vi_testa3 = CCTK_VarIndex("CT_Analytic::testa3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testa3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa3_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testa3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa3_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testa3)); \
static int cctki_vi_testa4 = -100; \
if (cctki_vi_testa4 == -100) cctki_vi_testa4 = CCTK_VarIndex("CT_Analytic::testa4"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa4, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testa4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa4_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testa4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testa4_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testa4)); \
static int cctki_vi_testc0 = -100; \
if (cctki_vi_testc0 == -100) cctki_vi_testc0 = CCTK_VarIndex("CT_Analytic::testc0"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testc0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc0_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testc0)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc0_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testc0)); \
static int cctki_vi_testc1 = -100; \
if (cctki_vi_testc1 == -100) cctki_vi_testc1 = CCTK_VarIndex("CT_Analytic::testc1"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc1, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testc1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc1_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testc1)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc1_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testc1)); \
static int cctki_vi_testc2 = -100; \
if (cctki_vi_testc2 == -100) cctki_vi_testc2 = CCTK_VarIndex("CT_Analytic::testc2"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc2, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testc2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc2_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testc2)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc2_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testc2)); \
static int cctki_vi_testc3 = -100; \
if (cctki_vi_testc3 == -100) cctki_vi_testc3 = CCTK_VarIndex("CT_Analytic::testc3"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc3, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testc3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc3_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testc3)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc3_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testc3)); \
static int cctki_vi_testc4 = -100; \
if (cctki_vi_testc4 == -100) cctki_vi_testc4 = CCTK_VarIndex("CT_Analytic::testc4"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc4, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testc4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc4_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testc4)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testc4_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testc4)); \
static int cctki_vi_testcx = -100; \
if (cctki_vi_testcx == -100) cctki_vi_testcx = CCTK_VarIndex("CT_Analytic::testcx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testcx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testcx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testcx)); \
static int cctki_vi_testcxx = -100; \
if (cctki_vi_testcxx == -100) cctki_vi_testcxx = CCTK_VarIndex("CT_Analytic::testcxx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcxx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testcxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcxx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testcxx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcxx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testcxx)); \
static int cctki_vi_testcxy = -100; \
if (cctki_vi_testcxy == -100) cctki_vi_testcxy = CCTK_VarIndex("CT_Analytic::testcxy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcxy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testcxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcxy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testcxy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcxy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testcxy)); \
static int cctki_vi_testcxz = -100; \
if (cctki_vi_testcxz == -100) cctki_vi_testcxz = CCTK_VarIndex("CT_Analytic::testcxz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcxz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testcxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcxz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testcxz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcxz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testcxz)); \
static int cctki_vi_testcy = -100; \
if (cctki_vi_testcy == -100) cctki_vi_testcy = CCTK_VarIndex("CT_Analytic::testcy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testcy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testcy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testcy)); \
static int cctki_vi_testcyy = -100; \
if (cctki_vi_testcyy == -100) cctki_vi_testcyy = CCTK_VarIndex("CT_Analytic::testcyy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcyy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testcyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcyy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testcyy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcyy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testcyy)); \
static int cctki_vi_testcyz = -100; \
if (cctki_vi_testcyz == -100) cctki_vi_testcyz = CCTK_VarIndex("CT_Analytic::testcyz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcyz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testcyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcyz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testcyz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcyz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testcyz)); \
static int cctki_vi_testcz = -100; \
if (cctki_vi_testcz == -100) cctki_vi_testcz = CCTK_VarIndex("CT_Analytic::testcz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testcz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testcz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testcz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testcz)); \
static int cctki_vi_testczz = -100; \
if (cctki_vi_testczz == -100) cctki_vi_testczz = CCTK_VarIndex("CT_Analytic::testczz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testczz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testczz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testczz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testczz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testczz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testczz)); \
static int cctki_vi_testdxK = -100; \
if (cctki_vi_testdxK == -100) cctki_vi_testdxK = CCTK_VarIndex("CT_Analytic::testdxK"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testdxK, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testdxK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testdxK_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testdxK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testdxK_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testdxK)); \
static int cctki_vi_testdyK = -100; \
if (cctki_vi_testdyK == -100) cctki_vi_testdyK = CCTK_VarIndex("CT_Analytic::testdyK"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testdyK, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testdyK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testdyK_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testdyK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testdyK_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testdyK)); \
static int cctki_vi_testdzK = -100; \
if (cctki_vi_testdzK == -100) cctki_vi_testdzK = CCTK_VarIndex("CT_Analytic::testdzK"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testdzK, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testdzK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testdzK_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testdzK)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testdzK_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testdzK)); \
static int cctki_vi_testinipsi = -100; \
if (cctki_vi_testinipsi == -100) cctki_vi_testinipsi = CCTK_VarIndex("CT_Analytic::testinipsi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinipsi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testinipsi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinipsi_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testinipsi)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinipsi_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testinipsi)); \
static int cctki_vi_testinixx = -100; \
if (cctki_vi_testinixx == -100) cctki_vi_testinixx = CCTK_VarIndex("CT_Analytic::testinixx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinixx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testinixx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinixx_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testinixx)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinixx_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testinixx)); \
static int cctki_vi_testinixy = -100; \
if (cctki_vi_testinixy == -100) cctki_vi_testinixy = CCTK_VarIndex("CT_Analytic::testinixy"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinixy, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testinixy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinixy_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testinixy)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinixy_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testinixy)); \
static int cctki_vi_testinixz = -100; \
if (cctki_vi_testinixz == -100) cctki_vi_testinixz = CCTK_VarIndex("CT_Analytic::testinixz"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinixz, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_testinixz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinixz_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_testinixz)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, testinixz_p_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 2, cctki_vi_testinixz)); \
static int cctki_vi_x = -100; \
if (cctki_vi_x == -100) cctki_vi_x = CCTK_VarIndex("GRID::x"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x)); \
static int cctki_vi_y = -100; \
if (cctki_vi_y == -100) cctki_vi_y = CCTK_VarIndex("GRID::y"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, y, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_y)); \
static int cctki_vi_z = -100; \
if (cctki_vi_z == -100) cctki_vi_z = CCTK_VarIndex("GRID::z"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, z, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_z));

#define DECLARE_CT_ANALYTIC_PUBLIC_C2F \
static int CCTKARGNUM_coarse_dx = -1; \
static int CCTKGROUPNUM_gridspacings = -1; \
static int CCTKARGNUM_coarse_dy = -1; \
static int CCTKARGNUM_coarse_dz = -1; \
static int CCTKARGNUM_elaplacian = -1; \
static int CCTKGROUPNUM_CT_elaplacian = -1; \
static int CCTKARGNUM_epsi = -1; \
static int CCTKGROUPNUM_CT_epsi = -1; \
static int CCTKARGNUM_r = -1; \
static int CCTKGROUPNUM_coordinates = -1; \
static int CCTKARGNUM_testAxx = -1; \
static int CCTKGROUPNUM_CT_testAxx = -1; \
static int CCTKARGNUM_testAxy = -1; \
static int CCTKGROUPNUM_CT_testAxy = -1; \
static int CCTKARGNUM_testAxz = -1; \
static int CCTKGROUPNUM_CT_testAxz = -1; \
static int CCTKARGNUM_testAyy = -1; \
static int CCTKGROUPNUM_CT_testAyy = -1; \
static int CCTKARGNUM_testAyz = -1; \
static int CCTKGROUPNUM_CT_testAyz = -1; \
static int CCTKARGNUM_testAzz = -1; \
static int CCTKGROUPNUM_CT_testAzz = -1; \
static int CCTKARGNUM_testK = -1; \
static int CCTKGROUPNUM_CT_testK = -1; \
static int CCTKARGNUM_testW = -1; \
static int CCTKGROUPNUM_CT_testW = -1; \
static int CCTKARGNUM_testXx = -1; \
static int CCTKGROUPNUM_CT_testXx = -1; \
static int CCTKARGNUM_testXy = -1; \
static int CCTKGROUPNUM_CT_testXy = -1; \
static int CCTKARGNUM_testXz = -1; \
static int CCTKGROUPNUM_CT_testXz = -1; \
static int CCTKARGNUM_testZ = -1; \
static int CCTKGROUPNUM_CT_testZ = -1; \
static int CCTKARGNUM_testa0 = -1; \
static int CCTKGROUPNUM_CT_testa0 = -1; \
static int CCTKARGNUM_testa1 = -1; \
static int CCTKGROUPNUM_CT_testa1 = -1; \
static int CCTKARGNUM_testa2 = -1; \
static int CCTKGROUPNUM_CT_testa2 = -1; \
static int CCTKARGNUM_testa3 = -1; \
static int CCTKGROUPNUM_CT_testa3 = -1; \
static int CCTKARGNUM_testa4 = -1; \
static int CCTKGROUPNUM_CT_testa4 = -1; \
static int CCTKARGNUM_testc0 = -1; \
static int CCTKGROUPNUM_CT_testc0 = -1; \
static int CCTKARGNUM_testc1 = -1; \
static int CCTKGROUPNUM_CT_testc1 = -1; \
static int CCTKARGNUM_testc2 = -1; \
static int CCTKGROUPNUM_CT_testc2 = -1; \
static int CCTKARGNUM_testc3 = -1; \
static int CCTKGROUPNUM_CT_testc3 = -1; \
static int CCTKARGNUM_testc4 = -1; \
static int CCTKGROUPNUM_CT_testc4 = -1; \
static int CCTKARGNUM_testcx = -1; \
static int CCTKGROUPNUM_CT_testcx = -1; \
static int CCTKARGNUM_testcxx = -1; \
static int CCTKGROUPNUM_CT_testcxx = -1; \
static int CCTKARGNUM_testcxy = -1; \
static int CCTKGROUPNUM_CT_testcxy = -1; \
static int CCTKARGNUM_testcxz = -1; \
static int CCTKGROUPNUM_CT_testcxz = -1; \
static int CCTKARGNUM_testcy = -1; \
static int CCTKGROUPNUM_CT_testcy = -1; \
static int CCTKARGNUM_testcyy = -1; \
static int CCTKGROUPNUM_CT_testcyy = -1; \
static int CCTKARGNUM_testcyz = -1; \
static int CCTKGROUPNUM_CT_testcyz = -1; \
static int CCTKARGNUM_testcz = -1; \
static int CCTKGROUPNUM_CT_testcz = -1; \
static int CCTKARGNUM_testczz = -1; \
static int CCTKGROUPNUM_CT_testczz = -1; \
static int CCTKARGNUM_testdxK = -1; \
static int CCTKGROUPNUM_CT_testdxK = -1; \
static int CCTKARGNUM_testdyK = -1; \
static int CCTKGROUPNUM_CT_testdyK = -1; \
static int CCTKARGNUM_testdzK = -1; \
static int CCTKGROUPNUM_CT_testdzK = -1; \
static int CCTKARGNUM_testinipsi = -1; \
static int CCTKGROUPNUM_CT_testinipsi = -1; \
static int CCTKARGNUM_testinixx = -1; \
static int CCTKGROUPNUM_CT_testinixx = -1; \
static int CCTKARGNUM_testinixy = -1; \
static int CCTKGROUPNUM_CT_testinixy = -1; \
static int CCTKARGNUM_testinixz = -1; \
static int CCTKGROUPNUM_CT_testinixz = -1; \
static int CCTKARGNUM_x = -1; \
static int CCTKARGNUM_y = -1; \
static int CCTKARGNUM_z = -1;

#define INITIALISE_CT_ANALYTIC_PUBLIC_C2F \
if(CCTKARGNUM_coarse_dx == -1) CCTKARGNUM_coarse_dx = CCTK_VarIndex("GRID::coarse_dx"); \
if(CCTKGROUPNUM_gridspacings == -1) CCTKGROUPNUM_gridspacings = CCTK_GroupIndex("GRID::gridspacings"); \
if(CCTKARGNUM_coarse_dy == -1) CCTKARGNUM_coarse_dy = CCTK_VarIndex("GRID::coarse_dy"); \
if(CCTKARGNUM_coarse_dz == -1) CCTKARGNUM_coarse_dz = CCTK_VarIndex("GRID::coarse_dz"); \
if(CCTKARGNUM_elaplacian == -1) CCTKARGNUM_elaplacian = CCTK_VarIndex("CT_Analytic::elaplacian"); \
if(CCTKGROUPNUM_CT_elaplacian == -1) CCTKGROUPNUM_CT_elaplacian = CCTK_GroupIndex("CT_Analytic::CT_elaplacian"); \
if(CCTKARGNUM_epsi == -1) CCTKARGNUM_epsi = CCTK_VarIndex("CT_Analytic::epsi"); \
if(CCTKGROUPNUM_CT_epsi == -1) CCTKGROUPNUM_CT_epsi = CCTK_GroupIndex("CT_Analytic::CT_epsi"); \
if(CCTKARGNUM_r == -1) CCTKARGNUM_r = CCTK_VarIndex("GRID::r"); \
if(CCTKGROUPNUM_coordinates == -1) CCTKGROUPNUM_coordinates = CCTK_GroupIndex("GRID::coordinates"); \
if(CCTKARGNUM_testAxx == -1) CCTKARGNUM_testAxx = CCTK_VarIndex("CT_Analytic::testAxx"); \
if(CCTKGROUPNUM_CT_testAxx == -1) CCTKGROUPNUM_CT_testAxx = CCTK_GroupIndex("CT_Analytic::CT_testAxx"); \
if(CCTKARGNUM_testAxy == -1) CCTKARGNUM_testAxy = CCTK_VarIndex("CT_Analytic::testAxy"); \
if(CCTKGROUPNUM_CT_testAxy == -1) CCTKGROUPNUM_CT_testAxy = CCTK_GroupIndex("CT_Analytic::CT_testAxy"); \
if(CCTKARGNUM_testAxz == -1) CCTKARGNUM_testAxz = CCTK_VarIndex("CT_Analytic::testAxz"); \
if(CCTKGROUPNUM_CT_testAxz == -1) CCTKGROUPNUM_CT_testAxz = CCTK_GroupIndex("CT_Analytic::CT_testAxz"); \
if(CCTKARGNUM_testAyy == -1) CCTKARGNUM_testAyy = CCTK_VarIndex("CT_Analytic::testAyy"); \
if(CCTKGROUPNUM_CT_testAyy == -1) CCTKGROUPNUM_CT_testAyy = CCTK_GroupIndex("CT_Analytic::CT_testAyy"); \
if(CCTKARGNUM_testAyz == -1) CCTKARGNUM_testAyz = CCTK_VarIndex("CT_Analytic::testAyz"); \
if(CCTKGROUPNUM_CT_testAyz == -1) CCTKGROUPNUM_CT_testAyz = CCTK_GroupIndex("CT_Analytic::CT_testAyz"); \
if(CCTKARGNUM_testAzz == -1) CCTKARGNUM_testAzz = CCTK_VarIndex("CT_Analytic::testAzz"); \
if(CCTKGROUPNUM_CT_testAzz == -1) CCTKGROUPNUM_CT_testAzz = CCTK_GroupIndex("CT_Analytic::CT_testAzz"); \
if(CCTKARGNUM_testK == -1) CCTKARGNUM_testK = CCTK_VarIndex("CT_Analytic::testK"); \
if(CCTKGROUPNUM_CT_testK == -1) CCTKGROUPNUM_CT_testK = CCTK_GroupIndex("CT_Analytic::CT_testK"); \
if(CCTKARGNUM_testW == -1) CCTKARGNUM_testW = CCTK_VarIndex("CT_Analytic::testW"); \
if(CCTKGROUPNUM_CT_testW == -1) CCTKGROUPNUM_CT_testW = CCTK_GroupIndex("CT_Analytic::CT_testW"); \
if(CCTKARGNUM_testXx == -1) CCTKARGNUM_testXx = CCTK_VarIndex("CT_Analytic::testXx"); \
if(CCTKGROUPNUM_CT_testXx == -1) CCTKGROUPNUM_CT_testXx = CCTK_GroupIndex("CT_Analytic::CT_testXx"); \
if(CCTKARGNUM_testXy == -1) CCTKARGNUM_testXy = CCTK_VarIndex("CT_Analytic::testXy"); \
if(CCTKGROUPNUM_CT_testXy == -1) CCTKGROUPNUM_CT_testXy = CCTK_GroupIndex("CT_Analytic::CT_testXy"); \
if(CCTKARGNUM_testXz == -1) CCTKARGNUM_testXz = CCTK_VarIndex("CT_Analytic::testXz"); \
if(CCTKGROUPNUM_CT_testXz == -1) CCTKGROUPNUM_CT_testXz = CCTK_GroupIndex("CT_Analytic::CT_testXz"); \
if(CCTKARGNUM_testZ == -1) CCTKARGNUM_testZ = CCTK_VarIndex("CT_Analytic::testZ"); \
if(CCTKGROUPNUM_CT_testZ == -1) CCTKGROUPNUM_CT_testZ = CCTK_GroupIndex("CT_Analytic::CT_testZ"); \
if(CCTKARGNUM_testa0 == -1) CCTKARGNUM_testa0 = CCTK_VarIndex("CT_Analytic::testa0"); \
if(CCTKGROUPNUM_CT_testa0 == -1) CCTKGROUPNUM_CT_testa0 = CCTK_GroupIndex("CT_Analytic::CT_testa0"); \
if(CCTKARGNUM_testa1 == -1) CCTKARGNUM_testa1 = CCTK_VarIndex("CT_Analytic::testa1"); \
if(CCTKGROUPNUM_CT_testa1 == -1) CCTKGROUPNUM_CT_testa1 = CCTK_GroupIndex("CT_Analytic::CT_testa1"); \
if(CCTKARGNUM_testa2 == -1) CCTKARGNUM_testa2 = CCTK_VarIndex("CT_Analytic::testa2"); \
if(CCTKGROUPNUM_CT_testa2 == -1) CCTKGROUPNUM_CT_testa2 = CCTK_GroupIndex("CT_Analytic::CT_testa2"); \
if(CCTKARGNUM_testa3 == -1) CCTKARGNUM_testa3 = CCTK_VarIndex("CT_Analytic::testa3"); \
if(CCTKGROUPNUM_CT_testa3 == -1) CCTKGROUPNUM_CT_testa3 = CCTK_GroupIndex("CT_Analytic::CT_testa3"); \
if(CCTKARGNUM_testa4 == -1) CCTKARGNUM_testa4 = CCTK_VarIndex("CT_Analytic::testa4"); \
if(CCTKGROUPNUM_CT_testa4 == -1) CCTKGROUPNUM_CT_testa4 = CCTK_GroupIndex("CT_Analytic::CT_testa4"); \
if(CCTKARGNUM_testc0 == -1) CCTKARGNUM_testc0 = CCTK_VarIndex("CT_Analytic::testc0"); \
if(CCTKGROUPNUM_CT_testc0 == -1) CCTKGROUPNUM_CT_testc0 = CCTK_GroupIndex("CT_Analytic::CT_testc0"); \
if(CCTKARGNUM_testc1 == -1) CCTKARGNUM_testc1 = CCTK_VarIndex("CT_Analytic::testc1"); \
if(CCTKGROUPNUM_CT_testc1 == -1) CCTKGROUPNUM_CT_testc1 = CCTK_GroupIndex("CT_Analytic::CT_testc1"); \
if(CCTKARGNUM_testc2 == -1) CCTKARGNUM_testc2 = CCTK_VarIndex("CT_Analytic::testc2"); \
if(CCTKGROUPNUM_CT_testc2 == -1) CCTKGROUPNUM_CT_testc2 = CCTK_GroupIndex("CT_Analytic::CT_testc2"); \
if(CCTKARGNUM_testc3 == -1) CCTKARGNUM_testc3 = CCTK_VarIndex("CT_Analytic::testc3"); \
if(CCTKGROUPNUM_CT_testc3 == -1) CCTKGROUPNUM_CT_testc3 = CCTK_GroupIndex("CT_Analytic::CT_testc3"); \
if(CCTKARGNUM_testc4 == -1) CCTKARGNUM_testc4 = CCTK_VarIndex("CT_Analytic::testc4"); \
if(CCTKGROUPNUM_CT_testc4 == -1) CCTKGROUPNUM_CT_testc4 = CCTK_GroupIndex("CT_Analytic::CT_testc4"); \
if(CCTKARGNUM_testcx == -1) CCTKARGNUM_testcx = CCTK_VarIndex("CT_Analytic::testcx"); \
if(CCTKGROUPNUM_CT_testcx == -1) CCTKGROUPNUM_CT_testcx = CCTK_GroupIndex("CT_Analytic::CT_testcx"); \
if(CCTKARGNUM_testcxx == -1) CCTKARGNUM_testcxx = CCTK_VarIndex("CT_Analytic::testcxx"); \
if(CCTKGROUPNUM_CT_testcxx == -1) CCTKGROUPNUM_CT_testcxx = CCTK_GroupIndex("CT_Analytic::CT_testcxx"); \
if(CCTKARGNUM_testcxy == -1) CCTKARGNUM_testcxy = CCTK_VarIndex("CT_Analytic::testcxy"); \
if(CCTKGROUPNUM_CT_testcxy == -1) CCTKGROUPNUM_CT_testcxy = CCTK_GroupIndex("CT_Analytic::CT_testcxy"); \
if(CCTKARGNUM_testcxz == -1) CCTKARGNUM_testcxz = CCTK_VarIndex("CT_Analytic::testcxz"); \
if(CCTKGROUPNUM_CT_testcxz == -1) CCTKGROUPNUM_CT_testcxz = CCTK_GroupIndex("CT_Analytic::CT_testcxz"); \
if(CCTKARGNUM_testcy == -1) CCTKARGNUM_testcy = CCTK_VarIndex("CT_Analytic::testcy"); \
if(CCTKGROUPNUM_CT_testcy == -1) CCTKGROUPNUM_CT_testcy = CCTK_GroupIndex("CT_Analytic::CT_testcy"); \
if(CCTKARGNUM_testcyy == -1) CCTKARGNUM_testcyy = CCTK_VarIndex("CT_Analytic::testcyy"); \
if(CCTKGROUPNUM_CT_testcyy == -1) CCTKGROUPNUM_CT_testcyy = CCTK_GroupIndex("CT_Analytic::CT_testcyy"); \
if(CCTKARGNUM_testcyz == -1) CCTKARGNUM_testcyz = CCTK_VarIndex("CT_Analytic::testcyz"); \
if(CCTKGROUPNUM_CT_testcyz == -1) CCTKGROUPNUM_CT_testcyz = CCTK_GroupIndex("CT_Analytic::CT_testcyz"); \
if(CCTKARGNUM_testcz == -1) CCTKARGNUM_testcz = CCTK_VarIndex("CT_Analytic::testcz"); \
if(CCTKGROUPNUM_CT_testcz == -1) CCTKGROUPNUM_CT_testcz = CCTK_GroupIndex("CT_Analytic::CT_testcz"); \
if(CCTKARGNUM_testczz == -1) CCTKARGNUM_testczz = CCTK_VarIndex("CT_Analytic::testczz"); \
if(CCTKGROUPNUM_CT_testczz == -1) CCTKGROUPNUM_CT_testczz = CCTK_GroupIndex("CT_Analytic::CT_testczz"); \
if(CCTKARGNUM_testdxK == -1) CCTKARGNUM_testdxK = CCTK_VarIndex("CT_Analytic::testdxK"); \
if(CCTKGROUPNUM_CT_testdxK == -1) CCTKGROUPNUM_CT_testdxK = CCTK_GroupIndex("CT_Analytic::CT_testdxK"); \
if(CCTKARGNUM_testdyK == -1) CCTKARGNUM_testdyK = CCTK_VarIndex("CT_Analytic::testdyK"); \
if(CCTKGROUPNUM_CT_testdyK == -1) CCTKGROUPNUM_CT_testdyK = CCTK_GroupIndex("CT_Analytic::CT_testdyK"); \
if(CCTKARGNUM_testdzK == -1) CCTKARGNUM_testdzK = CCTK_VarIndex("CT_Analytic::testdzK"); \
if(CCTKGROUPNUM_CT_testdzK == -1) CCTKGROUPNUM_CT_testdzK = CCTK_GroupIndex("CT_Analytic::CT_testdzK"); \
if(CCTKARGNUM_testinipsi == -1) CCTKARGNUM_testinipsi = CCTK_VarIndex("CT_Analytic::testinipsi"); \
if(CCTKGROUPNUM_CT_testinipsi == -1) CCTKGROUPNUM_CT_testinipsi = CCTK_GroupIndex("CT_Analytic::CT_testinipsi"); \
if(CCTKARGNUM_testinixx == -1) CCTKARGNUM_testinixx = CCTK_VarIndex("CT_Analytic::testinixx"); \
if(CCTKGROUPNUM_CT_testinixx == -1) CCTKGROUPNUM_CT_testinixx = CCTK_GroupIndex("CT_Analytic::CT_testinixx"); \
if(CCTKARGNUM_testinixy == -1) CCTKARGNUM_testinixy = CCTK_VarIndex("CT_Analytic::testinixy"); \
if(CCTKGROUPNUM_CT_testinixy == -1) CCTKGROUPNUM_CT_testinixy = CCTK_GroupIndex("CT_Analytic::CT_testinixy"); \
if(CCTKARGNUM_testinixz == -1) CCTKARGNUM_testinixz = CCTK_VarIndex("CT_Analytic::testinixz"); \
if(CCTKGROUPNUM_CT_testinixz == -1) CCTKGROUPNUM_CT_testinixz = CCTK_GroupIndex("CT_Analytic::CT_testinixz"); \
if(CCTKARGNUM_x == -1) CCTKARGNUM_x = CCTK_VarIndex("GRID::x"); \
if(CCTKARGNUM_y == -1) CCTKARGNUM_y = CCTK_VarIndex("GRID::y"); \
if(CCTKARGNUM_z == -1) CCTKARGNUM_z = CCTK_VarIndex("GRID::z");

#define CT_ANALYTIC_PUBLIC_C2F_PROTO \


#define PASS_CT_ANALYTIC_PUBLIC_C2F(GH) \
(CCTK_REAL *)(PASS_REFERENCE(coarse_dx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(coarse_dz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(elaplacian, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(elaplacian, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(elaplacian, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(epsi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(epsi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(epsi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(r, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testAxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testAxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testAxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testAxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testAxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testAxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testAxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testAxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testAxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testAyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testAyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testAyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testAyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testAyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testAyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testAzz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testAzz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testAzz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testK, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testK, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testK, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testW, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testW, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testW, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testXx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testXx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testXx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testXy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testXy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testXy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testXz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testXz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testXz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testZ, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testZ, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testZ, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testa0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testa0, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testa0, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testa1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testa1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testa1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testa2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testa2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testa2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testa3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testa3, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testa3, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testa4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testa4, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testa4, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testc0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testc0, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testc0, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testc1, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testc1, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testc1, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testc2, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testc2, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testc2, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testc3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testc3, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testc3, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testc4, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testc4, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testc4, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testcx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testcx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testcx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testcxx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testcxx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testcxx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testcxy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testcxy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testcxy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testcxz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testcxz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testcxz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testcy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testcy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testcy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testcyy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testcyy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testcyy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testcyz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testcyz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testcyz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testcz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testcz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testcz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testczz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testczz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testczz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testdxK, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testdxK, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testdxK, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testdyK, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testdyK, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testdyK, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testdzK, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testdzK, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testdzK, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testinipsi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testinipsi, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testinipsi, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testinixx, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testinixx, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testinixx, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testinixy, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testinixy, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testinixy, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(testinixz, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(testinixz, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(testinixz, 2)),\
(CCTK_REAL *)(PASS_REFERENCE(x, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(y, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(z, 0))

#endif /* CCODE */

#ifdef FCODE
#define CT_ANALYTIC_FARGUMENTS _CCTK_FARGUMENTS, CT_ANALYTIC_PUBLIC_FARGUMENTS

#define DECLARE_CT_ANALYTIC_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_CT_ANALYTIC_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_CT_ANALYTIC_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_CT_ANALYTIC_PUBLIC_CARGUMENTS

#define CT_ANALYTIC_C2F_PROTO _CCTK_C2F_PROTO, CT_ANALYTIC_PUBLIC_C2F_PROTO

#define PASS_CT_ANALYTIC_C2F(GH) _PASS_CCTK_C2F(GH), PASS_CT_ANALYTIC_PUBLIC_C2F(GH)

#define DECLARE_CT_ANALYTIC_C2F _DECLARE_CCTK_C2F DECLARE_CT_ANALYTIC_PUBLIC_C2F

#define INITIALISE_CT_ANALYTIC_C2F _INITIALISE_CCTK_C2F INITIALISE_CT_ANALYTIC_PUBLIC_C2F

#define CT_ANALYTIC_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
