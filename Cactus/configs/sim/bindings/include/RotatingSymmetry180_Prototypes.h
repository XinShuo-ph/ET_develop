/*@@
   @header  RotatingSymmetry180_Prototypes.h
   @author  Automatically generated by CreateFunctionBindings.pl
   @desc
            Prototypes for overloaded functions used by this thorn
   @enddesc
  @@*/


#ifndef _ROTATINGSYMMETRY180_PROTOTYPES_H_
#define _ROTATINGSYMMETRY180_PROTOTYPES_H_  1

#ifdef CCODE
#ifdef __cplusplus
extern "C" {
#endif

CCTK_INT Boundary_SelectedGVs(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT array_size ,
 CCTK_INT* var_indicies ,
 CCTK_INT* faces ,
 CCTK_INT* boundary_widths ,
 CCTK_INT* table_handles ,
 CCTK_STRING bc_name);

CCTK_INT GetBoundarySpecification(const CCTK_INT size ,
 CCTK_INT* nboundaryzones ,
 CCTK_INT* is_internal ,
 CCTK_INT* is_staggered ,
 CCTK_INT* shiftout);

CCTK_INT GetDomainSpecification(const CCTK_INT size ,
 CCTK_REAL* physical_min ,
 CCTK_REAL* physical_max ,
 CCTK_REAL* interior_min ,
 CCTK_REAL* interior_max ,
 CCTK_REAL* exterior_min ,
 CCTK_REAL* exterior_max ,
 CCTK_REAL* spacing);

CCTK_INT GetLocalComponents(const CCTK_POINTER_TO_CONST cctkGH);

CCTK_INT GetRefinementLevel(const CCTK_POINTER_TO_CONST cctkGH);

CCTK_INT GetRefinementLevels(const CCTK_POINTER_TO_CONST cctkGH);

CCTK_INT GetRegriddingEpoch(const CCTK_POINTER_TO_CONST cctkGH);

CCTK_INT Hyperslab_FreeMapping(const CCTK_INT mapping_handle);

CCTK_INT Hyperslab_GetList(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT mapping_handle ,
 const CCTK_INT num_arrays ,
 const CCTK_INT* procs ,
 const CCTK_INT* vindices ,
 const CCTK_INT* timelevels ,
 const CCTK_INT* hdatatypes ,
 const CCTK_POINTER* hdata ,
 CCTK_INT* retvals);

CCTK_INT Hyperslab_GlobalMappingByIndex(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT vindex ,
 const CCTK_INT hdim ,
 const CCTK_INT* direction ,
 const CCTK_INT* origin ,
 const CCTK_INT* extent ,
 const CCTK_INT* downsample ,
 const CCTK_INT table_handle ,
 CCTK_INT (*const conversion_fn)(const CCTK_INT nelems ,
 const CCTK_INT src_stride ,
 const CCTK_INT dst_stride ,
 const CCTK_INT src_type ,
 const CCTK_INT dst_type ,
 const CCTK_POINTER_TO_CONST from ,
 const CCTK_POINTER to) ,
 CCTK_INT* hsize);

CCTK_INT SymmetryInterpolateFaces(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT N_dims ,
 const CCTK_INT local_interp_handle ,
 const CCTK_INT param_table_handle ,
 const CCTK_INT coord_system_handle ,
 const CCTK_INT N_interp_points ,
 const CCTK_INT interp_coords_type ,
 const CCTK_POINTER_TO_CONST* interp_coords ,
 const CCTK_INT N_input_arrays ,
 const CCTK_INT* input_array_indices ,
 const CCTK_INT N_output_arrays ,
 const CCTK_INT* output_array_types ,
 const CCTK_POINTER* output_arrays ,
 const CCTK_INT faces);

CCTK_INT SymmetryRegister(CCTK_STRING sym_name);

CCTK_INT SymmetryRegisterGrid(const CCTK_POINTER cctkGH ,
 const CCTK_INT sym_handle ,
 const CCTK_INT* which_faces ,
 const CCTK_INT* symmetry_zone_width);

CCTK_INT SymmetryRegisterGridInterpolator(const CCTK_POINTER cctkGH ,
 const CCTK_INT sym_handle ,
 CCTK_INT (*const symmetry_interpolate)(const CCTK_POINTER_TO_CONST cctkGH ,
 const CCTK_INT N_dims ,
 const CCTK_INT local_interp_handle ,
 const CCTK_INT param_table_handle ,
 const CCTK_INT coord_system_handle ,
 const CCTK_INT N_interp_points ,
 const CCTK_INT interp_coords_type ,
 const CCTK_POINTER_TO_CONST* interp_coords ,
 const CCTK_INT N_input_arrays ,
 const CCTK_INT* input_array_indices ,
 const CCTK_INT N_output_arrays ,
 const CCTK_INT* output_array_types ,
 const CCTK_POINTER* output_arrays ,
 const CCTK_INT faces));

#ifdef __cplusplus
}
#endif
#endif /* CCODE */

#ifdef FCODE
#ifdef F90CODE
#define DECLARE_ROTATINGSYMMETRY180_FUNCTIONS _DECLARE_CCTK_FUNCTIONS \
  interface &&\
     CCTK_INT function Boundary_SelectedGVs (cctkGH, array_size, var_indicies, faces, boundary_widths, table_handles, bc_name) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT array_size &&\
       CCTK_INT var_indicies(*) &&\
       CCTK_INT faces(*) &&\
       CCTK_INT boundary_widths(*) &&\
       CCTK_INT table_handles(*) &&\
       character(*) bc_name &&\
     end function Boundary_SelectedGVs &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetBoundarySpecification (size, nboundaryzones, is_internal, is_staggered, shiftout) &&\
       implicit none &&\
       CCTK_INT size &&\
       CCTK_INT nboundaryzones(*) &&\
       CCTK_INT is_internal(*) &&\
       CCTK_INT is_staggered(*) &&\
       CCTK_INT shiftout(*) &&\
     end function GetBoundarySpecification &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetDomainSpecification (size, physical_min, physical_max, interior_min, interior_max, exterior_min, exterior_max, spacing) &&\
       implicit none &&\
       CCTK_INT size &&\
       CCTK_REAL physical_min(*) &&\
       CCTK_REAL physical_max(*) &&\
       CCTK_REAL interior_min(*) &&\
       CCTK_REAL interior_max(*) &&\
       CCTK_REAL exterior_min(*) &&\
       CCTK_REAL exterior_max(*) &&\
       CCTK_REAL spacing(*) &&\
     end function GetDomainSpecification &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetLocalComponents (cctkGH) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
     end function GetLocalComponents &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetRefinementLevel (cctkGH) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
     end function GetRefinementLevel &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetRefinementLevels (cctkGH) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
     end function GetRefinementLevels &&\
  end interface &&\
  interface &&\
     CCTK_INT function GetRegriddingEpoch (cctkGH) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
     end function GetRegriddingEpoch &&\
  end interface &&\
  interface &&\
     CCTK_INT function Hyperslab_FreeMapping (mapping_handle) &&\
       implicit none &&\
       CCTK_INT mapping_handle &&\
     end function Hyperslab_FreeMapping &&\
  end interface &&\
  interface &&\
     CCTK_INT function Hyperslab_GetList (cctkGH, mapping_handle, num_arrays, procs, vindices, timelevels, hdatatypes, hdata, retvals) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT mapping_handle &&\
       CCTK_INT num_arrays &&\
       CCTK_INT procs(*) &&\
       CCTK_INT vindices(*) &&\
       CCTK_INT timelevels(*) &&\
       CCTK_INT hdatatypes(*) &&\
       CCTK_POINTER hdata(*) &&\
       CCTK_INT retvals(*) &&\
     end function Hyperslab_GetList &&\
  end interface &&\
  interface &&\
     CCTK_INT function Hyperslab_GlobalMappingByIndex (cctkGH, vindex, hdim, direction, origin, extent, downsample, table_handle, conversion_fn, hsize) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT vindex &&\
       CCTK_INT hdim &&\
       CCTK_INT direction(*) &&\
       CCTK_INT origin(*) &&\
       CCTK_INT extent(*) &&\
       CCTK_INT downsample(*) &&\
       CCTK_INT table_handle &&\
       external conversion_fn &&\
       CCTK_INT conversion_fn &&\
       CCTK_INT hsize(*) &&\
     end function Hyperslab_GlobalMappingByIndex &&\
  end interface &&\
  interface &&\
     CCTK_INT function SymmetryInterpolateFaces (cctkGH, N_dims, local_interp_handle, param_table_handle, coord_system_handle, N_interp_points, interp_coords_type, interp_coords, N_input_arrays, input_array_indices, N_output_arrays, output_array_types, output_arrays, faces) &&\
       implicit none &&\
       CCTK_POINTER_TO_CONST cctkGH &&\
       CCTK_INT N_dims &&\
       CCTK_INT local_interp_handle &&\
       CCTK_INT param_table_handle &&\
       CCTK_INT coord_system_handle &&\
       CCTK_INT N_interp_points &&\
       CCTK_INT interp_coords_type &&\
       CCTK_POINTER_TO_CONST interp_coords(*) &&\
       CCTK_INT N_input_arrays &&\
       CCTK_INT input_array_indices(*) &&\
       CCTK_INT N_output_arrays &&\
       CCTK_INT output_array_types(*) &&\
       CCTK_POINTER output_arrays(*) &&\
       CCTK_INT faces &&\
     end function SymmetryInterpolateFaces &&\
  end interface &&\
  interface &&\
     CCTK_INT function SymmetryRegister (sym_name) &&\
       implicit none &&\
       character(*) sym_name &&\
     end function SymmetryRegister &&\
  end interface &&\
  interface &&\
     CCTK_INT function SymmetryRegisterGrid (cctkGH, sym_handle, which_faces, symmetry_zone_width) &&\
       implicit none &&\
       CCTK_POINTER cctkGH &&\
       CCTK_INT sym_handle &&\
       CCTK_INT which_faces(*) &&\
       CCTK_INT symmetry_zone_width(*) &&\
     end function SymmetryRegisterGrid &&\
  end interface &&\
  interface &&\
     CCTK_INT function SymmetryRegisterGridInterpolator (cctkGH, sym_handle, symmetry_interpolate) &&\
       implicit none &&\
       CCTK_POINTER cctkGH &&\
       CCTK_INT sym_handle &&\
       external symmetry_interpolate &&\
       CCTK_INT symmetry_interpolate &&\
     end function SymmetryRegisterGridInterpolator &&\
  end interface &&\

#else /* ! F90CODE */

#define DECLARE_ROTATINGSYMMETRY180_FUNCTIONS _DECLARE_CCTK_FUNCTIONS \
  external Boundary_SelectedGVs &&\
  CCTK_INT Boundary_SelectedGVs &&\
  external GetBoundarySpecification &&\
  CCTK_INT GetBoundarySpecification &&\
  external GetDomainSpecification &&\
  CCTK_INT GetDomainSpecification &&\
  external GetLocalComponents &&\
  CCTK_INT GetLocalComponents &&\
  external GetRefinementLevel &&\
  CCTK_INT GetRefinementLevel &&\
  external GetRefinementLevels &&\
  CCTK_INT GetRefinementLevels &&\
  external GetRegriddingEpoch &&\
  CCTK_INT GetRegriddingEpoch &&\
  external Hyperslab_FreeMapping &&\
  CCTK_INT Hyperslab_FreeMapping &&\
  external Hyperslab_GetList &&\
  CCTK_INT Hyperslab_GetList &&\
  external Hyperslab_GlobalMappingByIndex &&\
  CCTK_INT Hyperslab_GlobalMappingByIndex &&\
  external SymmetryInterpolateFaces &&\
  CCTK_INT SymmetryInterpolateFaces &&\
  external SymmetryRegister &&\
  CCTK_INT SymmetryRegister &&\
  external SymmetryRegisterGrid &&\
  CCTK_INT SymmetryRegisterGrid &&\
  external SymmetryRegisterGridInterpolator &&\
  CCTK_INT SymmetryRegisterGridInterpolator &&\

#endif /* ! F90CODE */
#endif /* FCODE */

#endif

