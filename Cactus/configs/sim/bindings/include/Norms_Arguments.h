/*@@
   @header  Norms_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn Norms
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_NORMS_PRIVATE_FARGUMENTS \
INTEGER X0bgvals_group&&\
INTEGER X0varinfo&&\
CCTK_DECLARE(CCTK_REAL,bgvals_1st,(X0bgvals_group))&&\
CCTK_DECLARE(CCTK_REAL,bgvals_2nd,(X0bgvals_group))&&\
CCTK_DECLARE(CCTK_REAL,diff_term,(cctk_ash1,cctk_ash2,cctk_ash3))&&\
CCTK_DECLARE(CCTK_REAL,norm,)&&\
CCTK_DECLARE(CCTK_REAL,norm_grad,)&&\
CCTK_DECLARE(CCTK_REAL,norm_u,)&&\
CCTK_DECLARE(CCTK_REAL,norm_v,)&&\
CCTK_DECLARE(CCTK_INT,nr1stvars,)&&\
CCTK_DECLARE(CCTK_INT,nr2ndvars,)&&\
CCTK_DECLARE(CCTK_INT,sum_handle,)&&\
CCTK_DECLARE(CCTK_INT,varindices_1st,(X0varinfo))&&\
CCTK_DECLARE(CCTK_INT,varindices_2nd,(X0varinfo))&&\


#define NORMS_PRIVATE_FARGUMENTS \
X0bgvals_group,X0varinfo,bgvals_1st,bgvals_2nd,diff_term,norm,norm_grad,norm_u,norm_v,nr1stvars,nr2ndvars,sum_handle,varindices_1st,varindices_2nd

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NORMS_PRIVATE_CARGUMENTS \
static int cctki_vi_bgvals_1st = -100; \
if (cctki_vi_bgvals_1st == -100) cctki_vi_bgvals_1st = CCTK_VarIndex("Norms::bgvals_1st"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bgvals_1st, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bgvals_1st)); \
static int cctki_vi_bgvals_2nd = -100; \
if (cctki_vi_bgvals_2nd == -100) cctki_vi_bgvals_2nd = CCTK_VarIndex("Norms::bgvals_2nd"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bgvals_2nd, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bgvals_2nd)); \
static int cctki_vi_diff_term = -100; \
if (cctki_vi_diff_term == -100) cctki_vi_diff_term = CCTK_VarIndex("Norms::diff_term"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, diff_term, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_diff_term)); \
static int cctki_vi_norm = -100; \
if (cctki_vi_norm == -100) cctki_vi_norm = CCTK_VarIndex("Norms::norm"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, norm, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_norm)); \
static int cctki_vi_norm_grad = -100; \
if (cctki_vi_norm_grad == -100) cctki_vi_norm_grad = CCTK_VarIndex("Norms::norm_grad"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, norm_grad, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_norm_grad)); \
static int cctki_vi_norm_u = -100; \
if (cctki_vi_norm_u == -100) cctki_vi_norm_u = CCTK_VarIndex("Norms::norm_u"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, norm_u, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_norm_u)); \
static int cctki_vi_norm_v = -100; \
if (cctki_vi_norm_v == -100) cctki_vi_norm_v = CCTK_VarIndex("Norms::norm_v"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, norm_v, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_norm_v)); \
static int cctki_vi_nr1stvars = -100; \
if (cctki_vi_nr1stvars == -100) cctki_vi_nr1stvars = CCTK_VarIndex("Norms::nr1stvars"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, nr1stvars, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nr1stvars)); \
static int cctki_vi_nr2ndvars = -100; \
if (cctki_vi_nr2ndvars == -100) cctki_vi_nr2ndvars = CCTK_VarIndex("Norms::nr2ndvars"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, nr2ndvars, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nr2ndvars)); \
static int cctki_vi_sum_handle = -100; \
if (cctki_vi_sum_handle == -100) cctki_vi_sum_handle = CCTK_VarIndex("Norms::sum_handle"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, sum_handle, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_sum_handle)); \
static int cctki_vi_varindices_1st = -100; \
if (cctki_vi_varindices_1st == -100) cctki_vi_varindices_1st = CCTK_VarIndex("Norms::varindices_1st"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, varindices_1st, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_varindices_1st)); \
static int cctki_vi_varindices_2nd = -100; \
if (cctki_vi_varindices_2nd == -100) cctki_vi_varindices_2nd = CCTK_VarIndex("Norms::varindices_2nd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, varindices_2nd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_varindices_2nd));

#define DECLARE_NORMS_PRIVATE_C2F \
static int CCTKARGNUM_bgvals_1st = -1; \
static int CCTKGROUPNUM_bgvals_group = -1; \
static int CCTKARGNUM_bgvals_2nd = -1; \
static int CCTKARGNUM_diff_term = -1; \
static int CCTKGROUPNUM_diff_term_group = -1; \
static int CCTKARGNUM_norm = -1; \
static int CCTKGROUPNUM_norm_group = -1; \
static int CCTKARGNUM_norm_grad = -1; \
static int CCTKARGNUM_norm_u = -1; \
static int CCTKARGNUM_norm_v = -1; \
static int CCTKARGNUM_nr1stvars = -1; \
static int CCTKGROUPNUM_nrdecvar_gr = -1; \
static int CCTKARGNUM_nr2ndvars = -1; \
static int CCTKARGNUM_sum_handle = -1; \
static int CCTKGROUPNUM_handles_group = -1; \
static int CCTKARGNUM_varindices_1st = -1; \
static int CCTKGROUPNUM_varinfo = -1; \
static int CCTKARGNUM_varindices_2nd = -1;

#define INITIALISE_NORMS_PRIVATE_C2F \
if(CCTKARGNUM_bgvals_1st == -1) CCTKARGNUM_bgvals_1st = CCTK_VarIndex("Norms::bgvals_1st"); \
if(CCTKGROUPNUM_bgvals_group == -1) CCTKGROUPNUM_bgvals_group = CCTK_GroupIndex("Norms::bgvals_group"); \
if(CCTKARGNUM_bgvals_2nd == -1) CCTKARGNUM_bgvals_2nd = CCTK_VarIndex("Norms::bgvals_2nd"); \
if(CCTKARGNUM_diff_term == -1) CCTKARGNUM_diff_term = CCTK_VarIndex("Norms::diff_term"); \
if(CCTKGROUPNUM_diff_term_group == -1) CCTKGROUPNUM_diff_term_group = CCTK_GroupIndex("Norms::diff_term_group"); \
if(CCTKARGNUM_norm == -1) CCTKARGNUM_norm = CCTK_VarIndex("Norms::norm"); \
if(CCTKGROUPNUM_norm_group == -1) CCTKGROUPNUM_norm_group = CCTK_GroupIndex("Norms::norm_group"); \
if(CCTKARGNUM_norm_grad == -1) CCTKARGNUM_norm_grad = CCTK_VarIndex("Norms::norm_grad"); \
if(CCTKARGNUM_norm_u == -1) CCTKARGNUM_norm_u = CCTK_VarIndex("Norms::norm_u"); \
if(CCTKARGNUM_norm_v == -1) CCTKARGNUM_norm_v = CCTK_VarIndex("Norms::norm_v"); \
if(CCTKARGNUM_nr1stvars == -1) CCTKARGNUM_nr1stvars = CCTK_VarIndex("Norms::nr1stvars"); \
if(CCTKGROUPNUM_nrdecvar_gr == -1) CCTKGROUPNUM_nrdecvar_gr = CCTK_GroupIndex("Norms::nrdecvar_gr"); \
if(CCTKARGNUM_nr2ndvars == -1) CCTKARGNUM_nr2ndvars = CCTK_VarIndex("Norms::nr2ndvars"); \
if(CCTKARGNUM_sum_handle == -1) CCTKARGNUM_sum_handle = CCTK_VarIndex("Norms::sum_handle"); \
if(CCTKGROUPNUM_handles_group == -1) CCTKGROUPNUM_handles_group = CCTK_GroupIndex("Norms::handles_group"); \
if(CCTKARGNUM_varindices_1st == -1) CCTKARGNUM_varindices_1st = CCTK_VarIndex("Norms::varindices_1st"); \
if(CCTKGROUPNUM_varinfo == -1) CCTKGROUPNUM_varinfo = CCTK_GroupIndex("Norms::varinfo"); \
if(CCTKARGNUM_varindices_2nd == -1) CCTKARGNUM_varindices_2nd = CCTK_VarIndex("Norms::varindices_2nd");

#define NORMS_PRIVATE_C2F_PROTO \
const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_INT *

#define PASS_NORMS_PRIVATE_C2F(GH) \
PASS_GROUPSIZE(bgvals_group, 0),\
PASS_GROUPSIZE(varinfo, 0),\
(CCTK_REAL *)(PASS_REFERENCE(bgvals_1st, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bgvals_2nd, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(diff_term, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(norm, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(norm_grad, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(norm_u, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(norm_v, 0)),\
(CCTK_INT *)(PASS_REFERENCE(nr1stvars, 0)),\
(CCTK_INT *)(PASS_REFERENCE(nr2ndvars, 0)),\
(CCTK_INT *)(PASS_REFERENCE(sum_handle, 0)),\
(CCTK_INT *)(PASS_REFERENCE(varindices_1st, 0)),\
(CCTK_INT *)(PASS_REFERENCE(varindices_2nd, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NORMS_PROTECTED_FARGUMENTS \


#define NORMS_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NORMS_PROTECTED_CARGUMENTS \


#define DECLARE_NORMS_PROTECTED_C2F \


#define INITIALISE_NORMS_PROTECTED_C2F \


#define NORMS_PROTECTED_C2F_PROTO \


#define PASS_NORMS_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NORMS_PUBLIC_FARGUMENTS \


#define NORMS_PUBLIC_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NORMS_PUBLIC_CARGUMENTS \


#define DECLARE_NORMS_PUBLIC_C2F \


#define INITIALISE_NORMS_PUBLIC_C2F \


#define NORMS_PUBLIC_C2F_PROTO \


#define PASS_NORMS_PUBLIC_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define NORMS_FARGUMENTS _CCTK_FARGUMENTS, NORMS_PRIVATE_FARGUMENTS

#define DECLARE_NORMS_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_NORMS_PRIVATE_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NORMS_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_NORMS_PRIVATE_CARGUMENTS

#define NORMS_C2F_PROTO _CCTK_C2F_PROTO, NORMS_PRIVATE_C2F_PROTO

#define PASS_NORMS_C2F(GH) _PASS_CCTK_C2F(GH), PASS_NORMS_PRIVATE_C2F(GH)

#define DECLARE_NORMS_C2F _DECLARE_CCTK_C2F DECLARE_NORMS_PRIVATE_C2F

#define INITIALISE_NORMS_C2F _INITIALISE_CCTK_C2F INITIALISE_NORMS_PRIVATE_C2F

#define NORMS_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
