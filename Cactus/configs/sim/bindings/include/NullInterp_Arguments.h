/*@@
   @header  NullInterp_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn NullInterp
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_NULLINTERP_PRIVATE_FARGUMENTS \
INTEGER X0tmp_mask&&\
INTEGER X1tmp_mask&&\
CCTK_DECLARE(CCTK_REAL,tmp_maskn,(X0tmp_mask,X1tmp_mask))&&\
CCTK_DECLARE(CCTK_REAL,tmp_masks,(X0tmp_mask,X1tmp_mask))&&\


#define NULLINTERP_PRIVATE_FARGUMENTS \
X0tmp_mask,X1tmp_mask,tmp_maskn,tmp_masks

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLINTERP_PRIVATE_CARGUMENTS \
static int cctki_vi_tmp_maskn = -100; \
if (cctki_vi_tmp_maskn == -100) cctki_vi_tmp_maskn = CCTK_VarIndex("NullInterp::tmp_maskn"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_maskn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_maskn)); \
static int cctki_vi_tmp_masks = -100; \
if (cctki_vi_tmp_masks == -100) cctki_vi_tmp_masks = CCTK_VarIndex("NullInterp::tmp_masks"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_masks, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_masks));

#define DECLARE_NULLINTERP_PRIVATE_C2F \
static int CCTKARGNUM_tmp_maskn = -1; \
static int CCTKGROUPNUM_tmp_mask = -1; \
static int CCTKARGNUM_tmp_masks = -1;

#define INITIALISE_NULLINTERP_PRIVATE_C2F \
if(CCTKARGNUM_tmp_maskn == -1) CCTKARGNUM_tmp_maskn = CCTK_VarIndex("NullInterp::tmp_maskn"); \
if(CCTKGROUPNUM_tmp_mask == -1) CCTKGROUPNUM_tmp_mask = CCTK_GroupIndex("NullInterp::tmp_mask"); \
if(CCTKARGNUM_tmp_masks == -1) CCTKARGNUM_tmp_masks = CCTK_VarIndex("NullInterp::tmp_masks");

#define NULLINTERP_PRIVATE_C2F_PROTO \
const int *,const int *,CCTK_REAL *,CCTK_REAL *

#define PASS_NULLINTERP_PRIVATE_C2F(GH) \
PASS_GROUPSIZE(tmp_mask, 0),\
PASS_GROUPSIZE(tmp_mask, 1),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_maskn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_masks, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLINTERP_PROTECTED_FARGUMENTS \


#define NULLINTERP_PROTECTED_FARGUMENTS \


#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLINTERP_PROTECTED_CARGUMENTS \


#define DECLARE_NULLINTERP_PROTECTED_C2F \


#define INITIALISE_NULLINTERP_PROTECTED_C2F \


#define NULLINTERP_PROTECTED_C2F_PROTO \


#define PASS_NULLINTERP_PROTECTED_C2F(GH) \


#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLINTERP_PUBLIC_FARGUMENTS \
INTEGER X0EG_mask&&\
INTEGER X0EQ_mask&&\
INTEGER X0EV_mask&&\
INTEGER X0NullGrParArrI&&\
INTEGER X0NullGrParArrR&&\
INTEGER X0RadCrd&&\
INTEGER X0StCmCrd&&\
INTEGER X0StCrd&&\
INTEGER X0guard_mask&&\
INTEGER X0tmp_cgf&&\
INTEGER X0tmp_cgf3&&\
INTEGER X0tmp_rgf&&\
INTEGER X1EG_mask&&\
INTEGER X1EQ_mask&&\
INTEGER X1EV_mask&&\
INTEGER X1StCmCrd&&\
INTEGER X1StCrd&&\
INTEGER X1guard_mask&&\
INTEGER X1tmp_cgf&&\
INTEGER X1tmp_cgf3&&\
INTEGER X1tmp_rgf&&\
CCTK_DECLARE(CCTK_INT,EG_mask,(X0EG_mask,X1EG_mask))&&\
CCTK_DECLARE(CCTK_INT,EQ_mask,(X0EQ_mask,X1EQ_mask))&&\
CCTK_DECLARE(CCTK_INT,EV_mask,(X0EV_mask,X1EV_mask))&&\
CCTK_DECLARE(CCTK_REAL,evolution_radius,)&&\
CCTK_DECLARE(CCTK_INT,guard_mask,(X0guard_mask,X1guard_mask))&&\
CCTK_DECLARE(CCTK_REAL,null_delta,(X0NullGrParArrR))&&\
CCTK_DECLARE(CCTK_REAL,null_dx,)&&\
CCTK_DECLARE(CCTK_INT,null_gsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lbnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_rb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_rbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_INT,null_ubnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_xb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_xbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,qsize,)&&\
CCTK_DECLARE(CCTK_REAL,stereo_p,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_pp,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_q,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfn,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfs,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,zeta,(X0StCmCrd,X1StCmCrd))&&\


#define NULLINTERP_PUBLIC_FARGUMENTS \
X0EG_mask,X0EQ_mask,X0EV_mask,X0NullGrParArrI,X0NullGrParArrR,X0RadCrd,X0StCmCrd,X0StCrd,X0guard_mask,X0tmp_cgf,X0tmp_cgf3,X0tmp_rgf,X1EG_mask,X1EQ_mask,X1EV_mask,X1StCmCrd,X1StCrd,X1guard_mask,X1tmp_cgf,X1tmp_cgf3,X1tmp_rgf,EG_mask,EQ_mask,EV_mask,evolution_radius,guard_mask,null_delta,null_dx,null_gsh,null_lbnd,null_lsh,null_rb,null_rbh,null_ubnd,null_xb,null_xbh,qsize,stereo_p,stereo_pp,stereo_q,tmp_cgfn,tmp_cgfn1,tmp_cgfn2,tmp_cgfn3,tmp_cgfs,tmp_cgfs1,tmp_cgfs2,tmp_cgfs3,tmp_rgfn,tmp_rgfs,zeta

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLINTERP_PUBLIC_CARGUMENTS \
static int cctki_vi_EG_mask = -100; \
if (cctki_vi_EG_mask == -100) cctki_vi_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EG_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EG_mask)); \
static int cctki_vi_EQ_mask = -100; \
if (cctki_vi_EQ_mask == -100) cctki_vi_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EQ_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EQ_mask)); \
static int cctki_vi_EV_mask = -100; \
if (cctki_vi_EV_mask == -100) cctki_vi_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EV_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EV_mask)); \
static int cctki_vi_evolution_radius = -100; \
if (cctki_vi_evolution_radius == -100) cctki_vi_evolution_radius = CCTK_VarIndex("NullInterp::evolution_radius"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, evolution_radius, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_radius)); \
static int cctki_vi_guard_mask = -100; \
if (cctki_vi_guard_mask == -100) cctki_vi_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, guard_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_guard_mask)); \
static int cctki_vi_null_delta = -100; \
if (cctki_vi_null_delta == -100) cctki_vi_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_delta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_delta)); \
static int cctki_vi_null_dx = -100; \
if (cctki_vi_null_dx == -100) cctki_vi_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_dx)); \
static int cctki_vi_null_gsh = -100; \
if (cctki_vi_null_gsh == -100) cctki_vi_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_gsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_gsh)); \
static int cctki_vi_null_lbnd = -100; \
if (cctki_vi_null_lbnd == -100) cctki_vi_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lbnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lbnd)); \
static int cctki_vi_null_lsh = -100; \
if (cctki_vi_null_lsh == -100) cctki_vi_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lsh)); \
static int cctki_vi_null_rb = -100; \
if (cctki_vi_null_rb == -100) cctki_vi_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rb)); \
static int cctki_vi_null_rbh = -100; \
if (cctki_vi_null_rbh == -100) cctki_vi_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rbh)); \
static int cctki_vi_null_ubnd = -100; \
if (cctki_vi_null_ubnd == -100) cctki_vi_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_ubnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_ubnd)); \
static int cctki_vi_null_xb = -100; \
if (cctki_vi_null_xb == -100) cctki_vi_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xb)); \
static int cctki_vi_null_xbh = -100; \
if (cctki_vi_null_xbh == -100) cctki_vi_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xbh)); \
static int cctki_vi_qsize = -100; \
if (cctki_vi_qsize == -100) cctki_vi_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, qsize, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qsize)); \
static int cctki_vi_stereo_p = -100; \
if (cctki_vi_stereo_p == -100) cctki_vi_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_p)); \
static int cctki_vi_stereo_pp = -100; \
if (cctki_vi_stereo_pp == -100) cctki_vi_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_pp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_pp)); \
static int cctki_vi_stereo_q = -100; \
if (cctki_vi_stereo_q == -100) cctki_vi_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_q, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_q)); \
static int cctki_vi_tmp_cgfn = -100; \
if (cctki_vi_tmp_cgfn == -100) cctki_vi_tmp_cgfn = CCTK_VarIndex("NullInterp::tmp_cgfn"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn)); \
static int cctki_vi_tmp_cgfn1 = -100; \
if (cctki_vi_tmp_cgfn1 == -100) cctki_vi_tmp_cgfn1 = CCTK_VarIndex("NullInterp::tmp_cgfn1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn1)); \
static int cctki_vi_tmp_cgfn2 = -100; \
if (cctki_vi_tmp_cgfn2 == -100) cctki_vi_tmp_cgfn2 = CCTK_VarIndex("NullInterp::tmp_cgfn2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn2)); \
static int cctki_vi_tmp_cgfn3 = -100; \
if (cctki_vi_tmp_cgfn3 == -100) cctki_vi_tmp_cgfn3 = CCTK_VarIndex("NullInterp::tmp_cgfn3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn3)); \
static int cctki_vi_tmp_cgfs = -100; \
if (cctki_vi_tmp_cgfs == -100) cctki_vi_tmp_cgfs = CCTK_VarIndex("NullInterp::tmp_cgfs"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs)); \
static int cctki_vi_tmp_cgfs1 = -100; \
if (cctki_vi_tmp_cgfs1 == -100) cctki_vi_tmp_cgfs1 = CCTK_VarIndex("NullInterp::tmp_cgfs1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs1)); \
static int cctki_vi_tmp_cgfs2 = -100; \
if (cctki_vi_tmp_cgfs2 == -100) cctki_vi_tmp_cgfs2 = CCTK_VarIndex("NullInterp::tmp_cgfs2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs2)); \
static int cctki_vi_tmp_cgfs3 = -100; \
if (cctki_vi_tmp_cgfs3 == -100) cctki_vi_tmp_cgfs3 = CCTK_VarIndex("NullInterp::tmp_cgfs3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs3)); \
static int cctki_vi_tmp_rgfn = -100; \
if (cctki_vi_tmp_rgfn == -100) cctki_vi_tmp_rgfn = CCTK_VarIndex("NullInterp::tmp_rgfn"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfn)); \
static int cctki_vi_tmp_rgfs = -100; \
if (cctki_vi_tmp_rgfs == -100) cctki_vi_tmp_rgfs = CCTK_VarIndex("NullInterp::tmp_rgfs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfs)); \
static int cctki_vi_zeta = -100; \
if (cctki_vi_zeta == -100) cctki_vi_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, zeta, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zeta));

#define DECLARE_NULLINTERP_PUBLIC_C2F \
static int CCTKARGNUM_EG_mask = -1; \
static int CCTKGROUPNUM_EG_mask = -1; \
static int CCTKARGNUM_EQ_mask = -1; \
static int CCTKGROUPNUM_EQ_mask = -1; \
static int CCTKARGNUM_EV_mask = -1; \
static int CCTKGROUPNUM_EV_mask = -1; \
static int CCTKARGNUM_evolution_radius = -1; \
static int CCTKGROUPNUM_evolution_radius = -1; \
static int CCTKARGNUM_guard_mask = -1; \
static int CCTKGROUPNUM_guard_mask = -1; \
static int CCTKARGNUM_null_delta = -1; \
static int CCTKGROUPNUM_NullGrParArrR = -1; \
static int CCTKARGNUM_null_dx = -1; \
static int CCTKGROUPNUM_NullSclr = -1; \
static int CCTKARGNUM_null_gsh = -1; \
static int CCTKGROUPNUM_NullGrParArrI = -1; \
static int CCTKARGNUM_null_lbnd = -1; \
static int CCTKARGNUM_null_lsh = -1; \
static int CCTKARGNUM_null_rb = -1; \
static int CCTKGROUPNUM_RadCrd = -1; \
static int CCTKARGNUM_null_rbh = -1; \
static int CCTKARGNUM_null_ubnd = -1; \
static int CCTKARGNUM_null_xb = -1; \
static int CCTKARGNUM_null_xbh = -1; \
static int CCTKARGNUM_qsize = -1; \
static int CCTKARGNUM_stereo_p = -1; \
static int CCTKGROUPNUM_StCrd = -1; \
static int CCTKARGNUM_stereo_pp = -1; \
static int CCTKARGNUM_stereo_q = -1; \
static int CCTKARGNUM_tmp_cgfn = -1; \
static int CCTKGROUPNUM_tmp_cgf = -1; \
static int CCTKARGNUM_tmp_cgfn1 = -1; \
static int CCTKGROUPNUM_tmp_cgf3 = -1; \
static int CCTKARGNUM_tmp_cgfn2 = -1; \
static int CCTKARGNUM_tmp_cgfn3 = -1; \
static int CCTKARGNUM_tmp_cgfs = -1; \
static int CCTKARGNUM_tmp_cgfs1 = -1; \
static int CCTKARGNUM_tmp_cgfs2 = -1; \
static int CCTKARGNUM_tmp_cgfs3 = -1; \
static int CCTKARGNUM_tmp_rgfn = -1; \
static int CCTKGROUPNUM_tmp_rgf = -1; \
static int CCTKARGNUM_tmp_rgfs = -1; \
static int CCTKARGNUM_zeta = -1; \
static int CCTKGROUPNUM_StCmCrd = -1;

#define INITIALISE_NULLINTERP_PUBLIC_C2F \
if(CCTKARGNUM_EG_mask == -1) CCTKARGNUM_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
if(CCTKGROUPNUM_EG_mask == -1) CCTKGROUPNUM_EG_mask = CCTK_GroupIndex("NULLGRID::EG_mask"); \
if(CCTKARGNUM_EQ_mask == -1) CCTKARGNUM_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
if(CCTKGROUPNUM_EQ_mask == -1) CCTKGROUPNUM_EQ_mask = CCTK_GroupIndex("NULLGRID::EQ_mask"); \
if(CCTKARGNUM_EV_mask == -1) CCTKARGNUM_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
if(CCTKGROUPNUM_EV_mask == -1) CCTKGROUPNUM_EV_mask = CCTK_GroupIndex("NULLGRID::EV_mask"); \
if(CCTKARGNUM_evolution_radius == -1) CCTKARGNUM_evolution_radius = CCTK_VarIndex("NullInterp::evolution_radius"); \
if(CCTKGROUPNUM_evolution_radius == -1) CCTKGROUPNUM_evolution_radius = CCTK_GroupIndex("NullInterp::evolution_radius"); \
if(CCTKARGNUM_guard_mask == -1) CCTKARGNUM_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
if(CCTKGROUPNUM_guard_mask == -1) CCTKGROUPNUM_guard_mask = CCTK_GroupIndex("NULLGRID::guard_mask"); \
if(CCTKARGNUM_null_delta == -1) CCTKARGNUM_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
if(CCTKGROUPNUM_NullGrParArrR == -1) CCTKGROUPNUM_NullGrParArrR = CCTK_GroupIndex("NULLGRID::NullGrParArrR"); \
if(CCTKARGNUM_null_dx == -1) CCTKARGNUM_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
if(CCTKGROUPNUM_NullSclr == -1) CCTKGROUPNUM_NullSclr = CCTK_GroupIndex("NULLGRID::NullSclr"); \
if(CCTKARGNUM_null_gsh == -1) CCTKARGNUM_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
if(CCTKGROUPNUM_NullGrParArrI == -1) CCTKGROUPNUM_NullGrParArrI = CCTK_GroupIndex("NULLGRID::NullGrParArrI"); \
if(CCTKARGNUM_null_lbnd == -1) CCTKARGNUM_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
if(CCTKARGNUM_null_lsh == -1) CCTKARGNUM_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
if(CCTKARGNUM_null_rb == -1) CCTKARGNUM_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
if(CCTKGROUPNUM_RadCrd == -1) CCTKGROUPNUM_RadCrd = CCTK_GroupIndex("NULLGRID::RadCrd"); \
if(CCTKARGNUM_null_rbh == -1) CCTKARGNUM_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
if(CCTKARGNUM_null_ubnd == -1) CCTKARGNUM_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
if(CCTKARGNUM_null_xb == -1) CCTKARGNUM_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
if(CCTKARGNUM_null_xbh == -1) CCTKARGNUM_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
if(CCTKARGNUM_qsize == -1) CCTKARGNUM_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
if(CCTKARGNUM_stereo_p == -1) CCTKARGNUM_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
if(CCTKGROUPNUM_StCrd == -1) CCTKGROUPNUM_StCrd = CCTK_GroupIndex("NULLGRID::StCrd"); \
if(CCTKARGNUM_stereo_pp == -1) CCTKARGNUM_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
if(CCTKARGNUM_stereo_q == -1) CCTKARGNUM_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
if(CCTKARGNUM_tmp_cgfn == -1) CCTKARGNUM_tmp_cgfn = CCTK_VarIndex("NullInterp::tmp_cgfn"); \
if(CCTKGROUPNUM_tmp_cgf == -1) CCTKGROUPNUM_tmp_cgf = CCTK_GroupIndex("NullInterp::tmp_cgf"); \
if(CCTKARGNUM_tmp_cgfn1 == -1) CCTKARGNUM_tmp_cgfn1 = CCTK_VarIndex("NullInterp::tmp_cgfn1"); \
if(CCTKGROUPNUM_tmp_cgf3 == -1) CCTKGROUPNUM_tmp_cgf3 = CCTK_GroupIndex("NullInterp::tmp_cgf3"); \
if(CCTKARGNUM_tmp_cgfn2 == -1) CCTKARGNUM_tmp_cgfn2 = CCTK_VarIndex("NullInterp::tmp_cgfn2"); \
if(CCTKARGNUM_tmp_cgfn3 == -1) CCTKARGNUM_tmp_cgfn3 = CCTK_VarIndex("NullInterp::tmp_cgfn3"); \
if(CCTKARGNUM_tmp_cgfs == -1) CCTKARGNUM_tmp_cgfs = CCTK_VarIndex("NullInterp::tmp_cgfs"); \
if(CCTKARGNUM_tmp_cgfs1 == -1) CCTKARGNUM_tmp_cgfs1 = CCTK_VarIndex("NullInterp::tmp_cgfs1"); \
if(CCTKARGNUM_tmp_cgfs2 == -1) CCTKARGNUM_tmp_cgfs2 = CCTK_VarIndex("NullInterp::tmp_cgfs2"); \
if(CCTKARGNUM_tmp_cgfs3 == -1) CCTKARGNUM_tmp_cgfs3 = CCTK_VarIndex("NullInterp::tmp_cgfs3"); \
if(CCTKARGNUM_tmp_rgfn == -1) CCTKARGNUM_tmp_rgfn = CCTK_VarIndex("NullInterp::tmp_rgfn"); \
if(CCTKGROUPNUM_tmp_rgf == -1) CCTKGROUPNUM_tmp_rgf = CCTK_GroupIndex("NullInterp::tmp_rgf"); \
if(CCTKARGNUM_tmp_rgfs == -1) CCTKARGNUM_tmp_rgfs = CCTK_VarIndex("NullInterp::tmp_rgfs"); \
if(CCTKARGNUM_zeta == -1) CCTKARGNUM_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
if(CCTKGROUPNUM_StCmCrd == -1) CCTKGROUPNUM_StCmCrd = CCTK_GroupIndex("NULLGRID::StCmCrd");

#define NULLINTERP_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *

#define PASS_NULLINTERP_PUBLIC_C2F(GH) \
PASS_GROUPSIZE(EG_mask, 0),\
PASS_GROUPSIZE(EQ_mask, 0),\
PASS_GROUPSIZE(EV_mask, 0),\
PASS_GROUPSIZE(NullGrParArrI, 0),\
PASS_GROUPSIZE(NullGrParArrR, 0),\
PASS_GROUPSIZE(RadCrd, 0),\
PASS_GROUPSIZE(StCmCrd, 0),\
PASS_GROUPSIZE(StCrd, 0),\
PASS_GROUPSIZE(guard_mask, 0),\
PASS_GROUPSIZE(tmp_cgf, 0),\
PASS_GROUPSIZE(tmp_cgf3, 0),\
PASS_GROUPSIZE(tmp_rgf, 0),\
PASS_GROUPSIZE(EG_mask, 1),\
PASS_GROUPSIZE(EQ_mask, 1),\
PASS_GROUPSIZE(EV_mask, 1),\
PASS_GROUPSIZE(StCmCrd, 1),\
PASS_GROUPSIZE(StCrd, 1),\
PASS_GROUPSIZE(guard_mask, 1),\
PASS_GROUPSIZE(tmp_cgf, 1),\
PASS_GROUPSIZE(tmp_cgf3, 1),\
PASS_GROUPSIZE(tmp_rgf, 1),\
(CCTK_INT *)(PASS_REFERENCE(EG_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EQ_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EV_mask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(evolution_radius, 0)),\
(CCTK_INT *)(PASS_REFERENCE(guard_mask, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_delta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_dx, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_gsh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lbnd, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lsh, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rbh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_ubnd, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xbh, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(qsize, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_pp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_q, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn3, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(zeta, 0))

#endif /* CCODE */

#ifdef FCODE
#define NULLINTERP_FARGUMENTS _CCTK_FARGUMENTS, NULLINTERP_PRIVATE_FARGUMENTS, NULLINTERP_PUBLIC_FARGUMENTS

#define DECLARE_NULLINTERP_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_NULLINTERP_PRIVATE_FARGUMENTS DECLARE_NULLINTERP_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLINTERP_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_NULLINTERP_PRIVATE_CARGUMENTS DECLARE_NULLINTERP_PUBLIC_CARGUMENTS

#define NULLINTERP_C2F_PROTO _CCTK_C2F_PROTO, NULLINTERP_PRIVATE_C2F_PROTO, NULLINTERP_PUBLIC_C2F_PROTO

#define PASS_NULLINTERP_C2F(GH) _PASS_CCTK_C2F(GH), PASS_NULLINTERP_PRIVATE_C2F(GH), PASS_NULLINTERP_PUBLIC_C2F(GH)

#define DECLARE_NULLINTERP_C2F _DECLARE_CCTK_C2F DECLARE_NULLINTERP_PRIVATE_C2F DECLARE_NULLINTERP_PUBLIC_C2F

#define INITIALISE_NULLINTERP_C2F _INITIALISE_CCTK_C2F INITIALISE_NULLINTERP_PRIVATE_C2F INITIALISE_NULLINTERP_PUBLIC_C2F

#define NULLINTERP_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
