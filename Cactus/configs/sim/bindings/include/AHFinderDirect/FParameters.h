#define DECLARE_CCTK_PARAMETERS \
CCTK_DECLARE(CCTK_REAL,ILUCG__error_tolerance,)&&\
CCTK_DECLARE(CCTK_REAL,Jacobian_perturbation_amplitude,)&&\
CCTK_DECLARE(CCTK_REAL,Theta_norm_for_convergence,)&&\
CCTK_DECLARE(CCTK_REAL,desired_value,(101))&&\
CCTK_DECLARE(CCTK_REAL,desired_value_factor,(101))&&\
CCTK_DECLARE(CCTK_REAL,desired_value_offset,(101))&&\
CCTK_DECLARE(CCTK_REAL,dont_find_after_individual_time,(101))&&\
CCTK_DECLARE(CCTK_REAL,find_after_individual_time,(101))&&\
CCTK_DECLARE(CCTK_REAL,geometry__Schwarzschild_EF__Delta_xyz,)&&\
CCTK_DECLARE(CCTK_REAL,geometry__Schwarzschild_EF__epsilon,)&&\
CCTK_DECLARE(CCTK_REAL,geometry__Schwarzschild_EF__mass,)&&\
CCTK_DECLARE(CCTK_REAL,geometry__Schwarzschild_EF__x_posn,)&&\
CCTK_DECLARE(CCTK_REAL,geometry__Schwarzschild_EF__y_posn,)&&\
CCTK_DECLARE(CCTK_REAL,geometry__Schwarzschild_EF__z_posn,)&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_KerrSchild__mass,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_KerrSchild__spin,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_KerrSchild__x_posn,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_KerrSchild__y_posn,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_KerrSchild__z_posn,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_Kerr__mass,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_Kerr__spin,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_Kerr__x_posn,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_Kerr__y_posn,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__Kerr_Kerr__z_posn,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_ellipsoid__x_center,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_ellipsoid__x_radius,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_ellipsoid__y_center,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_ellipsoid__y_radius,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_ellipsoid__z_center,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_ellipsoid__z_radius,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_sphere__radius,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_sphere__x_center,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_sphere__y_center,(101))&&\
CCTK_DECLARE(CCTK_REAL,initial_guess__coord_sphere__z_center,(101))&&\
CCTK_DECLARE(CCTK_REAL,mask_buffer_thickness,)&&\
CCTK_DECLARE(CCTK_REAL,mask_radius_multiplier,)&&\
CCTK_DECLARE(CCTK_REAL,mask_radius_offset,)&&\
CCTK_DECLARE(CCTK_REAL,max_allowable_Delta_h_over_h,)&&\
CCTK_DECLARE(CCTK_REAL,max_allowable_Theta,)&&\
CCTK_DECLARE(CCTK_REAL,max_allowable_horizon_radius,(101))&&\
CCTK_DECLARE(CCTK_REAL,min_horizon_radius_points_for_mask,)&&\
CCTK_DECLARE(CCTK_REAL,old_style_mask_buffer_value,)&&\
CCTK_DECLARE(CCTK_REAL,old_style_mask_inside_value,)&&\
CCTK_DECLARE(CCTK_REAL,old_style_mask_outside_value,)&&\
CCTK_DECLARE(CCTK_REAL,origin_x,(101))&&\
CCTK_DECLARE(CCTK_REAL,origin_y,(101))&&\
CCTK_DECLARE(CCTK_REAL,origin_z,(101))&&\
CCTK_DECLARE(CCTK_REAL,pretracking_delta,(101))&&\
CCTK_DECLARE(CCTK_REAL,pretracking_maximum_delta,(101))&&\
CCTK_DECLARE(CCTK_REAL,pretracking_maximum_value,(101))&&\
CCTK_DECLARE(CCTK_REAL,pretracking_minimum_delta,(101))&&\
CCTK_DECLARE(CCTK_REAL,pretracking_minimum_value,(101))&&\
CCTK_DECLARE(CCTK_REAL,pretracking_value,(101))&&\
CCTK_DECLARE(CCTK_REAL,shiftout_factor,(101))&&\
CCTK_DECLARE(CCTK_REAL,smoothing_factor,(101))&&\
CCTK_DECLARE(CCTK_STRING,ASCII_gnuplot_file_name_extension,)&&\
CCTK_DECLARE(CCTK_STRING,BH_diagnostics_base_file_name,)&&\
CCTK_DECLARE(CCTK_STRING,BH_diagnostics_directory,)&&\
CCTK_DECLARE(CCTK_STRING,BH_diagnostics_file_name_extension,)&&\
CCTK_DECLARE(CCTK_STRING,Delta_h_base_file_name,)&&\
CCTK_DECLARE(CCTK_STRING,HDF5_file_name_extension,)&&\
CCTK_DECLARE(CCTK_STRING,Jacobian_base_file_name,)&&\
CCTK_DECLARE(CCTK_STRING,Jacobian_compute_method,)&&\
CCTK_DECLARE(CCTK_STRING,Jacobian_store_solve_method,)&&\
CCTK_DECLARE(CCTK_STRING,OpenDX_control_file_name_extension,)&&\
CCTK_DECLARE(CCTK_STRING,Theta_base_file_name,)&&\
CCTK_DECLARE(CCTK_STRING,coordinate_system_name,)&&\
CCTK_DECLARE(CCTK_STRING,geometry_interpolator_name,)&&\
CCTK_DECLARE(CCTK_STRING,geometry_interpolator_pars,)&&\
CCTK_DECLARE(CCTK_STRING,h_base_file_name,)&&\
CCTK_DECLARE(CCTK_STRING,h_directory,)&&\
CCTK_DECLARE(CCTK_STRING,initial_guess__read_from_named_file__file_name,(101))&&\
CCTK_DECLARE(CCTK_STRING,initial_guess_method,(101))&&\
CCTK_DECLARE(CCTK_STRING,integral_method,)&&\
CCTK_DECLARE(CCTK_STRING,interpatch_interpolator_name,)&&\
CCTK_DECLARE(CCTK_STRING,interpatch_interpolator_pars,)&&\
CCTK_DECLARE(CCTK_STRING,mean_curvature_base_file_name,)&&\
CCTK_DECLARE(CCTK_STRING,method,)&&\
CCTK_DECLARE(CCTK_STRING,new_style_mask_bitfield_name,)&&\
CCTK_DECLARE(CCTK_STRING,new_style_mask_buffer_value,)&&\
CCTK_DECLARE(CCTK_STRING,new_style_mask_gridfn_name,)&&\
CCTK_DECLARE(CCTK_STRING,new_style_mask_inside_value,)&&\
CCTK_DECLARE(CCTK_STRING,new_style_mask_outside_value,)&&\
CCTK_DECLARE(CCTK_STRING,old_style_mask_gridfn_name,)&&\
CCTK_DECLARE(CCTK_STRING,patch_system_type,(101))&&\
CCTK_DECLARE(CCTK_STRING,surface_definition,(101))&&\
CCTK_DECLARE(CCTK_STRING,surface_interpolator_name,)&&\
CCTK_DECLARE(CCTK_STRING,surface_interpolator_pars,)&&\
CCTK_DECLARE(CCTK_STRING,surface_modification,(101))&&\
CCTK_DECLARE(CCTK_STRING,surface_selection,(101))&&\
CCTK_DECLARE(CCTK_STRING,track_origin_source_x,(101))&&\
CCTK_DECLARE(CCTK_STRING,track_origin_source_y,(101))&&\
CCTK_DECLARE(CCTK_STRING,track_origin_source_z,(101))&&\
CCTK_DECLARE(CCTK_STRING,verbose_level,)&&\
CCTK_DECLARE(CCTK_STRING,which_surface_to_store_info_by_name,(101))&&\
CCTK_DECLARE(CCTK_INT,ILUCG__limit_CG_iterations,)&&\
CCTK_DECLARE(CCTK_INT,N_horizons,)&&\
CCTK_DECLARE(CCTK_INT,N_zones_per_right_angle,(101))&&\
CCTK_DECLARE(CCTK_INT,UMFPACK__N_II_iterations,)&&\
CCTK_DECLARE(CCTK_INT,check_that_geometry_is_finite,)&&\
CCTK_DECLARE(CCTK_INT,check_that_h_is_finite,)&&\
CCTK_DECLARE(CCTK_INT,debugging_output_at_each_Newton_iteration,)&&\
CCTK_DECLARE(CCTK_INT,depends_on,(101))&&\
CCTK_DECLARE(CCTK_INT,disable_horizon,(101))&&\
CCTK_DECLARE(CCTK_INT,dont_find_after_individual,(101))&&\
CCTK_DECLARE(CCTK_INT,find_after_individual,(101))&&\
CCTK_DECLARE(CCTK_INT,find_every,)&&\
CCTK_DECLARE(CCTK_INT,find_every_individual,(101))&&\
CCTK_DECLARE(CCTK_INT,ghost_zone_width,)&&\
CCTK_DECLARE(CCTK_INT,h_min_digits,)&&\
CCTK_DECLARE(CCTK_INT,hardwire_Schwarzschild_EF_geometry,)&&\
CCTK_DECLARE(CCTK_INT,mask_is_noshrink,)&&\
CCTK_DECLARE(CCTK_INT,max_N_zones_per_right_angle,)&&\
CCTK_DECLARE(CCTK_INT,max_Newton_iterations__initial,)&&\
CCTK_DECLARE(CCTK_INT,max_Newton_iterations__subsequent,)&&\
CCTK_DECLARE(CCTK_INT,max_allowable_Theta_growth_iterations,)&&\
CCTK_DECLARE(CCTK_INT,max_allowable_Theta_nonshrink_iterations,)&&\
CCTK_DECLARE(CCTK_INT,move_origins,)&&\
CCTK_DECLARE(CCTK_INT,output_ASCII_files,)&&\
CCTK_DECLARE(CCTK_INT,output_BH_diagnostics,)&&\
CCTK_DECLARE(CCTK_INT,output_HDF5_files,)&&\
CCTK_DECLARE(CCTK_INT,output_OpenDX_control_files,)&&\
CCTK_DECLARE(CCTK_INT,output_Theta_every,)&&\
CCTK_DECLARE(CCTK_INT,output_ghost_zones_for_h,)&&\
CCTK_DECLARE(CCTK_INT,output_h_every,)&&\
CCTK_DECLARE(CCTK_INT,output_initial_guess,)&&\
CCTK_DECLARE(CCTK_INT,output_mean_curvature_every,)&&\
CCTK_DECLARE(CCTK_INT,patch_overlap_width,)&&\
CCTK_DECLARE(CCTK_INT,predict_origin_movement,)&&\
CCTK_DECLARE(CCTK_INT,pretracking_max_iterations,(101))&&\
CCTK_DECLARE(CCTK_INT,print_timing_stats,)&&\
CCTK_DECLARE(CCTK_INT,reset_horizon_after_not_finding,(101))&&\
CCTK_DECLARE(CCTK_INT,reshape_while_moving,)&&\
CCTK_DECLARE(CCTK_INT,run_at_CCTK_ANALYSIS,)&&\
CCTK_DECLARE(CCTK_INT,run_at_CCTK_POSTINITIAL,)&&\
CCTK_DECLARE(CCTK_INT,run_at_CCTK_POSTPOSTINITIAL,)&&\
CCTK_DECLARE(CCTK_INT,run_at_CCTK_POSTSTEP,)&&\
CCTK_DECLARE(CCTK_INT,run_at_CCTK_POST_RECOVER_VARIABLES,)&&\
CCTK_DECLARE(CCTK_INT,set_mask_for_all_horizons,)&&\
CCTK_DECLARE(CCTK_INT,set_mask_for_individual_horizon,(101))&&\
CCTK_DECLARE(CCTK_INT,set_new_style_mask,)&&\
CCTK_DECLARE(CCTK_INT,set_old_style_mask,)&&\
CCTK_DECLARE(CCTK_INT,test_all_Jacobian_compute_methods,)&&\
CCTK_DECLARE(CCTK_INT,track_origin_from_grid_scalar,(101))&&\
CCTK_DECLARE(CCTK_INT,use_pretracking,(101))&&\
CCTK_DECLARE(CCTK_INT,want_expansion_gradients,)&&\
CCTK_DECLARE(CCTK_INT,warn_level__gij_not_positive_definite__initial,)&&\
CCTK_DECLARE(CCTK_INT,warn_level__gij_not_positive_definite__subsequent,)&&\
CCTK_DECLARE(CCTK_INT,warn_level__nonfinite_geometry,)&&\
CCTK_DECLARE(CCTK_INT,warn_level__point_outside__initial,)&&\
CCTK_DECLARE(CCTK_INT,warn_level__point_outside__subsequent,)&&\
CCTK_DECLARE(CCTK_INT,warn_level__skipping_finite_check,)&&\
CCTK_DECLARE(CCTK_INT,which_horizon_to_announce_centroid,)&&\
CCTK_DECLARE(CCTK_INT,which_surface_to_store_info,(101))&&\
COMMON /AHFinderDirectpriv/ILUCG__error_tolerance, Jacobian_perturbation_amplitude, Theta_norm_for_convergence, desired_value, desired_value_factor, desired_value_offset, dont_find_after_individual_time, find_after_individual_time, geometry__Schwarzschild_EF__Delta_xyz, geometry__Schwarzschild_EF__epsilon, geometry__Schwarzschild_EF__mass, geometry__Schwarzschild_EF__x_posn, geometry__Schwarzschild_EF__y_posn, geometry__Schwarzschild_EF__z_posn, initial_guess__Kerr_KerrSchild__mass, initial_guess__Kerr_KerrSchild__spin, initial_guess__Kerr_KerrSchild__x_posn, initial_guess__Kerr_KerrSchild__y_posn, initial_guess__Kerr_KerrSchild__z_posn, initial_guess__Kerr_Kerr__mass, initial_guess__Kerr_Kerr__spin, initial_guess__Kerr_Kerr__x_posn, initial_guess__Kerr_Kerr__y_posn, initial_guess__Kerr_Kerr__z_posn, initial_guess__coord_ellipsoid__x_center, initial_guess__coord_ellipsoid__x_radius, initial_guess__coord_ellipsoid__y_center, initial_guess__coord_ellipsoid__y_radius, initial_guess__coord_ellipsoid__z_center, initial_guess__coord_ellipsoid__z_radius, initial_guess__coord_sphere__radius, initial_guess__coord_sphere__x_center, initial_guess__coord_sphere__y_center, initial_guess__coord_sphere__z_center, mask_buffer_thickness, mask_radius_multiplier, mask_radius_offset, max_allowable_Delta_h_over_h, max_allowable_Theta, max_allowable_horizon_radius, min_horizon_radius_points_for_mask, old_style_mask_buffer_value, old_style_mask_inside_value, old_style_mask_outside_value, origin_x, origin_y, origin_z, pretracking_delta, pretracking_maximum_delta, pretracking_maximum_value, pretracking_minimum_delta, pretracking_minimum_value, pretracking_value, shiftout_factor, smoothing_factor, ASCII_gnuplot_file_name_extension, BH_diagnostics_base_file_name, BH_diagnostics_directory, BH_diagnostics_file_name_extension, Delta_h_base_file_name, HDF5_file_name_extension, Jacobian_base_file_name, Jacobian_compute_method, Jacobian_store_solve_method, OpenDX_control_file_name_extension, Theta_base_file_name, coordinate_system_name, geometry_interpolator_name, geometry_interpolator_pars, h_base_file_name, h_directory, initial_guess__read_from_named_file__file_name, initial_guess_method, integral_method, interpatch_interpolator_name, interpatch_interpolator_pars, mean_curvature_base_file_name, method, new_style_mask_bitfield_name, new_style_mask_buffer_value, new_style_mask_gridfn_name, new_style_mask_inside_value, new_style_mask_outside_value, old_style_mask_gridfn_name, patch_system_type, surface_definition, surface_interpolator_name, surface_interpolator_pars, surface_modification, surface_selection, track_origin_source_x, track_origin_source_y, track_origin_source_z, verbose_level, which_surface_to_store_info_by_name, ILUCG__limit_CG_iterations, N_horizons, N_zones_per_right_angle, UMFPACK__N_II_iterations, check_that_geometry_is_finite, check_that_h_is_finite, debugging_output_at_each_Newton_iteration, depends_on, disable_horizon, dont_find_after_individual, find_after_individual, find_every, find_every_individual, ghost_zone_width, h_min_digits, hardwire_Schwarzschild_EF_geometry, mask_is_noshrink, max_N_zones_per_right_angle, max_Newton_iterations__initial, max_Newton_iterations__subsequent, max_allowable_Theta_growth_iterations, max_allowable_Theta_nonshrink_iterations, move_origins, output_ASCII_files, output_BH_diagnostics, output_HDF5_files, output_OpenDX_control_files, output_Theta_every, output_ghost_zones_for_h, output_h_every, output_initial_guess, output_mean_curvature_every, patch_overlap_width, predict_origin_movement, pretracking_max_iterations, print_timing_stats, reset_horizon_after_not_finding, reshape_while_moving, run_at_CCTK_ANALYSIS, run_at_CCTK_POSTINITIAL, run_at_CCTK_POSTPOSTINITIAL, run_at_CCTK_POSTSTEP, run_at_CCTK_POST_RECOVER_VARIABLES, set_mask_for_all_horizons, set_mask_for_individual_horizon, set_new_style_mask, set_old_style_mask, test_all_Jacobian_compute_methods, track_origin_from_grid_scalar, use_pretracking, want_expansion_gradients, warn_level__gij_not_positive_definite__initial, warn_level__gij_not_positive_definite__subsequent, warn_level__nonfinite_geometry, warn_level__point_outside__initial, warn_level__point_outside__subsequent, warn_level__skipping_finite_check, which_horizon_to_announce_centroid, which_surface_to_store_info&&\
CCTK_DECLARE(CCTK_STRING,CCTKH0,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH1,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH2,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH3,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH4,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH5,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH6,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH7,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH8,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH9,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH10,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH12,)&&\
CCTK_DECLARE(CCTK_STRING,metric_type,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH13,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH14,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH11,)&&\
CCTK_DECLARE(CCTK_INT,metric_timelevels,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH15,)&&\
COMMON /ADMBASErest/CCTKH0, CCTKH1, CCTKH2, CCTKH3, CCTKH4, CCTKH5, CCTKH6, CCTKH7, CCTKH8, CCTKH9, CCTKH10, CCTKH12, metric_type, CCTKH13, CCTKH14, CCTKH11, metric_timelevels, CCTKH15&&\
CCTK_DECLARE(CCTK_REAL,CCTKH16,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH17,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH18,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH19,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH27,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH28,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH29,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH30,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH31,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH32,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH33,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH34,)&&\
CCTK_DECLARE(CCTK_STRING,bitant_plane,)&&\
CCTK_DECLARE(CCTK_STRING,domain,)&&\
CCTK_DECLARE(CCTK_STRING,quadrant_direction,)&&\
CCTK_DECLARE(CCTK_STRING,rotation_axis,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH26,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH20,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH21,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH22,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH23,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH24,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH25,)&&\
COMMON /GRIDrest/CCTKH16, CCTKH17, CCTKH18, CCTKH19, CCTKH27, CCTKH28, CCTKH29, CCTKH30, CCTKH31, CCTKH32, CCTKH33, CCTKH34, bitant_plane, domain, quadrant_direction, rotation_axis, CCTKH26, CCTKH20, CCTKH21, CCTKH22, CCTKH23, CCTKH24, CCTKH25&&\
CCTK_DECLARE(CCTK_REAL,CCTKH40,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH53,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH63,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH65,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH67,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH69,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH71,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH73,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH75,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH77,)&&\
CCTK_DECLARE(CCTK_REAL,CCTKH79,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH37,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH38,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH41,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH44,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH45,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH46,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH49,)&&\
CCTK_DECLARE(CCTK_STRING,out_dir,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH55,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH56,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH57,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH59,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH81,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH83,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH85,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH87,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH88,)&&\
CCTK_DECLARE(CCTK_STRING,CCTKH91,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH35,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH36,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH39,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH42,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH43,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH47,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH48,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH50,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH51,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH52,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH54,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH58,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH60,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH61,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH62,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH64,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH66,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH68,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH70,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH72,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH74,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH76,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH78,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH80,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH82,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH84,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH86,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH89,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH90,)&&\
COMMON /IOrest/CCTKH40, CCTKH53, CCTKH63, CCTKH65, CCTKH67, CCTKH69, CCTKH71, CCTKH73, CCTKH75, CCTKH77, CCTKH79, CCTKH37, CCTKH38, CCTKH41, CCTKH44, CCTKH45, CCTKH46, CCTKH49, out_dir, CCTKH55, CCTKH56, CCTKH57, CCTKH59, CCTKH81, CCTKH83, CCTKH85, CCTKH87, CCTKH88, CCTKH91, CCTKH35, CCTKH36, CCTKH39, CCTKH42, CCTKH43, CCTKH47, CCTKH48, CCTKH50, CCTKH51, CCTKH52, CCTKH54, CCTKH58, CCTKH60, CCTKH61, CCTKH62, CCTKH64, CCTKH66, CCTKH68, CCTKH70, CCTKH72, CCTKH74, CCTKH76, CCTKH78, CCTKH80, CCTKH82, CCTKH84, CCTKH86, CCTKH89, CCTKH90&&\
CCTK_DECLARE(CCTK_INT,use_mask,)&&\
COMMON /SPACEMASKrest/use_mask&&\
CCTK_DECLARE(CCTK_REAL,CCTKH94,(42))&&\
CCTK_DECLARE(CCTK_STRING,CCTKH93,(42))&&\
CCTK_DECLARE(CCTK_STRING,CCTKH95,(42))&&\
CCTK_DECLARE(CCTK_INT,CCTKH92,(42))&&\
CCTK_DECLARE(CCTK_INT,maxnphi,)&&\
CCTK_DECLARE(CCTK_INT,maxntheta,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH96,(42))&&\
CCTK_DECLARE(CCTK_INT,CCTKH97,(42))&&\
CCTK_DECLARE(CCTK_INT,CCTKH98,(42))&&\
CCTK_DECLARE(CCTK_INT,nsurfaces,)&&\
CCTK_DECLARE(CCTK_INT,CCTKH99,(42))&&\
CCTK_DECLARE(CCTK_INT,CCTKH100,(42))&&\
CCTK_DECLARE(CCTK_INT,CCTKH101,(42))&&\
CCTK_DECLARE(CCTK_INT,CCTKH102,(42))&&\
CCTK_DECLARE(CCTK_INT,CCTKH103,)&&\
COMMON /SPHERICALSURFACErest/CCTKH94, CCTKH93, CCTKH95, CCTKH92, maxnphi, maxntheta, CCTKH96, CCTKH97, CCTKH98, nsurfaces, CCTKH99, CCTKH100, CCTKH101, CCTKH102, CCTKH103&&\

