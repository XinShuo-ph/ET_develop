/*@@
   @header  NullExact_Arguments.h
   @author  Automatically generated by GridFuncStuff.pl
   @desc
            Defines macros to declare/define/pass function arguments
            in calls from C to Fortran for thorn NullExact
   @enddesc
 @@*/


#ifdef FCODE
#define DECLARE_NULLEXACT_PRIVATE_FARGUMENTS \
INTEGER J_l_err_length&&\
INTEGER NewsB_e_length&&\
INTEGER NewsBi_e_length&&\
INTEGER NewsBi_length&&\
INTEGER NewsBr_e_length&&\
INTEGER NewsBr_length&&\
INTEGER News_MoL_length&&\
INTEGER Newsi_e_length&&\
INTEGER Newsr_e_length&&\
INTEGER Psi4_e_length&&\
INTEGER Psi4i_e_length&&\
INTEGER Psi4r_e_length&&\
INTEGER X0J_l_err&&\
INTEGER X0NewsB_e&&\
INTEGER X0NewsBi&&\
INTEGER X0NewsBi_e&&\
INTEGER X0NewsBr&&\
INTEGER X0NewsBr_e&&\
INTEGER X0News_MoL&&\
INTEGER X0Newsi_e&&\
INTEGER X0Newsr_e&&\
INTEGER X0Psi4_e&&\
INTEGER X0Psi4i_e&&\
INTEGER X0Psi4r_e&&\
INTEGER X0WTexact_mask&&\
INTEGER X0Ylm_group&&\
INTEGER X0ana_J&&\
INTEGER X0ana_J_l&&\
INTEGER X0ana_News&&\
INTEGER X0ana_Psi4&&\
INTEGER X0ana_Q&&\
INTEGER X0ana_U&&\
INTEGER X0ana_mu&&\
INTEGER X0cmplxcharfuncs_aux_e&&\
INTEGER X0cmplxcharfuncs_aux_e_south&&\
INTEGER X0cmplxcharfuncs_basic_e&&\
INTEGER X0cmplxcharfuncs_basic_e_mask&&\
INTEGER X0cmplxcharfuncs_basic_e_south&&\
INTEGER X0cmplxcharfuncs_basic_e_split&&\
INTEGER X0dotNews_MoL&&\
INTEGER X0errNews_MoL&&\
INTEGER X0hJ_l&&\
INTEGER X0hmu&&\
INTEGER X0mu_err&&\
INTEGER X0num_J_l&&\
INTEGER X0realConstr_e&&\
INTEGER X0realcharfuncs_e&&\
INTEGER X0realcharfuncs_e_south&&\
INTEGER X0uBondi_e&&\
INTEGER X1J_l_err&&\
INTEGER X1NewsB_e&&\
INTEGER X1NewsBi&&\
INTEGER X1NewsBi_e&&\
INTEGER X1NewsBr&&\
INTEGER X1NewsBr_e&&\
INTEGER X1News_MoL&&\
INTEGER X1Newsi_e&&\
INTEGER X1Newsr_e&&\
INTEGER X1Psi4_e&&\
INTEGER X1Psi4i_e&&\
INTEGER X1Psi4r_e&&\
INTEGER X1WTexact_mask&&\
INTEGER X1Ylm_group&&\
INTEGER X1ana_J&&\
INTEGER X1ana_J_l&&\
INTEGER X1ana_News&&\
INTEGER X1ana_Psi4&&\
INTEGER X1ana_Q&&\
INTEGER X1ana_U&&\
INTEGER X1ana_mu&&\
INTEGER X1cmplxcharfuncs_aux_e&&\
INTEGER X1cmplxcharfuncs_aux_e_south&&\
INTEGER X1cmplxcharfuncs_basic_e&&\
INTEGER X1cmplxcharfuncs_basic_e_mask&&\
INTEGER X1cmplxcharfuncs_basic_e_south&&\
INTEGER X1cmplxcharfuncs_basic_e_split&&\
INTEGER X1dotNews_MoL&&\
INTEGER X1errNews_MoL&&\
INTEGER X1hJ_l&&\
INTEGER X1hmu&&\
INTEGER X1mu_err&&\
INTEGER X1num_J_l&&\
INTEGER X1realConstr_e&&\
INTEGER X1realcharfuncs_e&&\
INTEGER X1realcharfuncs_e_south&&\
INTEGER X1uBondi_e&&\
INTEGER Ylm_group_length&&\
INTEGER ana_J_l_length&&\
INTEGER ana_J_length&&\
INTEGER ana_News_length&&\
INTEGER ana_Psi4_length&&\
INTEGER ana_Q_length&&\
INTEGER ana_U_length&&\
INTEGER ana_mu_length&&\
INTEGER cmplxcharfuncs_aux_e_length&&\
INTEGER cmplxcharfuncs_aux_e_south_length&&\
INTEGER cmplxcharfuncs_basic_e_length&&\
INTEGER cmplxcharfuncs_basic_e_mask_length&&\
INTEGER cmplxcharfuncs_basic_e_south_length&&\
INTEGER cmplxcharfuncs_basic_e_split_length&&\
INTEGER dotNews_MoL_length&&\
INTEGER errNews_MoL_length&&\
INTEGER hJ_l_length&&\
INTEGER hmu_length&&\
INTEGER mu_err_length&&\
INTEGER num_J_l_length&&\
INTEGER realConstr_e_length&&\
INTEGER realcharfuncs_e_length&&\
INTEGER realcharfuncs_e_south_length&&\
INTEGER uBondi_e_length&&\
CCTK_DECLARE(CCTK_COMPLEX,EGaJ_l_e,(X0J_l_err,X1J_l_err,J_l_err_length))&&\
CCTK_DECLARE(CCTK_REAL,EGmu_e,(X0mu_err,X1mu_err,mu_err_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,EGnJ_l_e,(X0J_l_err,X1J_l_err,J_l_err_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,EQJh_l,(X0hJ_l,X1hJ_l,hJ_l_length))&&\
CCTK_DECLARE(CCTK_REAL,EQmuh,(X0hmu,X1hmu,hmu_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Jh_l,(X0hJ_l,X1hJ_l,hJ_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Meth2jcn_e,(X0cmplxcharfuncs_basic_e_mask,X1cmplxcharfuncs_basic_e_mask,cmplxcharfuncs_basic_e_mask_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Mjcn_e,(X0cmplxcharfuncs_basic_e_mask,X1cmplxcharfuncs_basic_e_mask,cmplxcharfuncs_basic_e_mask_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Mucn_e,(X0cmplxcharfuncs_basic_e_mask,X1cmplxcharfuncs_basic_e_mask,cmplxcharfuncs_basic_e_mask_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,NewsB_e,(X0NewsB_e,X1NewsB_e,NewsB_e_length))&&\
CCTK_DECLARE(CCTK_REAL,NewsBi,(X0NewsBi,X1NewsBi,NewsBi_length))&&\
CCTK_DECLARE(CCTK_REAL,NewsBi_e,(X0NewsBi_e,X1NewsBi_e,NewsBi_e_length))&&\
CCTK_DECLARE(CCTK_REAL,NewsBr,(X0NewsBr,X1NewsBr,NewsBr_length))&&\
CCTK_DECLARE(CCTK_REAL,NewsBr_e,(X0NewsBr_e,X1NewsBr_e,NewsBr_e_length))&&\
CCTK_DECLARE(CCTK_REAL,News_MoL,(X0News_MoL,X1News_MoL,News_MoL_length))&&\
CCTK_DECLARE(CCTK_REAL,News_MoL_p,(X0News_MoL,X1News_MoL,News_MoL_length))&&\
CCTK_DECLARE(CCTK_REAL,Newsi_e,(X0Newsi_e,X1Newsi_e,Newsi_e_length))&&\
CCTK_DECLARE(CCTK_REAL,Newsr_e,(X0Newsr_e,X1Newsr_e,Newsr_e_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Psi4_e,(X0Psi4_e,X1Psi4_e,Psi4_e_length))&&\
CCTK_DECLARE(CCTK_REAL,Psi4i_e,(X0Psi4i_e,X1Psi4i_e,Psi4i_e_length))&&\
CCTK_DECLARE(CCTK_REAL,Psi4r_e,(X0Psi4r_e,X1Psi4r_e,Psi4r_e_length))&&\
CCTK_DECLARE(CCTK_REAL,R01n_e,(X0realConstr_e,X1realConstr_e,realConstr_e_length))&&\
CCTK_DECLARE(CCTK_REAL,R01s_e,(X0realConstr_e,X1realConstr_e,realConstr_e_length))&&\
CCTK_DECLARE(CCTK_INT,WTexact_maskn,(X0WTexact_mask,X1WTexact_mask))&&\
CCTK_DECLARE(CCTK_INT,WTexact_masks,(X0WTexact_mask,X1WTexact_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,Ylm_0,(X0Ylm_group,X1Ylm_group,Ylm_group_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Ylm_1,(X0Ylm_group,X1Ylm_group,Ylm_group_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Ylm_2,(X0Ylm_group,X1Ylm_group,Ylm_group_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,aJ_l_e,(X0J_l_err,X1J_l_err,J_l_err_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ana_J_l,(X0ana_J_l,X1ana_J_l,ana_J_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ana_News,(X0ana_News,X1ana_News,ana_News_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ana_Psi4,(X0ana_Psi4,X1ana_Psi4,ana_Psi4_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ana_jcn,(X0ana_J,X1ana_J,ana_J_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ana_jcs,(X0ana_J,X1ana_J,ana_J_length))&&\
CCTK_DECLARE(CCTK_REAL,ana_mu,(X0ana_mu,X1ana_mu,ana_mu_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ana_qcn,(X0ana_Q,X1ana_Q,ana_Q_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ana_qcs,(X0ana_Q,X1ana_Q,ana_Q_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ana_ucn,(X0ana_U,X1ana_U,ana_U_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ana_ucs,(X0ana_U,X1ana_U,ana_U_length))&&\
CCTK_DECLARE(CCTK_REAL,bcn_e,(X0realcharfuncs_e,X1realcharfuncs_e,realcharfuncs_e_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs_e,(X0realcharfuncs_e_south,X1realcharfuncs_e_south,realcharfuncs_e_south_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn_e,(X0cmplxcharfuncs_aux_e,X1cmplxcharfuncs_aux_e,cmplxcharfuncs_aux_e_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs_e,(X0cmplxcharfuncs_aux_e_south,X1cmplxcharfuncs_aux_e_south,cmplxcharfuncs_aux_e_south_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn_e,(X0cmplxcharfuncs_aux_e,X1cmplxcharfuncs_aux_e,cmplxcharfuncs_aux_e_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs_e,(X0cmplxcharfuncs_aux_e_south,X1cmplxcharfuncs_aux_e_south,cmplxcharfuncs_aux_e_south_length))&&\
CCTK_DECLARE(CCTK_REAL,dotNews_MoL,(X0dotNews_MoL,X1dotNews_MoL,dotNews_MoL_length))&&\
CCTK_DECLARE(CCTK_REAL,dotNews_MoL_p,(X0dotNews_MoL,X1dotNews_MoL,dotNews_MoL_length))&&\
CCTK_DECLARE(CCTK_REAL,errNews_MoL,(X0errNews_MoL,X1errNews_MoL,errNews_MoL_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn_e,(X0cmplxcharfuncs_basic_e,X1cmplxcharfuncs_basic_e,cmplxcharfuncs_basic_e_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs_e,(X0cmplxcharfuncs_basic_e_south,X1cmplxcharfuncs_basic_e_south,cmplxcharfuncs_basic_e_south_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn_e,(X0cmplxcharfuncs_basic_e,X1cmplxcharfuncs_basic_e,cmplxcharfuncs_basic_e_length))&&\
CCTK_DECLARE(CCTK_REAL,jcni,(X0cmplxcharfuncs_basic_e_split,X1cmplxcharfuncs_basic_e_split,cmplxcharfuncs_basic_e_split_length))&&\
CCTK_DECLARE(CCTK_REAL,jcni_e,(X0cmplxcharfuncs_basic_e_split,X1cmplxcharfuncs_basic_e_split,cmplxcharfuncs_basic_e_split_length))&&\
CCTK_DECLARE(CCTK_REAL,jcnr,(X0cmplxcharfuncs_basic_e_split,X1cmplxcharfuncs_basic_e_split,cmplxcharfuncs_basic_e_split_length))&&\
CCTK_DECLARE(CCTK_REAL,jcnr_e,(X0cmplxcharfuncs_basic_e_split,X1cmplxcharfuncs_basic_e_split,cmplxcharfuncs_basic_e_split_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs_e,(X0cmplxcharfuncs_basic_e_south,X1cmplxcharfuncs_basic_e_south,cmplxcharfuncs_basic_e_south_length))&&\
CCTK_DECLARE(CCTK_REAL,mu_e,(X0mu_err,X1mu_err,mu_err_length))&&\
CCTK_DECLARE(CCTK_REAL,muh,(X0hmu,X1hmu,hmu_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nJ_l_e,(X0J_l_err,X1J_l_err,J_l_err_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn_e,(X0cmplxcharfuncs_aux_e,X1cmplxcharfuncs_aux_e,cmplxcharfuncs_aux_e_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs_e,(X0cmplxcharfuncs_aux_e_south,X1cmplxcharfuncs_aux_e_south,cmplxcharfuncs_aux_e_south_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,num_J_l,(X0num_J_l,X1num_J_l,num_J_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn_e,(X0cmplxcharfuncs_basic_e,X1cmplxcharfuncs_basic_e,cmplxcharfuncs_basic_e_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs_e,(X0cmplxcharfuncs_basic_e_south,X1cmplxcharfuncs_basic_e_south,cmplxcharfuncs_basic_e_south_length))&&\
CCTK_DECLARE(CCTK_REAL,uBondi_e,(X0uBondi_e,X1uBondi_e,uBondi_e_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn_e,(X0cmplxcharfuncs_basic_e,X1cmplxcharfuncs_basic_e,cmplxcharfuncs_basic_e_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs_e,(X0cmplxcharfuncs_basic_e_south,X1cmplxcharfuncs_basic_e_south,cmplxcharfuncs_basic_e_south_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn_e,(X0realcharfuncs_e,X1realcharfuncs_e,realcharfuncs_e_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs_e,(X0realcharfuncs_e_south,X1realcharfuncs_e_south,realcharfuncs_e_south_length))&&\


#define NULLEXACT_PRIVATE_FARGUMENTS \
J_l_err_length,NewsB_e_length,NewsBi_e_length,NewsBi_length,NewsBr_e_length,NewsBr_length,News_MoL_length,Newsi_e_length,Newsr_e_length,Psi4_e_length,Psi4i_e_length,Psi4r_e_length,X0J_l_err,X0NewsB_e,X0NewsBi,X0NewsBi_e,X0NewsBr,X0NewsBr_e,X0News_MoL,X0Newsi_e,X0Newsr_e,X0Psi4_e,X0Psi4i_e,X0Psi4r_e,X0WTexact_mask,X0Ylm_group,X0ana_J,X0ana_J_l,X0ana_News,X0ana_Psi4,X0ana_Q,X0ana_U,X0ana_mu,X0cmplxcharfuncs_aux_e,X0cmplxcharfuncs_aux_e_south,X0cmplxcharfuncs_basic_e,X0cmplxcharfuncs_basic_e_mask,X0cmplxcharfuncs_basic_e_south,X0cmplxcharfuncs_basic_e_split,X0dotNews_MoL,X0errNews_MoL,X0hJ_l,X0hmu,X0mu_err,X0num_J_l,X0realConstr_e,X0realcharfuncs_e,X0realcharfuncs_e_south,X0uBondi_e,X1J_l_err,X1NewsB_e,X1NewsBi,X1NewsBi_e,X1NewsBr,X1NewsBr_e,X1News_MoL,X1Newsi_e,X1Newsr_e,X1Psi4_e,X1Psi4i_e,X1Psi4r_e,X1WTexact_mask,X1Ylm_group,X1ana_J,X1ana_J_l,X1ana_News,X1ana_Psi4,X1ana_Q,X1ana_U,X1ana_mu,X1cmplxcharfuncs_aux_e,X1cmplxcharfuncs_aux_e_south,X1cmplxcharfuncs_basic_e,X1cmplxcharfuncs_basic_e_mask,X1cmplxcharfuncs_basic_e_south,X1cmplxcharfuncs_basic_e_split,X1dotNews_MoL,X1errNews_MoL,X1hJ_l,X1hmu,X1mu_err,X1num_J_l,X1realConstr_e,X1realcharfuncs_e,X1realcharfuncs_e_south,X1uBondi_e,Ylm_group_length,ana_J_l_length,ana_J_length,ana_News_length,ana_Psi4_length,ana_Q_length,ana_U_length,ana_mu_length,cmplxcharfuncs_aux_e_length,cmplxcharfuncs_aux_e_south_length,cmplxcharfuncs_basic_e_length,cmplxcharfuncs_basic_e_mask_length,cmplxcharfuncs_basic_e_south_length,cmplxcharfuncs_basic_e_split_length,dotNews_MoL_length,errNews_MoL_length,hJ_l_length,hmu_length,mu_err_length,num_J_l_length,realConstr_e_length,realcharfuncs_e_length,realcharfuncs_e_south_length,uBondi_e_length,EGaJ_l_e,EGmu_e,EGnJ_l_e,EQJh_l,EQmuh,Jh_l,Meth2jcn_e,Mjcn_e,Mucn_e,NewsB_e,NewsBi,NewsBi_e,NewsBr,NewsBr_e,News_MoL,News_MoL_p,Newsi_e,Newsr_e,Psi4_e,Psi4i_e,Psi4r_e,R01n_e,R01s_e,WTexact_maskn,WTexact_masks,Ylm_0,Ylm_1,Ylm_2,aJ_l_e,ana_J_l,ana_News,ana_Psi4,ana_jcn,ana_jcs,ana_mu,ana_qcn,ana_qcs,ana_ucn,ana_ucs,bcn_e,bcs_e,cbcn_e,cbcs_e,ckcn_e,ckcs_e,dotNews_MoL,dotNews_MoL_p,errNews_MoL,eth2jcn_e,eth2jcs_e,jcn_e,jcni,jcni_e,jcnr,jcnr_e,jcs_e,mu_e,muh,nJ_l_e,nucn_e,nucs_e,num_J_l,qcn_e,qcs_e,uBondi_e,ucn_e,ucs_e,wcn_e,wcs_e

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLEXACT_PRIVATE_CARGUMENTS \
static int cctki_vi_EGaJ_l_e = -100; \
if (cctki_vi_EGaJ_l_e == -100) cctki_vi_EGaJ_l_e = CCTK_VarIndex("NullExact::EGaJ_l_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, EGaJ_l_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EGaJ_l_e)); \
static int cctki_vi_EGmu_e = -100; \
if (cctki_vi_EGmu_e == -100) cctki_vi_EGmu_e = CCTK_VarIndex("NullExact::EGmu_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, EGmu_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EGmu_e)); \
static int cctki_vi_EGnJ_l_e = -100; \
if (cctki_vi_EGnJ_l_e == -100) cctki_vi_EGnJ_l_e = CCTK_VarIndex("NullExact::EGnJ_l_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, EGnJ_l_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EGnJ_l_e)); \
static int cctki_vi_EQJh_l = -100; \
if (cctki_vi_EQJh_l == -100) cctki_vi_EQJh_l = CCTK_VarIndex("NullExact::EQJh_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, EQJh_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EQJh_l)); \
static int cctki_vi_EQmuh = -100; \
if (cctki_vi_EQmuh == -100) cctki_vi_EQmuh = CCTK_VarIndex("NullExact::EQmuh[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, EQmuh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EQmuh)); \
static int cctki_vi_Jh_l = -100; \
if (cctki_vi_Jh_l == -100) cctki_vi_Jh_l = CCTK_VarIndex("NullExact::Jh_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Jh_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Jh_l)); \
static int cctki_vi_Meth2jcn_e = -100; \
if (cctki_vi_Meth2jcn_e == -100) cctki_vi_Meth2jcn_e = CCTK_VarIndex("NullExact::Meth2jcn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Meth2jcn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Meth2jcn_e)); \
static int cctki_vi_Mjcn_e = -100; \
if (cctki_vi_Mjcn_e == -100) cctki_vi_Mjcn_e = CCTK_VarIndex("NullExact::Mjcn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Mjcn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Mjcn_e)); \
static int cctki_vi_Mucn_e = -100; \
if (cctki_vi_Mucn_e == -100) cctki_vi_Mucn_e = CCTK_VarIndex("NullExact::Mucn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Mucn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Mucn_e)); \
static int cctki_vi_NewsB_e = -100; \
if (cctki_vi_NewsB_e == -100) cctki_vi_NewsB_e = CCTK_VarIndex("NullExact::NewsB_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, NewsB_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsB_e)); \
static int cctki_vi_NewsBi = -100; \
if (cctki_vi_NewsBi == -100) cctki_vi_NewsBi = CCTK_VarIndex("NullExact::NewsBi[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, NewsBi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsBi)); \
static int cctki_vi_NewsBi_e = -100; \
if (cctki_vi_NewsBi_e == -100) cctki_vi_NewsBi_e = CCTK_VarIndex("NullExact::NewsBi_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, NewsBi_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsBi_e)); \
static int cctki_vi_NewsBr = -100; \
if (cctki_vi_NewsBr == -100) cctki_vi_NewsBr = CCTK_VarIndex("NullExact::NewsBr[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, NewsBr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsBr)); \
static int cctki_vi_NewsBr_e = -100; \
if (cctki_vi_NewsBr_e == -100) cctki_vi_NewsBr_e = CCTK_VarIndex("NullExact::NewsBr_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, NewsBr_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsBr_e)); \
static int cctki_vi_News_MoL = -100; \
if (cctki_vi_News_MoL == -100) cctki_vi_News_MoL = CCTK_VarIndex("NullExact::News_MoL[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, News_MoL, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_News_MoL)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, News_MoL_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_News_MoL)); \
static int cctki_vi_Newsi_e = -100; \
if (cctki_vi_Newsi_e == -100) cctki_vi_Newsi_e = CCTK_VarIndex("NullExact::Newsi_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Newsi_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Newsi_e)); \
static int cctki_vi_Newsr_e = -100; \
if (cctki_vi_Newsr_e == -100) cctki_vi_Newsr_e = CCTK_VarIndex("NullExact::Newsr_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Newsr_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Newsr_e)); \
static int cctki_vi_Psi4_e = -100; \
if (cctki_vi_Psi4_e == -100) cctki_vi_Psi4_e = CCTK_VarIndex("NullExact::Psi4_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Psi4_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4_e)); \
static int cctki_vi_Psi4i_e = -100; \
if (cctki_vi_Psi4i_e == -100) cctki_vi_Psi4i_e = CCTK_VarIndex("NullExact::Psi4i_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi4i_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4i_e)); \
static int cctki_vi_Psi4r_e = -100; \
if (cctki_vi_Psi4r_e == -100) cctki_vi_Psi4r_e = CCTK_VarIndex("NullExact::Psi4r_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Psi4r_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4r_e)); \
static int cctki_vi_R01n_e = -100; \
if (cctki_vi_R01n_e == -100) cctki_vi_R01n_e = CCTK_VarIndex("NullExact::R01n_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, R01n_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_R01n_e)); \
static int cctki_vi_R01s_e = -100; \
if (cctki_vi_R01s_e == -100) cctki_vi_R01s_e = CCTK_VarIndex("NullExact::R01s_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, R01s_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_R01s_e)); \
static int cctki_vi_WTexact_maskn = -100; \
if (cctki_vi_WTexact_maskn == -100) cctki_vi_WTexact_maskn = CCTK_VarIndex("NullExact::WTexact_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, WTexact_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WTexact_maskn)); \
static int cctki_vi_WTexact_masks = -100; \
if (cctki_vi_WTexact_masks == -100) cctki_vi_WTexact_masks = CCTK_VarIndex("NullExact::WTexact_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, WTexact_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WTexact_masks)); \
static int cctki_vi_Ylm_0 = -100; \
if (cctki_vi_Ylm_0 == -100) cctki_vi_Ylm_0 = CCTK_VarIndex("NullExact::Ylm_0[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Ylm_0, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ylm_0)); \
static int cctki_vi_Ylm_1 = -100; \
if (cctki_vi_Ylm_1 == -100) cctki_vi_Ylm_1 = CCTK_VarIndex("NullExact::Ylm_1[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Ylm_1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ylm_1)); \
static int cctki_vi_Ylm_2 = -100; \
if (cctki_vi_Ylm_2 == -100) cctki_vi_Ylm_2 = CCTK_VarIndex("NullExact::Ylm_2[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Ylm_2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Ylm_2)); \
static int cctki_vi_aJ_l_e = -100; \
if (cctki_vi_aJ_l_e == -100) cctki_vi_aJ_l_e = CCTK_VarIndex("NullExact::aJ_l_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, aJ_l_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_aJ_l_e)); \
static int cctki_vi_ana_J_l = -100; \
if (cctki_vi_ana_J_l == -100) cctki_vi_ana_J_l = CCTK_VarIndex("NullExact::ana_J_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ana_J_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_J_l)); \
static int cctki_vi_ana_News = -100; \
if (cctki_vi_ana_News == -100) cctki_vi_ana_News = CCTK_VarIndex("NullExact::ana_News[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ana_News, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_News)); \
static int cctki_vi_ana_Psi4 = -100; \
if (cctki_vi_ana_Psi4 == -100) cctki_vi_ana_Psi4 = CCTK_VarIndex("NullExact::ana_Psi4[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ana_Psi4, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_Psi4)); \
static int cctki_vi_ana_jcn = -100; \
if (cctki_vi_ana_jcn == -100) cctki_vi_ana_jcn = CCTK_VarIndex("NullExact::ana_jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ana_jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_jcn)); \
static int cctki_vi_ana_jcs = -100; \
if (cctki_vi_ana_jcs == -100) cctki_vi_ana_jcs = CCTK_VarIndex("NullExact::ana_jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ana_jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_jcs)); \
static int cctki_vi_ana_mu = -100; \
if (cctki_vi_ana_mu == -100) cctki_vi_ana_mu = CCTK_VarIndex("NullExact::ana_mu[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, ana_mu, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_mu)); \
static int cctki_vi_ana_qcn = -100; \
if (cctki_vi_ana_qcn == -100) cctki_vi_ana_qcn = CCTK_VarIndex("NullExact::ana_qcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ana_qcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_qcn)); \
static int cctki_vi_ana_qcs = -100; \
if (cctki_vi_ana_qcs == -100) cctki_vi_ana_qcs = CCTK_VarIndex("NullExact::ana_qcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ana_qcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_qcs)); \
static int cctki_vi_ana_ucn = -100; \
if (cctki_vi_ana_ucn == -100) cctki_vi_ana_ucn = CCTK_VarIndex("NullExact::ana_ucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ana_ucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_ucn)); \
static int cctki_vi_ana_ucs = -100; \
if (cctki_vi_ana_ucs == -100) cctki_vi_ana_ucs = CCTK_VarIndex("NullExact::ana_ucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ana_ucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ana_ucs)); \
static int cctki_vi_bcn_e = -100; \
if (cctki_vi_bcn_e == -100) cctki_vi_bcn_e = CCTK_VarIndex("NullExact::bcn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcn_e)); \
static int cctki_vi_bcs_e = -100; \
if (cctki_vi_bcs_e == -100) cctki_vi_bcs_e = CCTK_VarIndex("NullExact::bcs_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcs_e)); \
static int cctki_vi_cbcn_e = -100; \
if (cctki_vi_cbcn_e == -100) cctki_vi_cbcn_e = CCTK_VarIndex("NullExact::cbcn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcn_e)); \
static int cctki_vi_cbcs_e = -100; \
if (cctki_vi_cbcs_e == -100) cctki_vi_cbcs_e = CCTK_VarIndex("NullExact::cbcs_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcs_e)); \
static int cctki_vi_ckcn_e = -100; \
if (cctki_vi_ckcn_e == -100) cctki_vi_ckcn_e = CCTK_VarIndex("NullExact::ckcn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcn_e)); \
static int cctki_vi_ckcs_e = -100; \
if (cctki_vi_ckcs_e == -100) cctki_vi_ckcs_e = CCTK_VarIndex("NullExact::ckcs_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcs_e)); \
static int cctki_vi_dotNews_MoL = -100; \
if (cctki_vi_dotNews_MoL == -100) cctki_vi_dotNews_MoL = CCTK_VarIndex("NullExact::dotNews_MoL[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dotNews_MoL, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dotNews_MoL)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, dotNews_MoL_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dotNews_MoL)); \
static int cctki_vi_errNews_MoL = -100; \
if (cctki_vi_errNews_MoL == -100) cctki_vi_errNews_MoL = CCTK_VarIndex("NullExact::errNews_MoL[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, errNews_MoL, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_errNews_MoL)); \
static int cctki_vi_eth2jcn_e = -100; \
if (cctki_vi_eth2jcn_e == -100) cctki_vi_eth2jcn_e = CCTK_VarIndex("NullExact::eth2jcn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcn_e)); \
static int cctki_vi_eth2jcs_e = -100; \
if (cctki_vi_eth2jcs_e == -100) cctki_vi_eth2jcs_e = CCTK_VarIndex("NullExact::eth2jcs_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcs_e)); \
static int cctki_vi_jcn_e = -100; \
if (cctki_vi_jcn_e == -100) cctki_vi_jcn_e = CCTK_VarIndex("NullExact::jcn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcn_e)); \
static int cctki_vi_jcni = -100; \
if (cctki_vi_jcni == -100) cctki_vi_jcni = CCTK_VarIndex("NullExact::jcni[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, jcni, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcni)); \
static int cctki_vi_jcni_e = -100; \
if (cctki_vi_jcni_e == -100) cctki_vi_jcni_e = CCTK_VarIndex("NullExact::jcni_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, jcni_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcni_e)); \
static int cctki_vi_jcnr = -100; \
if (cctki_vi_jcnr == -100) cctki_vi_jcnr = CCTK_VarIndex("NullExact::jcnr[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, jcnr, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcnr)); \
static int cctki_vi_jcnr_e = -100; \
if (cctki_vi_jcnr_e == -100) cctki_vi_jcnr_e = CCTK_VarIndex("NullExact::jcnr_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, jcnr_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcnr_e)); \
static int cctki_vi_jcs_e = -100; \
if (cctki_vi_jcs_e == -100) cctki_vi_jcs_e = CCTK_VarIndex("NullExact::jcs_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcs_e)); \
static int cctki_vi_mu_e = -100; \
if (cctki_vi_mu_e == -100) cctki_vi_mu_e = CCTK_VarIndex("NullExact::mu_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, mu_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_mu_e)); \
static int cctki_vi_muh = -100; \
if (cctki_vi_muh == -100) cctki_vi_muh = CCTK_VarIndex("NullExact::muh[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, muh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_muh)); \
static int cctki_vi_nJ_l_e = -100; \
if (cctki_vi_nJ_l_e == -100) cctki_vi_nJ_l_e = CCTK_VarIndex("NullExact::nJ_l_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nJ_l_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nJ_l_e)); \
static int cctki_vi_nucn_e = -100; \
if (cctki_vi_nucn_e == -100) cctki_vi_nucn_e = CCTK_VarIndex("NullExact::nucn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucn_e)); \
static int cctki_vi_nucs_e = -100; \
if (cctki_vi_nucs_e == -100) cctki_vi_nucs_e = CCTK_VarIndex("NullExact::nucs_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucs_e)); \
static int cctki_vi_num_J_l = -100; \
if (cctki_vi_num_J_l == -100) cctki_vi_num_J_l = CCTK_VarIndex("NullExact::num_J_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, num_J_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_num_J_l)); \
static int cctki_vi_qcn_e = -100; \
if (cctki_vi_qcn_e == -100) cctki_vi_qcn_e = CCTK_VarIndex("NullExact::qcn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcn_e)); \
static int cctki_vi_qcs_e = -100; \
if (cctki_vi_qcs_e == -100) cctki_vi_qcs_e = CCTK_VarIndex("NullExact::qcs_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcs_e)); \
static int cctki_vi_uBondi_e = -100; \
if (cctki_vi_uBondi_e == -100) cctki_vi_uBondi_e = CCTK_VarIndex("NullExact::uBondi_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, uBondi_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_uBondi_e)); \
static int cctki_vi_ucn_e = -100; \
if (cctki_vi_ucn_e == -100) cctki_vi_ucn_e = CCTK_VarIndex("NullExact::ucn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucn_e)); \
static int cctki_vi_ucs_e = -100; \
if (cctki_vi_ucs_e == -100) cctki_vi_ucs_e = CCTK_VarIndex("NullExact::ucs_e[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs_e, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucs_e)); \
static int cctki_vi_wcn_e = -100; \
if (cctki_vi_wcn_e == -100) cctki_vi_wcn_e = CCTK_VarIndex("NullExact::wcn_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcn_e)); \
static int cctki_vi_wcs_e = -100; \
if (cctki_vi_wcs_e == -100) cctki_vi_wcs_e = CCTK_VarIndex("NullExact::wcs_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcs_e));

#define DECLARE_NULLEXACT_PRIVATE_C2F \
static int CCTKARGNUM_EGaJ_l_e = -1; \
static int CCTKGROUPNUM_J_l_err = -1; \
static int CCTKARGNUM_EGmu_e = -1; \
static int CCTKGROUPNUM_mu_err = -1; \
static int CCTKARGNUM_EGnJ_l_e = -1; \
static int CCTKARGNUM_EQJh_l = -1; \
static int CCTKGROUPNUM_hJ_l = -1; \
static int CCTKARGNUM_EQmuh = -1; \
static int CCTKGROUPNUM_hmu = -1; \
static int CCTKARGNUM_Jh_l = -1; \
static int CCTKARGNUM_Meth2jcn_e = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_basic_e_mask = -1; \
static int CCTKARGNUM_Mjcn_e = -1; \
static int CCTKARGNUM_Mucn_e = -1; \
static int CCTKARGNUM_NewsB_e = -1; \
static int CCTKGROUPNUM_NewsB_e = -1; \
static int CCTKARGNUM_NewsBi = -1; \
static int CCTKGROUPNUM_NewsBi = -1; \
static int CCTKARGNUM_NewsBi_e = -1; \
static int CCTKGROUPNUM_NewsBi_e = -1; \
static int CCTKARGNUM_NewsBr = -1; \
static int CCTKGROUPNUM_NewsBr = -1; \
static int CCTKARGNUM_NewsBr_e = -1; \
static int CCTKGROUPNUM_NewsBr_e = -1; \
static int CCTKARGNUM_News_MoL = -1; \
static int CCTKGROUPNUM_News_MoL = -1; \
static int CCTKARGNUM_Newsi_e = -1; \
static int CCTKGROUPNUM_Newsi_e = -1; \
static int CCTKARGNUM_Newsr_e = -1; \
static int CCTKGROUPNUM_Newsr_e = -1; \
static int CCTKARGNUM_Psi4_e = -1; \
static int CCTKGROUPNUM_Psi4_e = -1; \
static int CCTKARGNUM_Psi4i_e = -1; \
static int CCTKGROUPNUM_Psi4i_e = -1; \
static int CCTKARGNUM_Psi4r_e = -1; \
static int CCTKGROUPNUM_Psi4r_e = -1; \
static int CCTKARGNUM_R01n_e = -1; \
static int CCTKGROUPNUM_realConstr_e = -1; \
static int CCTKARGNUM_R01s_e = -1; \
static int CCTKARGNUM_WTexact_maskn = -1; \
static int CCTKGROUPNUM_WTexact_mask = -1; \
static int CCTKARGNUM_WTexact_masks = -1; \
static int CCTKARGNUM_Ylm_0 = -1; \
static int CCTKGROUPNUM_Ylm_group = -1; \
static int CCTKARGNUM_Ylm_1 = -1; \
static int CCTKARGNUM_Ylm_2 = -1; \
static int CCTKARGNUM_aJ_l_e = -1; \
static int CCTKARGNUM_ana_J_l = -1; \
static int CCTKGROUPNUM_ana_J_l = -1; \
static int CCTKARGNUM_ana_News = -1; \
static int CCTKGROUPNUM_ana_News = -1; \
static int CCTKARGNUM_ana_Psi4 = -1; \
static int CCTKGROUPNUM_ana_Psi4 = -1; \
static int CCTKARGNUM_ana_jcn = -1; \
static int CCTKGROUPNUM_ana_J = -1; \
static int CCTKARGNUM_ana_jcs = -1; \
static int CCTKARGNUM_ana_mu = -1; \
static int CCTKGROUPNUM_ana_mu = -1; \
static int CCTKARGNUM_ana_qcn = -1; \
static int CCTKGROUPNUM_ana_Q = -1; \
static int CCTKARGNUM_ana_qcs = -1; \
static int CCTKARGNUM_ana_ucn = -1; \
static int CCTKGROUPNUM_ana_U = -1; \
static int CCTKARGNUM_ana_ucs = -1; \
static int CCTKARGNUM_bcn_e = -1; \
static int CCTKGROUPNUM_realcharfuncs_e = -1; \
static int CCTKARGNUM_bcs_e = -1; \
static int CCTKGROUPNUM_realcharfuncs_e_south = -1; \
static int CCTKARGNUM_cbcn_e = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_aux_e = -1; \
static int CCTKARGNUM_cbcs_e = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_aux_e_south = -1; \
static int CCTKARGNUM_ckcn_e = -1; \
static int CCTKARGNUM_ckcs_e = -1; \
static int CCTKARGNUM_dotNews_MoL = -1; \
static int CCTKGROUPNUM_dotNews_MoL = -1; \
static int CCTKARGNUM_errNews_MoL = -1; \
static int CCTKGROUPNUM_errNews_MoL = -1; \
static int CCTKARGNUM_eth2jcn_e = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_basic_e = -1; \
static int CCTKARGNUM_eth2jcs_e = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_basic_e_south = -1; \
static int CCTKARGNUM_jcn_e = -1; \
static int CCTKARGNUM_jcni = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_basic_e_split = -1; \
static int CCTKARGNUM_jcni_e = -1; \
static int CCTKARGNUM_jcnr = -1; \
static int CCTKARGNUM_jcnr_e = -1; \
static int CCTKARGNUM_jcs_e = -1; \
static int CCTKARGNUM_mu_e = -1; \
static int CCTKARGNUM_muh = -1; \
static int CCTKARGNUM_nJ_l_e = -1; \
static int CCTKARGNUM_nucn_e = -1; \
static int CCTKARGNUM_nucs_e = -1; \
static int CCTKARGNUM_num_J_l = -1; \
static int CCTKGROUPNUM_num_J_l = -1; \
static int CCTKARGNUM_qcn_e = -1; \
static int CCTKARGNUM_qcs_e = -1; \
static int CCTKARGNUM_uBondi_e = -1; \
static int CCTKGROUPNUM_uBondi_e = -1; \
static int CCTKARGNUM_ucn_e = -1; \
static int CCTKARGNUM_ucs_e = -1; \
static int CCTKARGNUM_wcn_e = -1; \
static int CCTKARGNUM_wcs_e = -1;

#define INITIALISE_NULLEXACT_PRIVATE_C2F \
if(CCTKARGNUM_EGaJ_l_e == -1) CCTKARGNUM_EGaJ_l_e = CCTK_VarIndex("NullExact::EGaJ_l_e[0]"); \
if(CCTKGROUPNUM_J_l_err == -1) CCTKGROUPNUM_J_l_err = CCTK_GroupIndex("NullExact::J_l_err"); \
if(CCTKARGNUM_EGmu_e == -1) CCTKARGNUM_EGmu_e = CCTK_VarIndex("NullExact::EGmu_e[0]"); \
if(CCTKGROUPNUM_mu_err == -1) CCTKGROUPNUM_mu_err = CCTK_GroupIndex("NullExact::mu_err"); \
if(CCTKARGNUM_EGnJ_l_e == -1) CCTKARGNUM_EGnJ_l_e = CCTK_VarIndex("NullExact::EGnJ_l_e[0]"); \
if(CCTKARGNUM_EQJh_l == -1) CCTKARGNUM_EQJh_l = CCTK_VarIndex("NullExact::EQJh_l[0]"); \
if(CCTKGROUPNUM_hJ_l == -1) CCTKGROUPNUM_hJ_l = CCTK_GroupIndex("NullExact::hJ_l"); \
if(CCTKARGNUM_EQmuh == -1) CCTKARGNUM_EQmuh = CCTK_VarIndex("NullExact::EQmuh[0]"); \
if(CCTKGROUPNUM_hmu == -1) CCTKGROUPNUM_hmu = CCTK_GroupIndex("NullExact::hmu"); \
if(CCTKARGNUM_Jh_l == -1) CCTKARGNUM_Jh_l = CCTK_VarIndex("NullExact::Jh_l[0]"); \
if(CCTKARGNUM_Meth2jcn_e == -1) CCTKARGNUM_Meth2jcn_e = CCTK_VarIndex("NullExact::Meth2jcn_e[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_basic_e_mask == -1) CCTKGROUPNUM_cmplxcharfuncs_basic_e_mask = CCTK_GroupIndex("NullExact::cmplxcharfuncs_basic_e_mask"); \
if(CCTKARGNUM_Mjcn_e == -1) CCTKARGNUM_Mjcn_e = CCTK_VarIndex("NullExact::Mjcn_e[0]"); \
if(CCTKARGNUM_Mucn_e == -1) CCTKARGNUM_Mucn_e = CCTK_VarIndex("NullExact::Mucn_e[0]"); \
if(CCTKARGNUM_NewsB_e == -1) CCTKARGNUM_NewsB_e = CCTK_VarIndex("NullExact::NewsB_e[0]"); \
if(CCTKGROUPNUM_NewsB_e == -1) CCTKGROUPNUM_NewsB_e = CCTK_GroupIndex("NullExact::NewsB_e"); \
if(CCTKARGNUM_NewsBi == -1) CCTKARGNUM_NewsBi = CCTK_VarIndex("NullExact::NewsBi[0]"); \
if(CCTKGROUPNUM_NewsBi == -1) CCTKGROUPNUM_NewsBi = CCTK_GroupIndex("NullExact::NewsBi"); \
if(CCTKARGNUM_NewsBi_e == -1) CCTKARGNUM_NewsBi_e = CCTK_VarIndex("NullExact::NewsBi_e[0]"); \
if(CCTKGROUPNUM_NewsBi_e == -1) CCTKGROUPNUM_NewsBi_e = CCTK_GroupIndex("NullExact::NewsBi_e"); \
if(CCTKARGNUM_NewsBr == -1) CCTKARGNUM_NewsBr = CCTK_VarIndex("NullExact::NewsBr[0]"); \
if(CCTKGROUPNUM_NewsBr == -1) CCTKGROUPNUM_NewsBr = CCTK_GroupIndex("NullExact::NewsBr"); \
if(CCTKARGNUM_NewsBr_e == -1) CCTKARGNUM_NewsBr_e = CCTK_VarIndex("NullExact::NewsBr_e[0]"); \
if(CCTKGROUPNUM_NewsBr_e == -1) CCTKGROUPNUM_NewsBr_e = CCTK_GroupIndex("NullExact::NewsBr_e"); \
if(CCTKARGNUM_News_MoL == -1) CCTKARGNUM_News_MoL = CCTK_VarIndex("NullExact::News_MoL[0]"); \
if(CCTKGROUPNUM_News_MoL == -1) CCTKGROUPNUM_News_MoL = CCTK_GroupIndex("NullExact::News_MoL"); \
if(CCTKARGNUM_Newsi_e == -1) CCTKARGNUM_Newsi_e = CCTK_VarIndex("NullExact::Newsi_e[0]"); \
if(CCTKGROUPNUM_Newsi_e == -1) CCTKGROUPNUM_Newsi_e = CCTK_GroupIndex("NullExact::Newsi_e"); \
if(CCTKARGNUM_Newsr_e == -1) CCTKARGNUM_Newsr_e = CCTK_VarIndex("NullExact::Newsr_e[0]"); \
if(CCTKGROUPNUM_Newsr_e == -1) CCTKGROUPNUM_Newsr_e = CCTK_GroupIndex("NullExact::Newsr_e"); \
if(CCTKARGNUM_Psi4_e == -1) CCTKARGNUM_Psi4_e = CCTK_VarIndex("NullExact::Psi4_e[0]"); \
if(CCTKGROUPNUM_Psi4_e == -1) CCTKGROUPNUM_Psi4_e = CCTK_GroupIndex("NullExact::Psi4_e"); \
if(CCTKARGNUM_Psi4i_e == -1) CCTKARGNUM_Psi4i_e = CCTK_VarIndex("NullExact::Psi4i_e[0]"); \
if(CCTKGROUPNUM_Psi4i_e == -1) CCTKGROUPNUM_Psi4i_e = CCTK_GroupIndex("NullExact::Psi4i_e"); \
if(CCTKARGNUM_Psi4r_e == -1) CCTKARGNUM_Psi4r_e = CCTK_VarIndex("NullExact::Psi4r_e[0]"); \
if(CCTKGROUPNUM_Psi4r_e == -1) CCTKGROUPNUM_Psi4r_e = CCTK_GroupIndex("NullExact::Psi4r_e"); \
if(CCTKARGNUM_R01n_e == -1) CCTKARGNUM_R01n_e = CCTK_VarIndex("NullExact::R01n_e[0]"); \
if(CCTKGROUPNUM_realConstr_e == -1) CCTKGROUPNUM_realConstr_e = CCTK_GroupIndex("NullExact::realConstr_e"); \
if(CCTKARGNUM_R01s_e == -1) CCTKARGNUM_R01s_e = CCTK_VarIndex("NullExact::R01s_e[0]"); \
if(CCTKARGNUM_WTexact_maskn == -1) CCTKARGNUM_WTexact_maskn = CCTK_VarIndex("NullExact::WTexact_maskn"); \
if(CCTKGROUPNUM_WTexact_mask == -1) CCTKGROUPNUM_WTexact_mask = CCTK_GroupIndex("NullExact::WTexact_mask"); \
if(CCTKARGNUM_WTexact_masks == -1) CCTKARGNUM_WTexact_masks = CCTK_VarIndex("NullExact::WTexact_masks"); \
if(CCTKARGNUM_Ylm_0 == -1) CCTKARGNUM_Ylm_0 = CCTK_VarIndex("NullExact::Ylm_0[0]"); \
if(CCTKGROUPNUM_Ylm_group == -1) CCTKGROUPNUM_Ylm_group = CCTK_GroupIndex("NullExact::Ylm_group"); \
if(CCTKARGNUM_Ylm_1 == -1) CCTKARGNUM_Ylm_1 = CCTK_VarIndex("NullExact::Ylm_1[0]"); \
if(CCTKARGNUM_Ylm_2 == -1) CCTKARGNUM_Ylm_2 = CCTK_VarIndex("NullExact::Ylm_2[0]"); \
if(CCTKARGNUM_aJ_l_e == -1) CCTKARGNUM_aJ_l_e = CCTK_VarIndex("NullExact::aJ_l_e[0]"); \
if(CCTKARGNUM_ana_J_l == -1) CCTKARGNUM_ana_J_l = CCTK_VarIndex("NullExact::ana_J_l[0]"); \
if(CCTKGROUPNUM_ana_J_l == -1) CCTKGROUPNUM_ana_J_l = CCTK_GroupIndex("NullExact::ana_J_l"); \
if(CCTKARGNUM_ana_News == -1) CCTKARGNUM_ana_News = CCTK_VarIndex("NullExact::ana_News[0]"); \
if(CCTKGROUPNUM_ana_News == -1) CCTKGROUPNUM_ana_News = CCTK_GroupIndex("NullExact::ana_News"); \
if(CCTKARGNUM_ana_Psi4 == -1) CCTKARGNUM_ana_Psi4 = CCTK_VarIndex("NullExact::ana_Psi4[0]"); \
if(CCTKGROUPNUM_ana_Psi4 == -1) CCTKGROUPNUM_ana_Psi4 = CCTK_GroupIndex("NullExact::ana_Psi4"); \
if(CCTKARGNUM_ana_jcn == -1) CCTKARGNUM_ana_jcn = CCTK_VarIndex("NullExact::ana_jcn[0]"); \
if(CCTKGROUPNUM_ana_J == -1) CCTKGROUPNUM_ana_J = CCTK_GroupIndex("NullExact::ana_J"); \
if(CCTKARGNUM_ana_jcs == -1) CCTKARGNUM_ana_jcs = CCTK_VarIndex("NullExact::ana_jcs[0]"); \
if(CCTKARGNUM_ana_mu == -1) CCTKARGNUM_ana_mu = CCTK_VarIndex("NullExact::ana_mu[0]"); \
if(CCTKGROUPNUM_ana_mu == -1) CCTKGROUPNUM_ana_mu = CCTK_GroupIndex("NullExact::ana_mu"); \
if(CCTKARGNUM_ana_qcn == -1) CCTKARGNUM_ana_qcn = CCTK_VarIndex("NullExact::ana_qcn[0]"); \
if(CCTKGROUPNUM_ana_Q == -1) CCTKGROUPNUM_ana_Q = CCTK_GroupIndex("NullExact::ana_Q"); \
if(CCTKARGNUM_ana_qcs == -1) CCTKARGNUM_ana_qcs = CCTK_VarIndex("NullExact::ana_qcs[0]"); \
if(CCTKARGNUM_ana_ucn == -1) CCTKARGNUM_ana_ucn = CCTK_VarIndex("NullExact::ana_ucn[0]"); \
if(CCTKGROUPNUM_ana_U == -1) CCTKGROUPNUM_ana_U = CCTK_GroupIndex("NullExact::ana_U"); \
if(CCTKARGNUM_ana_ucs == -1) CCTKARGNUM_ana_ucs = CCTK_VarIndex("NullExact::ana_ucs[0]"); \
if(CCTKARGNUM_bcn_e == -1) CCTKARGNUM_bcn_e = CCTK_VarIndex("NullExact::bcn_e[0]"); \
if(CCTKGROUPNUM_realcharfuncs_e == -1) CCTKGROUPNUM_realcharfuncs_e = CCTK_GroupIndex("NullExact::realcharfuncs_e"); \
if(CCTKARGNUM_bcs_e == -1) CCTKARGNUM_bcs_e = CCTK_VarIndex("NullExact::bcs_e[0]"); \
if(CCTKGROUPNUM_realcharfuncs_e_south == -1) CCTKGROUPNUM_realcharfuncs_e_south = CCTK_GroupIndex("NullExact::realcharfuncs_e_south"); \
if(CCTKARGNUM_cbcn_e == -1) CCTKARGNUM_cbcn_e = CCTK_VarIndex("NullExact::cbcn_e[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_aux_e == -1) CCTKGROUPNUM_cmplxcharfuncs_aux_e = CCTK_GroupIndex("NullExact::cmplxcharfuncs_aux_e"); \
if(CCTKARGNUM_cbcs_e == -1) CCTKARGNUM_cbcs_e = CCTK_VarIndex("NullExact::cbcs_e[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_aux_e_south == -1) CCTKGROUPNUM_cmplxcharfuncs_aux_e_south = CCTK_GroupIndex("NullExact::cmplxcharfuncs_aux_e_south"); \
if(CCTKARGNUM_ckcn_e == -1) CCTKARGNUM_ckcn_e = CCTK_VarIndex("NullExact::ckcn_e[0]"); \
if(CCTKARGNUM_ckcs_e == -1) CCTKARGNUM_ckcs_e = CCTK_VarIndex("NullExact::ckcs_e[0]"); \
if(CCTKARGNUM_dotNews_MoL == -1) CCTKARGNUM_dotNews_MoL = CCTK_VarIndex("NullExact::dotNews_MoL[0]"); \
if(CCTKGROUPNUM_dotNews_MoL == -1) CCTKGROUPNUM_dotNews_MoL = CCTK_GroupIndex("NullExact::dotNews_MoL"); \
if(CCTKARGNUM_errNews_MoL == -1) CCTKARGNUM_errNews_MoL = CCTK_VarIndex("NullExact::errNews_MoL[0]"); \
if(CCTKGROUPNUM_errNews_MoL == -1) CCTKGROUPNUM_errNews_MoL = CCTK_GroupIndex("NullExact::errNews_MoL"); \
if(CCTKARGNUM_eth2jcn_e == -1) CCTKARGNUM_eth2jcn_e = CCTK_VarIndex("NullExact::eth2jcn_e[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_basic_e == -1) CCTKGROUPNUM_cmplxcharfuncs_basic_e = CCTK_GroupIndex("NullExact::cmplxcharfuncs_basic_e"); \
if(CCTKARGNUM_eth2jcs_e == -1) CCTKARGNUM_eth2jcs_e = CCTK_VarIndex("NullExact::eth2jcs_e[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_basic_e_south == -1) CCTKGROUPNUM_cmplxcharfuncs_basic_e_south = CCTK_GroupIndex("NullExact::cmplxcharfuncs_basic_e_south"); \
if(CCTKARGNUM_jcn_e == -1) CCTKARGNUM_jcn_e = CCTK_VarIndex("NullExact::jcn_e[0]"); \
if(CCTKARGNUM_jcni == -1) CCTKARGNUM_jcni = CCTK_VarIndex("NullExact::jcni[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_basic_e_split == -1) CCTKGROUPNUM_cmplxcharfuncs_basic_e_split = CCTK_GroupIndex("NullExact::cmplxcharfuncs_basic_e_split"); \
if(CCTKARGNUM_jcni_e == -1) CCTKARGNUM_jcni_e = CCTK_VarIndex("NullExact::jcni_e[0]"); \
if(CCTKARGNUM_jcnr == -1) CCTKARGNUM_jcnr = CCTK_VarIndex("NullExact::jcnr[0]"); \
if(CCTKARGNUM_jcnr_e == -1) CCTKARGNUM_jcnr_e = CCTK_VarIndex("NullExact::jcnr_e[0]"); \
if(CCTKARGNUM_jcs_e == -1) CCTKARGNUM_jcs_e = CCTK_VarIndex("NullExact::jcs_e[0]"); \
if(CCTKARGNUM_mu_e == -1) CCTKARGNUM_mu_e = CCTK_VarIndex("NullExact::mu_e[0]"); \
if(CCTKARGNUM_muh == -1) CCTKARGNUM_muh = CCTK_VarIndex("NullExact::muh[0]"); \
if(CCTKARGNUM_nJ_l_e == -1) CCTKARGNUM_nJ_l_e = CCTK_VarIndex("NullExact::nJ_l_e[0]"); \
if(CCTKARGNUM_nucn_e == -1) CCTKARGNUM_nucn_e = CCTK_VarIndex("NullExact::nucn_e[0]"); \
if(CCTKARGNUM_nucs_e == -1) CCTKARGNUM_nucs_e = CCTK_VarIndex("NullExact::nucs_e[0]"); \
if(CCTKARGNUM_num_J_l == -1) CCTKARGNUM_num_J_l = CCTK_VarIndex("NullExact::num_J_l[0]"); \
if(CCTKGROUPNUM_num_J_l == -1) CCTKGROUPNUM_num_J_l = CCTK_GroupIndex("NullExact::num_J_l"); \
if(CCTKARGNUM_qcn_e == -1) CCTKARGNUM_qcn_e = CCTK_VarIndex("NullExact::qcn_e[0]"); \
if(CCTKARGNUM_qcs_e == -1) CCTKARGNUM_qcs_e = CCTK_VarIndex("NullExact::qcs_e[0]"); \
if(CCTKARGNUM_uBondi_e == -1) CCTKARGNUM_uBondi_e = CCTK_VarIndex("NullExact::uBondi_e[0]"); \
if(CCTKGROUPNUM_uBondi_e == -1) CCTKGROUPNUM_uBondi_e = CCTK_GroupIndex("NullExact::uBondi_e"); \
if(CCTKARGNUM_ucn_e == -1) CCTKARGNUM_ucn_e = CCTK_VarIndex("NullExact::ucn_e[0]"); \
if(CCTKARGNUM_ucs_e == -1) CCTKARGNUM_ucs_e = CCTK_VarIndex("NullExact::ucs_e[0]"); \
if(CCTKARGNUM_wcn_e == -1) CCTKARGNUM_wcn_e = CCTK_VarIndex("NullExact::wcn_e[0]"); \
if(CCTKARGNUM_wcs_e == -1) CCTKARGNUM_wcs_e = CCTK_VarIndex("NullExact::wcs_e[0]");

#define NULLEXACT_PRIVATE_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *

#define PASS_NULLEXACT_PRIVATE_C2F(GH) \
PASS_GROUPLEN(NullExact, J_l_err),\
PASS_GROUPLEN(NullExact, NewsB_e),\
PASS_GROUPLEN(NullExact, NewsBi_e),\
PASS_GROUPLEN(NullExact, NewsBi),\
PASS_GROUPLEN(NullExact, NewsBr_e),\
PASS_GROUPLEN(NullExact, NewsBr),\
PASS_GROUPLEN(NullExact, News_MoL),\
PASS_GROUPLEN(NullExact, Newsi_e),\
PASS_GROUPLEN(NullExact, Newsr_e),\
PASS_GROUPLEN(NullExact, Psi4_e),\
PASS_GROUPLEN(NullExact, Psi4i_e),\
PASS_GROUPLEN(NullExact, Psi4r_e),\
PASS_GROUPSIZE(J_l_err, 0),\
PASS_GROUPSIZE(NewsB_e, 0),\
PASS_GROUPSIZE(NewsBi, 0),\
PASS_GROUPSIZE(NewsBi_e, 0),\
PASS_GROUPSIZE(NewsBr, 0),\
PASS_GROUPSIZE(NewsBr_e, 0),\
PASS_GROUPSIZE(News_MoL, 0),\
PASS_GROUPSIZE(Newsi_e, 0),\
PASS_GROUPSIZE(Newsr_e, 0),\
PASS_GROUPSIZE(Psi4_e, 0),\
PASS_GROUPSIZE(Psi4i_e, 0),\
PASS_GROUPSIZE(Psi4r_e, 0),\
PASS_GROUPSIZE(WTexact_mask, 0),\
PASS_GROUPSIZE(Ylm_group, 0),\
PASS_GROUPSIZE(ana_J, 0),\
PASS_GROUPSIZE(ana_J_l, 0),\
PASS_GROUPSIZE(ana_News, 0),\
PASS_GROUPSIZE(ana_Psi4, 0),\
PASS_GROUPSIZE(ana_Q, 0),\
PASS_GROUPSIZE(ana_U, 0),\
PASS_GROUPSIZE(ana_mu, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_aux_e, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_aux_e_south, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_basic_e, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_basic_e_mask, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_basic_e_south, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_basic_e_split, 0),\
PASS_GROUPSIZE(dotNews_MoL, 0),\
PASS_GROUPSIZE(errNews_MoL, 0),\
PASS_GROUPSIZE(hJ_l, 0),\
PASS_GROUPSIZE(hmu, 0),\
PASS_GROUPSIZE(mu_err, 0),\
PASS_GROUPSIZE(num_J_l, 0),\
PASS_GROUPSIZE(realConstr_e, 0),\
PASS_GROUPSIZE(realcharfuncs_e, 0),\
PASS_GROUPSIZE(realcharfuncs_e_south, 0),\
PASS_GROUPSIZE(uBondi_e, 0),\
PASS_GROUPSIZE(J_l_err, 1),\
PASS_GROUPSIZE(NewsB_e, 1),\
PASS_GROUPSIZE(NewsBi, 1),\
PASS_GROUPSIZE(NewsBi_e, 1),\
PASS_GROUPSIZE(NewsBr, 1),\
PASS_GROUPSIZE(NewsBr_e, 1),\
PASS_GROUPSIZE(News_MoL, 1),\
PASS_GROUPSIZE(Newsi_e, 1),\
PASS_GROUPSIZE(Newsr_e, 1),\
PASS_GROUPSIZE(Psi4_e, 1),\
PASS_GROUPSIZE(Psi4i_e, 1),\
PASS_GROUPSIZE(Psi4r_e, 1),\
PASS_GROUPSIZE(WTexact_mask, 1),\
PASS_GROUPSIZE(Ylm_group, 1),\
PASS_GROUPSIZE(ana_J, 1),\
PASS_GROUPSIZE(ana_J_l, 1),\
PASS_GROUPSIZE(ana_News, 1),\
PASS_GROUPSIZE(ana_Psi4, 1),\
PASS_GROUPSIZE(ana_Q, 1),\
PASS_GROUPSIZE(ana_U, 1),\
PASS_GROUPSIZE(ana_mu, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_aux_e, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_aux_e_south, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_basic_e, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_basic_e_mask, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_basic_e_south, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_basic_e_split, 1),\
PASS_GROUPSIZE(dotNews_MoL, 1),\
PASS_GROUPSIZE(errNews_MoL, 1),\
PASS_GROUPSIZE(hJ_l, 1),\
PASS_GROUPSIZE(hmu, 1),\
PASS_GROUPSIZE(mu_err, 1),\
PASS_GROUPSIZE(num_J_l, 1),\
PASS_GROUPSIZE(realConstr_e, 1),\
PASS_GROUPSIZE(realcharfuncs_e, 1),\
PASS_GROUPSIZE(realcharfuncs_e_south, 1),\
PASS_GROUPSIZE(uBondi_e, 1),\
PASS_GROUPLEN(NullExact, Ylm_group),\
PASS_GROUPLEN(NullExact, ana_J_l),\
PASS_GROUPLEN(NullExact, ana_J),\
PASS_GROUPLEN(NullExact, ana_News),\
PASS_GROUPLEN(NullExact, ana_Psi4),\
PASS_GROUPLEN(NullExact, ana_Q),\
PASS_GROUPLEN(NullExact, ana_U),\
PASS_GROUPLEN(NullExact, ana_mu),\
PASS_GROUPLEN(NullExact, cmplxcharfuncs_aux_e),\
PASS_GROUPLEN(NullExact, cmplxcharfuncs_aux_e_south),\
PASS_GROUPLEN(NullExact, cmplxcharfuncs_basic_e),\
PASS_GROUPLEN(NullExact, cmplxcharfuncs_basic_e_mask),\
PASS_GROUPLEN(NullExact, cmplxcharfuncs_basic_e_south),\
PASS_GROUPLEN(NullExact, cmplxcharfuncs_basic_e_split),\
PASS_GROUPLEN(NullExact, dotNews_MoL),\
PASS_GROUPLEN(NullExact, errNews_MoL),\
PASS_GROUPLEN(NullExact, hJ_l),\
PASS_GROUPLEN(NullExact, hmu),\
PASS_GROUPLEN(NullExact, mu_err),\
PASS_GROUPLEN(NullExact, num_J_l),\
PASS_GROUPLEN(NullExact, realConstr_e),\
PASS_GROUPLEN(NullExact, realcharfuncs_e),\
PASS_GROUPLEN(NullExact, realcharfuncs_e_south),\
PASS_GROUPLEN(NullExact, uBondi_e),\
(CCTK_COMPLEX *)(PASS_REFERENCE(EGaJ_l_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(EGmu_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(EGnJ_l_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(EQJh_l, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(EQmuh, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Jh_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Meth2jcn_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Mjcn_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Mucn_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(NewsB_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(NewsBi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(NewsBi_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(NewsBr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(NewsBr_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(News_MoL, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(News_MoL, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(Newsi_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Newsr_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Psi4_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi4i_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Psi4r_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(R01n_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(R01s_e, 0)),\
(CCTK_INT *)(PASS_REFERENCE(WTexact_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(WTexact_masks, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Ylm_0, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Ylm_1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Ylm_2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(aJ_l_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ana_J_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ana_News, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ana_Psi4, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ana_jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ana_jcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(ana_mu, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ana_qcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ana_qcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ana_ucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ana_ucs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dotNews_MoL, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(dotNews_MoL, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(errNews_MoL, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(jcni, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(jcni_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(jcnr, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(jcnr_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(mu_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(muh, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nJ_l_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(num_J_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(uBondi_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn_e, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs_e, 0))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLEXACT_PROTECTED_FARGUMENTS \
INTEGER SHRE_alpha_e_length&&\
INTEGER SHRE_beta_e_length&&\
INTEGER SHRE_dalpha_e_length&&\
INTEGER SHRE_dbeta_e_length&&\
INTEGER SHRE_dgij_e_length&&\
INTEGER SHRE_dgit_e_length&&\
INTEGER SHRE_gij_e_length&&\
INTEGER SHRE_git_e_length&&\
INTEGER WT_r0_length&&\
INTEGER X0SHRE_alpha_e&&\
INTEGER X0SHRE_beta_e&&\
INTEGER X0SHRE_dalpha_e&&\
INTEGER X0SHRE_dbeta_e&&\
INTEGER X0SHRE_dgij_e&&\
INTEGER X0SHRE_dgit_e&&\
INTEGER X0SHRE_gij_e&&\
INTEGER X0SHRE_git_e&&\
INTEGER X0WT_r0&&\
INTEGER X0beta_l&&\
INTEGER X0beta_wt&&\
INTEGER X0j_l&&\
INTEGER X0j_wt&&\
INTEGER X0q_wt&&\
INTEGER X0u_l&&\
INTEGER X0u_wt&&\
INTEGER X0u_x_wt&&\
INTEGER X0w_l&&\
INTEGER X0w_wt&&\
INTEGER X0x_wt&&\
INTEGER X1SHRE_alpha_e&&\
INTEGER X1SHRE_beta_e&&\
INTEGER X1SHRE_dalpha_e&&\
INTEGER X1SHRE_dbeta_e&&\
INTEGER X1SHRE_dgij_e&&\
INTEGER X1SHRE_dgit_e&&\
INTEGER X1SHRE_gij_e&&\
INTEGER X1SHRE_git_e&&\
INTEGER X1WT_r0&&\
INTEGER X1beta_l&&\
INTEGER X1beta_wt&&\
INTEGER X1j_l&&\
INTEGER X1j_wt&&\
INTEGER X1q_wt&&\
INTEGER X1u_l&&\
INTEGER X1u_wt&&\
INTEGER X1u_x_wt&&\
INTEGER X1w_l&&\
INTEGER X1w_wt&&\
INTEGER X1x_wt&&\
INTEGER beta_l_length&&\
INTEGER beta_wt_length&&\
INTEGER j_l_length&&\
INTEGER j_wt_length&&\
INTEGER q_wt_length&&\
INTEGER u_l_length&&\
INTEGER u_wt_length&&\
INTEGER u_x_wt_length&&\
INTEGER w_l_length&&\
INTEGER w_wt_length&&\
INTEGER x_wt_length&&\
CCTK_DECLARE(CCTK_REAL,SHRE_alpha_e,(X0SHRE_alpha_e,X1SHRE_alpha_e,SHRE_alpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_beta_e,(X0SHRE_beta_e,X1SHRE_beta_e,SHRE_beta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpalpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dpgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqalpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dqgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dralpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_drgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtalpha_e,(X0SHRE_dalpha_e,X1SHRE_dalpha_e,SHRE_dalpha_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtbeta_e,(X0SHRE_dbeta_e,X1SHRE_dbeta_e,SHRE_dbeta_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgij_e,(X0SHRE_dgij_e,X1SHRE_dgij_e,SHRE_dgij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_dtgit_e,(X0SHRE_dgit_e,X1SHRE_dgit_e,SHRE_dgit_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_gij_e,(X0SHRE_gij_e,X1SHRE_gij_e,SHRE_gij_e_length))&&\
CCTK_DECLARE(CCTK_REAL,SHRE_git_e,(X0SHRE_git_e,X1SHRE_git_e,SHRE_git_e_length))&&\
CCTK_DECLARE(CCTK_REAL,WT_r0,(X0WT_r0,X1WT_r0,WT_r0_length))&&\
CCTK_DECLARE(CCTK_REAL,beta_l,(X0beta_l,X1beta_l,beta_l_length))&&\
CCTK_DECLARE(CCTK_REAL,beta_wt,(X0beta_wt,X1beta_wt,beta_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,beta_wt_p,(X0beta_wt,X1beta_wt,beta_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,j_l,(X0j_l,X1j_l,j_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,j_wt,(X0j_wt,X1j_wt,j_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,j_wt_p,(X0j_wt,X1j_wt,j_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,q_wt,(X0q_wt,X1q_wt,q_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,q_wt_p,(X0q_wt,X1q_wt,q_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_l,(X0u_l,X1u_l,u_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_wt,(X0u_wt,X1u_wt,u_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_wt_p,(X0u_wt,X1u_wt,u_wt_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,u_x_wt,(X0u_x_wt,X1u_x_wt,u_x_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,w_l,(X0w_l,X1w_l,w_l_length))&&\
CCTK_DECLARE(CCTK_REAL,w_wt,(X0w_wt,X1w_wt,w_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,w_wt_p,(X0w_wt,X1w_wt,w_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,x_wt,(X0x_wt,X1x_wt,x_wt_length))&&\
CCTK_DECLARE(CCTK_REAL,x_wt_p,(X0x_wt,X1x_wt,x_wt_length))&&\


#define NULLEXACT_PROTECTED_FARGUMENTS \
SHRE_alpha_e_length,SHRE_beta_e_length,SHRE_dalpha_e_length,SHRE_dbeta_e_length,SHRE_dgij_e_length,SHRE_dgit_e_length,SHRE_gij_e_length,SHRE_git_e_length,WT_r0_length,X0SHRE_alpha_e,X0SHRE_beta_e,X0SHRE_dalpha_e,X0SHRE_dbeta_e,X0SHRE_dgij_e,X0SHRE_dgit_e,X0SHRE_gij_e,X0SHRE_git_e,X0WT_r0,X0beta_l,X0beta_wt,X0j_l,X0j_wt,X0q_wt,X0u_l,X0u_wt,X0u_x_wt,X0w_l,X0w_wt,X0x_wt,X1SHRE_alpha_e,X1SHRE_beta_e,X1SHRE_dalpha_e,X1SHRE_dbeta_e,X1SHRE_dgij_e,X1SHRE_dgit_e,X1SHRE_gij_e,X1SHRE_git_e,X1WT_r0,X1beta_l,X1beta_wt,X1j_l,X1j_wt,X1q_wt,X1u_l,X1u_wt,X1u_x_wt,X1w_l,X1w_wt,X1x_wt,beta_l_length,beta_wt_length,j_l_length,j_wt_length,q_wt_length,u_l_length,u_wt_length,u_x_wt_length,w_l_length,w_wt_length,x_wt_length,SHRE_alpha_e,SHRE_beta_e,SHRE_dpalpha_e,SHRE_dpbeta_e,SHRE_dpgij_e,SHRE_dpgit_e,SHRE_dqalpha_e,SHRE_dqbeta_e,SHRE_dqgij_e,SHRE_dqgit_e,SHRE_dralpha_e,SHRE_drbeta_e,SHRE_drgij_e,SHRE_drgit_e,SHRE_dtalpha_e,SHRE_dtbeta_e,SHRE_dtgij_e,SHRE_dtgit_e,SHRE_gij_e,SHRE_git_e,WT_r0,beta_l,beta_wt,beta_wt_p,j_l,j_wt,j_wt_p,q_wt,q_wt_p,u_l,u_wt,u_wt_p,u_x_wt,w_l,w_wt,w_wt_p,x_wt,x_wt_p

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLEXACT_PROTECTED_CARGUMENTS \
static int cctki_vi_SHRE_alpha_e = -100; \
if (cctki_vi_SHRE_alpha_e == -100) cctki_vi_SHRE_alpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_alpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_alpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_alpha_e)); \
static int cctki_vi_SHRE_beta_e = -100; \
if (cctki_vi_SHRE_beta_e == -100) cctki_vi_SHRE_beta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_beta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_beta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_beta_e)); \
static int cctki_vi_SHRE_dpalpha_e = -100; \
if (cctki_vi_SHRE_dpalpha_e == -100) cctki_vi_SHRE_dpalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpalpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpalpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpalpha_e)); \
static int cctki_vi_SHRE_dpbeta_e = -100; \
if (cctki_vi_SHRE_dpbeta_e == -100) cctki_vi_SHRE_dpbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpbeta_e)); \
static int cctki_vi_SHRE_dpgij_e = -100; \
if (cctki_vi_SHRE_dpgij_e == -100) cctki_vi_SHRE_dpgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpgij_e)); \
static int cctki_vi_SHRE_dpgit_e = -100; \
if (cctki_vi_SHRE_dpgit_e == -100) cctki_vi_SHRE_dpgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dpgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dpgit_e)); \
static int cctki_vi_SHRE_dqalpha_e = -100; \
if (cctki_vi_SHRE_dqalpha_e == -100) cctki_vi_SHRE_dqalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqalpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqalpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqalpha_e)); \
static int cctki_vi_SHRE_dqbeta_e = -100; \
if (cctki_vi_SHRE_dqbeta_e == -100) cctki_vi_SHRE_dqbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqbeta_e)); \
static int cctki_vi_SHRE_dqgij_e = -100; \
if (cctki_vi_SHRE_dqgij_e == -100) cctki_vi_SHRE_dqgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqgij_e)); \
static int cctki_vi_SHRE_dqgit_e = -100; \
if (cctki_vi_SHRE_dqgit_e == -100) cctki_vi_SHRE_dqgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dqgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dqgit_e)); \
static int cctki_vi_SHRE_dralpha_e = -100; \
if (cctki_vi_SHRE_dralpha_e == -100) cctki_vi_SHRE_dralpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dralpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dralpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dralpha_e)); \
static int cctki_vi_SHRE_drbeta_e = -100; \
if (cctki_vi_SHRE_drbeta_e == -100) cctki_vi_SHRE_drbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drbeta_e)); \
static int cctki_vi_SHRE_drgij_e = -100; \
if (cctki_vi_SHRE_drgij_e == -100) cctki_vi_SHRE_drgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drgij_e)); \
static int cctki_vi_SHRE_drgit_e = -100; \
if (cctki_vi_SHRE_drgit_e == -100) cctki_vi_SHRE_drgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_drgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_drgit_e)); \
static int cctki_vi_SHRE_dtalpha_e = -100; \
if (cctki_vi_SHRE_dtalpha_e == -100) cctki_vi_SHRE_dtalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtalpha_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtalpha_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtalpha_e)); \
static int cctki_vi_SHRE_dtbeta_e = -100; \
if (cctki_vi_SHRE_dtbeta_e == -100) cctki_vi_SHRE_dtbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtbeta_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtbeta_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtbeta_e)); \
static int cctki_vi_SHRE_dtgij_e = -100; \
if (cctki_vi_SHRE_dtgij_e == -100) cctki_vi_SHRE_dtgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtgij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtgij_e)); \
static int cctki_vi_SHRE_dtgit_e = -100; \
if (cctki_vi_SHRE_dtgit_e == -100) cctki_vi_SHRE_dtgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtgit_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_dtgit_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_dtgit_e)); \
static int cctki_vi_SHRE_gij_e = -100; \
if (cctki_vi_SHRE_gij_e == -100) cctki_vi_SHRE_gij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_gij_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_gij_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_gij_e)); \
static int cctki_vi_SHRE_git_e = -100; \
if (cctki_vi_SHRE_git_e == -100) cctki_vi_SHRE_git_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_git_e[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, SHRE_git_e, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_SHRE_git_e)); \
static int cctki_vi_WT_r0 = -100; \
if (cctki_vi_WT_r0 == -100) cctki_vi_WT_r0 = CCTK_VarIndex("NULLSHREXTRACT::WT_r0[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, WT_r0, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_WT_r0)); \
static int cctki_vi_beta_l = -100; \
if (cctki_vi_beta_l == -100) cctki_vi_beta_l = CCTK_VarIndex("NULLSHREXTRACT::beta_l[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta_l, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta_l)); \
static int cctki_vi_beta_wt = -100; \
if (cctki_vi_beta_wt == -100) cctki_vi_beta_wt = CCTK_VarIndex("NULLSHREXTRACT::beta_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta_wt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_beta_wt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, beta_wt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_beta_wt)); \
static int cctki_vi_j_l = -100; \
if (cctki_vi_j_l == -100) cctki_vi_j_l = CCTK_VarIndex("NULLSHREXTRACT::j_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, j_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_j_l)); \
static int cctki_vi_j_wt = -100; \
if (cctki_vi_j_wt == -100) cctki_vi_j_wt = CCTK_VarIndex("NULLSHREXTRACT::j_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, j_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_j_wt)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, j_wt_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_j_wt)); \
static int cctki_vi_q_wt = -100; \
if (cctki_vi_q_wt == -100) cctki_vi_q_wt = CCTK_VarIndex("NULLSHREXTRACT::q_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, q_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_q_wt)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, q_wt_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_q_wt)); \
static int cctki_vi_u_l = -100; \
if (cctki_vi_u_l == -100) cctki_vi_u_l = CCTK_VarIndex("NULLSHREXTRACT::u_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_u_l)); \
static int cctki_vi_u_wt = -100; \
if (cctki_vi_u_wt == -100) cctki_vi_u_wt = CCTK_VarIndex("NULLSHREXTRACT::u_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_u_wt)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_wt_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_u_wt)); \
static int cctki_vi_u_x_wt = -100; \
if (cctki_vi_u_x_wt == -100) cctki_vi_u_x_wt = CCTK_VarIndex("NULLSHREXTRACT::u_x_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, u_x_wt, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_u_x_wt)); \
static int cctki_vi_w_l = -100; \
if (cctki_vi_w_l == -100) cctki_vi_w_l = CCTK_VarIndex("NULLSHREXTRACT::w_l[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_l, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_w_l)); \
static int cctki_vi_w_wt = -100; \
if (cctki_vi_w_wt == -100) cctki_vi_w_wt = CCTK_VarIndex("NULLSHREXTRACT::w_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_wt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_w_wt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, w_wt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_w_wt)); \
static int cctki_vi_x_wt = -100; \
if (cctki_vi_x_wt == -100) cctki_vi_x_wt = CCTK_VarIndex("NULLSHREXTRACT::x_wt[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x_wt, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_x_wt)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, x_wt_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_x_wt));

#define DECLARE_NULLEXACT_PROTECTED_C2F \
static int CCTKARGNUM_SHRE_alpha_e = -1; \
static int CCTKGROUPNUM_SHRE_alpha_e = -1; \
static int CCTKARGNUM_SHRE_beta_e = -1; \
static int CCTKGROUPNUM_SHRE_beta_e = -1; \
static int CCTKARGNUM_SHRE_dpalpha_e = -1; \
static int CCTKGROUPNUM_SHRE_dalpha_e = -1; \
static int CCTKARGNUM_SHRE_dpbeta_e = -1; \
static int CCTKGROUPNUM_SHRE_dbeta_e = -1; \
static int CCTKARGNUM_SHRE_dpgij_e = -1; \
static int CCTKGROUPNUM_SHRE_dgij_e = -1; \
static int CCTKARGNUM_SHRE_dpgit_e = -1; \
static int CCTKGROUPNUM_SHRE_dgit_e = -1; \
static int CCTKARGNUM_SHRE_dqalpha_e = -1; \
static int CCTKARGNUM_SHRE_dqbeta_e = -1; \
static int CCTKARGNUM_SHRE_dqgij_e = -1; \
static int CCTKARGNUM_SHRE_dqgit_e = -1; \
static int CCTKARGNUM_SHRE_dralpha_e = -1; \
static int CCTKARGNUM_SHRE_drbeta_e = -1; \
static int CCTKARGNUM_SHRE_drgij_e = -1; \
static int CCTKARGNUM_SHRE_drgit_e = -1; \
static int CCTKARGNUM_SHRE_dtalpha_e = -1; \
static int CCTKARGNUM_SHRE_dtbeta_e = -1; \
static int CCTKARGNUM_SHRE_dtgij_e = -1; \
static int CCTKARGNUM_SHRE_dtgit_e = -1; \
static int CCTKARGNUM_SHRE_gij_e = -1; \
static int CCTKGROUPNUM_SHRE_gij_e = -1; \
static int CCTKARGNUM_SHRE_git_e = -1; \
static int CCTKGROUPNUM_SHRE_git_e = -1; \
static int CCTKARGNUM_WT_r0 = -1; \
static int CCTKGROUPNUM_WT_r0 = -1; \
static int CCTKARGNUM_beta_l = -1; \
static int CCTKGROUPNUM_beta_l = -1; \
static int CCTKARGNUM_beta_wt = -1; \
static int CCTKGROUPNUM_beta_wt = -1; \
static int CCTKARGNUM_j_l = -1; \
static int CCTKGROUPNUM_j_l = -1; \
static int CCTKARGNUM_j_wt = -1; \
static int CCTKGROUPNUM_j_wt = -1; \
static int CCTKARGNUM_q_wt = -1; \
static int CCTKGROUPNUM_q_wt = -1; \
static int CCTKARGNUM_u_l = -1; \
static int CCTKGROUPNUM_u_l = -1; \
static int CCTKARGNUM_u_wt = -1; \
static int CCTKGROUPNUM_u_wt = -1; \
static int CCTKARGNUM_u_x_wt = -1; \
static int CCTKGROUPNUM_u_x_wt = -1; \
static int CCTKARGNUM_w_l = -1; \
static int CCTKGROUPNUM_w_l = -1; \
static int CCTKARGNUM_w_wt = -1; \
static int CCTKGROUPNUM_w_wt = -1; \
static int CCTKARGNUM_x_wt = -1; \
static int CCTKGROUPNUM_x_wt = -1;

#define INITIALISE_NULLEXACT_PROTECTED_C2F \
if(CCTKARGNUM_SHRE_alpha_e == -1) CCTKARGNUM_SHRE_alpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_alpha_e[0]"); \
if(CCTKGROUPNUM_SHRE_alpha_e == -1) CCTKGROUPNUM_SHRE_alpha_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_alpha_e"); \
if(CCTKARGNUM_SHRE_beta_e == -1) CCTKARGNUM_SHRE_beta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_beta_e[0]"); \
if(CCTKGROUPNUM_SHRE_beta_e == -1) CCTKGROUPNUM_SHRE_beta_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_beta_e"); \
if(CCTKARGNUM_SHRE_dpalpha_e == -1) CCTKARGNUM_SHRE_dpalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpalpha_e[0]"); \
if(CCTKGROUPNUM_SHRE_dalpha_e == -1) CCTKGROUPNUM_SHRE_dalpha_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_dalpha_e"); \
if(CCTKARGNUM_SHRE_dpbeta_e == -1) CCTKARGNUM_SHRE_dpbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpbeta_e[0]"); \
if(CCTKGROUPNUM_SHRE_dbeta_e == -1) CCTKGROUPNUM_SHRE_dbeta_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_dbeta_e"); \
if(CCTKARGNUM_SHRE_dpgij_e == -1) CCTKARGNUM_SHRE_dpgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpgij_e[0]"); \
if(CCTKGROUPNUM_SHRE_dgij_e == -1) CCTKGROUPNUM_SHRE_dgij_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_dgij_e"); \
if(CCTKARGNUM_SHRE_dpgit_e == -1) CCTKARGNUM_SHRE_dpgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dpgit_e[0]"); \
if(CCTKGROUPNUM_SHRE_dgit_e == -1) CCTKGROUPNUM_SHRE_dgit_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_dgit_e"); \
if(CCTKARGNUM_SHRE_dqalpha_e == -1) CCTKARGNUM_SHRE_dqalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqalpha_e[0]"); \
if(CCTKARGNUM_SHRE_dqbeta_e == -1) CCTKARGNUM_SHRE_dqbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqbeta_e[0]"); \
if(CCTKARGNUM_SHRE_dqgij_e == -1) CCTKARGNUM_SHRE_dqgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqgij_e[0]"); \
if(CCTKARGNUM_SHRE_dqgit_e == -1) CCTKARGNUM_SHRE_dqgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dqgit_e[0]"); \
if(CCTKARGNUM_SHRE_dralpha_e == -1) CCTKARGNUM_SHRE_dralpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dralpha_e[0]"); \
if(CCTKARGNUM_SHRE_drbeta_e == -1) CCTKARGNUM_SHRE_drbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drbeta_e[0]"); \
if(CCTKARGNUM_SHRE_drgij_e == -1) CCTKARGNUM_SHRE_drgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drgij_e[0]"); \
if(CCTKARGNUM_SHRE_drgit_e == -1) CCTKARGNUM_SHRE_drgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_drgit_e[0]"); \
if(CCTKARGNUM_SHRE_dtalpha_e == -1) CCTKARGNUM_SHRE_dtalpha_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtalpha_e[0]"); \
if(CCTKARGNUM_SHRE_dtbeta_e == -1) CCTKARGNUM_SHRE_dtbeta_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtbeta_e[0]"); \
if(CCTKARGNUM_SHRE_dtgij_e == -1) CCTKARGNUM_SHRE_dtgij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtgij_e[0]"); \
if(CCTKARGNUM_SHRE_dtgit_e == -1) CCTKARGNUM_SHRE_dtgit_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_dtgit_e[0]"); \
if(CCTKARGNUM_SHRE_gij_e == -1) CCTKARGNUM_SHRE_gij_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_gij_e[0]"); \
if(CCTKGROUPNUM_SHRE_gij_e == -1) CCTKGROUPNUM_SHRE_gij_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_gij_e"); \
if(CCTKARGNUM_SHRE_git_e == -1) CCTKARGNUM_SHRE_git_e = CCTK_VarIndex("NULLSHREXTRACT::SHRE_git_e[0]"); \
if(CCTKGROUPNUM_SHRE_git_e == -1) CCTKGROUPNUM_SHRE_git_e = CCTK_GroupIndex("NULLSHREXTRACT::SHRE_git_e"); \
if(CCTKARGNUM_WT_r0 == -1) CCTKARGNUM_WT_r0 = CCTK_VarIndex("NULLSHREXTRACT::WT_r0[0]"); \
if(CCTKGROUPNUM_WT_r0 == -1) CCTKGROUPNUM_WT_r0 = CCTK_GroupIndex("NULLSHREXTRACT::WT_r0"); \
if(CCTKARGNUM_beta_l == -1) CCTKARGNUM_beta_l = CCTK_VarIndex("NULLSHREXTRACT::beta_l[0]"); \
if(CCTKGROUPNUM_beta_l == -1) CCTKGROUPNUM_beta_l = CCTK_GroupIndex("NULLSHREXTRACT::beta_l"); \
if(CCTKARGNUM_beta_wt == -1) CCTKARGNUM_beta_wt = CCTK_VarIndex("NULLSHREXTRACT::beta_wt[0]"); \
if(CCTKGROUPNUM_beta_wt == -1) CCTKGROUPNUM_beta_wt = CCTK_GroupIndex("NULLSHREXTRACT::beta_wt"); \
if(CCTKARGNUM_j_l == -1) CCTKARGNUM_j_l = CCTK_VarIndex("NULLSHREXTRACT::j_l[0]"); \
if(CCTKGROUPNUM_j_l == -1) CCTKGROUPNUM_j_l = CCTK_GroupIndex("NULLSHREXTRACT::j_l"); \
if(CCTKARGNUM_j_wt == -1) CCTKARGNUM_j_wt = CCTK_VarIndex("NULLSHREXTRACT::j_wt[0]"); \
if(CCTKGROUPNUM_j_wt == -1) CCTKGROUPNUM_j_wt = CCTK_GroupIndex("NULLSHREXTRACT::j_wt"); \
if(CCTKARGNUM_q_wt == -1) CCTKARGNUM_q_wt = CCTK_VarIndex("NULLSHREXTRACT::q_wt[0]"); \
if(CCTKGROUPNUM_q_wt == -1) CCTKGROUPNUM_q_wt = CCTK_GroupIndex("NULLSHREXTRACT::q_wt"); \
if(CCTKARGNUM_u_l == -1) CCTKARGNUM_u_l = CCTK_VarIndex("NULLSHREXTRACT::u_l[0]"); \
if(CCTKGROUPNUM_u_l == -1) CCTKGROUPNUM_u_l = CCTK_GroupIndex("NULLSHREXTRACT::u_l"); \
if(CCTKARGNUM_u_wt == -1) CCTKARGNUM_u_wt = CCTK_VarIndex("NULLSHREXTRACT::u_wt[0]"); \
if(CCTKGROUPNUM_u_wt == -1) CCTKGROUPNUM_u_wt = CCTK_GroupIndex("NULLSHREXTRACT::u_wt"); \
if(CCTKARGNUM_u_x_wt == -1) CCTKARGNUM_u_x_wt = CCTK_VarIndex("NULLSHREXTRACT::u_x_wt[0]"); \
if(CCTKGROUPNUM_u_x_wt == -1) CCTKGROUPNUM_u_x_wt = CCTK_GroupIndex("NULLSHREXTRACT::u_x_wt"); \
if(CCTKARGNUM_w_l == -1) CCTKARGNUM_w_l = CCTK_VarIndex("NULLSHREXTRACT::w_l[0]"); \
if(CCTKGROUPNUM_w_l == -1) CCTKGROUPNUM_w_l = CCTK_GroupIndex("NULLSHREXTRACT::w_l"); \
if(CCTKARGNUM_w_wt == -1) CCTKARGNUM_w_wt = CCTK_VarIndex("NULLSHREXTRACT::w_wt[0]"); \
if(CCTKGROUPNUM_w_wt == -1) CCTKGROUPNUM_w_wt = CCTK_GroupIndex("NULLSHREXTRACT::w_wt"); \
if(CCTKARGNUM_x_wt == -1) CCTKARGNUM_x_wt = CCTK_VarIndex("NULLSHREXTRACT::x_wt[0]"); \
if(CCTKGROUPNUM_x_wt == -1) CCTKGROUPNUM_x_wt = CCTK_GroupIndex("NULLSHREXTRACT::x_wt");

#define NULLEXACT_PROTECTED_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *

#define PASS_NULLEXACT_PROTECTED_C2F(GH) \
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_alpha_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_beta_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_dalpha_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_dbeta_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_dgij_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_dgit_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_gij_e),\
PASS_GROUPLEN(NULLSHREXTRACT, SHRE_git_e),\
PASS_GROUPLEN(NULLSHREXTRACT, WT_r0),\
PASS_GROUPSIZE(SHRE_alpha_e, 0),\
PASS_GROUPSIZE(SHRE_beta_e, 0),\
PASS_GROUPSIZE(SHRE_dalpha_e, 0),\
PASS_GROUPSIZE(SHRE_dbeta_e, 0),\
PASS_GROUPSIZE(SHRE_dgij_e, 0),\
PASS_GROUPSIZE(SHRE_dgit_e, 0),\
PASS_GROUPSIZE(SHRE_gij_e, 0),\
PASS_GROUPSIZE(SHRE_git_e, 0),\
PASS_GROUPSIZE(WT_r0, 0),\
PASS_GROUPSIZE(beta_l, 0),\
PASS_GROUPSIZE(beta_wt, 0),\
PASS_GROUPSIZE(j_l, 0),\
PASS_GROUPSIZE(j_wt, 0),\
PASS_GROUPSIZE(q_wt, 0),\
PASS_GROUPSIZE(u_l, 0),\
PASS_GROUPSIZE(u_wt, 0),\
PASS_GROUPSIZE(u_x_wt, 0),\
PASS_GROUPSIZE(w_l, 0),\
PASS_GROUPSIZE(w_wt, 0),\
PASS_GROUPSIZE(x_wt, 0),\
PASS_GROUPSIZE(SHRE_alpha_e, 1),\
PASS_GROUPSIZE(SHRE_beta_e, 1),\
PASS_GROUPSIZE(SHRE_dalpha_e, 1),\
PASS_GROUPSIZE(SHRE_dbeta_e, 1),\
PASS_GROUPSIZE(SHRE_dgij_e, 1),\
PASS_GROUPSIZE(SHRE_dgit_e, 1),\
PASS_GROUPSIZE(SHRE_gij_e, 1),\
PASS_GROUPSIZE(SHRE_git_e, 1),\
PASS_GROUPSIZE(WT_r0, 1),\
PASS_GROUPSIZE(beta_l, 1),\
PASS_GROUPSIZE(beta_wt, 1),\
PASS_GROUPSIZE(j_l, 1),\
PASS_GROUPSIZE(j_wt, 1),\
PASS_GROUPSIZE(q_wt, 1),\
PASS_GROUPSIZE(u_l, 1),\
PASS_GROUPSIZE(u_wt, 1),\
PASS_GROUPSIZE(u_x_wt, 1),\
PASS_GROUPSIZE(w_l, 1),\
PASS_GROUPSIZE(w_wt, 1),\
PASS_GROUPSIZE(x_wt, 1),\
PASS_GROUPLEN(NULLSHREXTRACT, beta_l),\
PASS_GROUPLEN(NULLSHREXTRACT, beta_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, j_l),\
PASS_GROUPLEN(NULLSHREXTRACT, j_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, q_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, u_l),\
PASS_GROUPLEN(NULLSHREXTRACT, u_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, u_x_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, w_l),\
PASS_GROUPLEN(NULLSHREXTRACT, w_wt),\
PASS_GROUPLEN(NULLSHREXTRACT, x_wt),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_alpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_beta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpalpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dpgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqalpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dqgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dralpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_drgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtalpha_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtbeta_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_dtgit_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_gij_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(SHRE_git_e, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(WT_r0, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta_l, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(beta_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(j_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(j_wt, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(j_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(q_wt, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(q_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_wt, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_wt, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(u_x_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_l, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(w_wt, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(x_wt, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(x_wt, 1))

#endif /* CCODE */

#ifdef FCODE
#define DECLARE_NULLEXACT_PUBLIC_FARGUMENTS \
INTEGER JJ_l_length&&\
INTEGER NewsB_length&&\
INTEGER NewsB_past_length&&\
INTEGER NewsB_uBondi_length&&\
INTEGER News_length&&\
INTEGER News_past_length&&\
INTEGER News_uBondi_length&&\
INTEGER Null_AuxConstr_length&&\
INTEGER Null_AuxConstr_south_length&&\
INTEGER Null_R00_length&&\
INTEGER Null_R00_south_length&&\
INTEGER Null_R01_length&&\
INTEGER Null_R01_south_length&&\
INTEGER Null_R0A_length&&\
INTEGER Null_R0A_south_length&&\
INTEGER Null_R0A_split_length&&\
INTEGER Psi4_length&&\
INTEGER Psi4_past_length&&\
INTEGER Psi4_uBondi_length&&\
INTEGER X0EG_mask&&\
INTEGER X0EQ_mask&&\
INTEGER X0EV_mask&&\
INTEGER X0JJ_l&&\
INTEGER X0News&&\
INTEGER X0NewsB&&\
INTEGER X0NewsB_past&&\
INTEGER X0NewsB_uBondi&&\
INTEGER X0News_past&&\
INTEGER X0News_uBondi&&\
INTEGER X0NullGrParArrI&&\
INTEGER X0NullGrParArrR&&\
INTEGER X0Null_AuxConstr&&\
INTEGER X0Null_AuxConstr_south&&\
INTEGER X0Null_R00&&\
INTEGER X0Null_R00_south&&\
INTEGER X0Null_R01&&\
INTEGER X0Null_R01_south&&\
INTEGER X0Null_R0A&&\
INTEGER X0Null_R0A_south&&\
INTEGER X0Null_R0A_split&&\
INTEGER X0Psi4&&\
INTEGER X0Psi4_past&&\
INTEGER X0Psi4_uBondi&&\
INTEGER X0RadCrd&&\
INTEGER X0StCmCrd&&\
INTEGER X0StCrd&&\
INTEGER X0cmplxcharfuncs_aux&&\
INTEGER X0cmplxcharfuncs_basic&&\
INTEGER X0guard_mask&&\
INTEGER X0linStrain&&\
INTEGER X0linStrain_past&&\
INTEGER X0linStrain_uBondi&&\
INTEGER X0null_mask&&\
INTEGER X0omega&&\
INTEGER X0realcharfuncs&&\
INTEGER X0tmp_cgf&&\
INTEGER X0tmp_cgf3&&\
INTEGER X0tmp_rgf&&\
INTEGER X0uBondi&&\
INTEGER X0uBondi_past&&\
INTEGER X1EG_mask&&\
INTEGER X1EQ_mask&&\
INTEGER X1EV_mask&&\
INTEGER X1JJ_l&&\
INTEGER X1News&&\
INTEGER X1NewsB&&\
INTEGER X1NewsB_past&&\
INTEGER X1NewsB_uBondi&&\
INTEGER X1News_past&&\
INTEGER X1News_uBondi&&\
INTEGER X1Null_AuxConstr&&\
INTEGER X1Null_AuxConstr_south&&\
INTEGER X1Null_R00&&\
INTEGER X1Null_R00_south&&\
INTEGER X1Null_R01&&\
INTEGER X1Null_R01_south&&\
INTEGER X1Null_R0A&&\
INTEGER X1Null_R0A_south&&\
INTEGER X1Null_R0A_split&&\
INTEGER X1Psi4&&\
INTEGER X1Psi4_past&&\
INTEGER X1Psi4_uBondi&&\
INTEGER X1StCmCrd&&\
INTEGER X1StCrd&&\
INTEGER X1cmplxcharfuncs_aux&&\
INTEGER X1cmplxcharfuncs_basic&&\
INTEGER X1guard_mask&&\
INTEGER X1linStrain&&\
INTEGER X1linStrain_past&&\
INTEGER X1linStrain_uBondi&&\
INTEGER X1null_mask&&\
INTEGER X1omega&&\
INTEGER X1realcharfuncs&&\
INTEGER X1tmp_cgf&&\
INTEGER X1tmp_cgf3&&\
INTEGER X1tmp_rgf&&\
INTEGER X1uBondi&&\
INTEGER X1uBondi_past&&\
INTEGER cmplxcharfuncs_aux_length&&\
INTEGER cmplxcharfuncs_basic_length&&\
INTEGER linStrain_length&&\
INTEGER linStrain_past_length&&\
INTEGER linStrain_uBondi_length&&\
INTEGER omega_length&&\
INTEGER realcharfuncs_length&&\
INTEGER uBondi_length&&\
INTEGER uBondi_past_length&&\
CCTK_DECLARE(CCTK_INT,EG_mask,(X0EG_mask,X1EG_mask))&&\
CCTK_DECLARE(CCTK_INT,EQ_mask,(X0EQ_mask,X1EQ_mask))&&\
CCTK_DECLARE(CCTK_INT,EV_mask,(X0EV_mask,X1EV_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,Jn_l,(X0JJ_l,X1JJ_l,JJ_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Jo_l,(X0JJ_l,X1JJ_l,JJ_l_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,News,(X0News,X1News,News_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,NewsB,(X0NewsB,X1NewsB,NewsB_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,NewsB_past,(X0NewsB_past,X1NewsB_past,NewsB_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,NewsB_uBondi,(X0NewsB_uBondi,X1NewsB_uBondi,NewsB_uBondi_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,News_past,(X0News_past,X1News_past,News_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,News_uBondi,(X0News_uBondi,X1News_uBondi,News_uBondi_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Null_AuxConstr_cbcn,(X0Null_AuxConstr,X1Null_AuxConstr,Null_AuxConstr_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Null_AuxConstr_cbcs,(X0Null_AuxConstr_south,X1Null_AuxConstr_south,Null_AuxConstr_south_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Null_AuxConstr_ckcn,(X0Null_AuxConstr,X1Null_AuxConstr,Null_AuxConstr_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Null_AuxConstr_ckcs,(X0Null_AuxConstr_south,X1Null_AuxConstr_south,Null_AuxConstr_south_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Null_AuxConstr_nucn,(X0Null_AuxConstr,X1Null_AuxConstr,Null_AuxConstr_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Null_AuxConstr_nucs,(X0Null_AuxConstr_south,X1Null_AuxConstr_south,Null_AuxConstr_south_length))&&\
CCTK_DECLARE(CCTK_REAL,Null_R00,(X0Null_R00,X1Null_R00,Null_R00_length))&&\
CCTK_DECLARE(CCTK_REAL,Null_R00_south,(X0Null_R00_south,X1Null_R00_south,Null_R00_south_length))&&\
CCTK_DECLARE(CCTK_REAL,Null_R01,(X0Null_R01,X1Null_R01,Null_R01_length))&&\
CCTK_DECLARE(CCTK_REAL,Null_R01_south,(X0Null_R01_south,X1Null_R01_south,Null_R01_south_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Null_R0A,(X0Null_R0A,X1Null_R0A,Null_R0A_length))&&\
CCTK_DECLARE(CCTK_REAL,Null_R0A_i,(X0Null_R0A_split,X1Null_R0A_split,Null_R0A_split_length))&&\
CCTK_DECLARE(CCTK_REAL,Null_R0A_r,(X0Null_R0A_split,X1Null_R0A_split,Null_R0A_split_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Null_R0A_south,(X0Null_R0A_south,X1Null_R0A_south,Null_R0A_south_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Psi4,(X0Psi4,X1Psi4,Psi4_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Psi4_past,(X0Psi4_past,X1Psi4_past,Psi4_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,Psi4_uBondi,(X0Psi4_uBondi,X1Psi4_uBondi,Psi4_uBondi_length))&&\
CCTK_DECLARE(CCTK_REAL,bcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,bcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_INT,boundary_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,boundary_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,cbcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ckcs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_REAL,constant_uBondi,)&&\
CCTK_DECLARE(CCTK_REAL,courant_min_time,)&&\
CCTK_DECLARE(CCTK_REAL,courant_wave_speed,)&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,dxjcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,eth2jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_INT,evolution_maskn,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_INT,evolution_masks,(X0null_mask,X1null_mask))&&\
CCTK_DECLARE(CCTK_REAL,evolution_radius,)&&\
CCTK_DECLARE(CCTK_INT,guard_mask,(X0guard_mask,X1guard_mask))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,jcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,linStrain,(X0linStrain,X1linStrain,linStrain_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,linStrain_past,(X0linStrain_past,X1linStrain_past,linStrain_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,linStrain_uBondi,(X0linStrain_uBondi,X1linStrain_uBondi,linStrain_uBondi_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucn_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,nucs_p,(X0cmplxcharfuncs_aux,X1cmplxcharfuncs_aux,cmplxcharfuncs_aux_length))&&\
CCTK_DECLARE(CCTK_REAL,null_delta,(X0NullGrParArrR))&&\
CCTK_DECLARE(CCTK_REAL,null_dx,)&&\
CCTK_DECLARE(CCTK_INT,null_gsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lbnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_INT,null_lsh,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_rb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_rbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_INT,null_ubnd,(X0NullGrParArrI))&&\
CCTK_DECLARE(CCTK_REAL,null_xb,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,null_xbh,(X0RadCrd))&&\
CCTK_DECLARE(CCTK_REAL,omegan,(X0omega,X1omega,omega_length))&&\
CCTK_DECLARE(CCTK_REAL,omegao,(X0omega,X1omega,omega_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,qcs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_REAL,qsize,)&&\
CCTK_DECLARE(CCTK_REAL,stereo_p,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_pp,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,stereo_q,(X0StCrd,X1StCrd))&&\
CCTK_DECLARE(CCTK_REAL,time_of_news,)&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfn3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs,(X0tmp_cgf,X1tmp_cgf))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs1,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs2,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_COMPLEX,tmp_cgfs3,(X0tmp_cgf3,X1tmp_cgf3))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfn,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_REAL,tmp_rgfs,(X0tmp_rgf,X1tmp_rgf))&&\
CCTK_DECLARE(CCTK_REAL,uBondi,(X0uBondi,X1uBondi,uBondi_length))&&\
CCTK_DECLARE(CCTK_REAL,uBondi_past,(X0uBondi_past,X1uBondi_past,uBondi_past_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucn_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,ucs_p,(X0cmplxcharfuncs_basic,X1cmplxcharfuncs_basic,cmplxcharfuncs_basic_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcn_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_REAL,wcs_p,(X0realcharfuncs,X1realcharfuncs,realcharfuncs_length))&&\
CCTK_DECLARE(CCTK_COMPLEX,zeta,(X0StCmCrd,X1StCmCrd))&&\


#define NULLEXACT_PUBLIC_FARGUMENTS \
JJ_l_length,NewsB_length,NewsB_past_length,NewsB_uBondi_length,News_length,News_past_length,News_uBondi_length,Null_AuxConstr_length,Null_AuxConstr_south_length,Null_R00_length,Null_R00_south_length,Null_R01_length,Null_R01_south_length,Null_R0A_length,Null_R0A_south_length,Null_R0A_split_length,Psi4_length,Psi4_past_length,Psi4_uBondi_length,X0EG_mask,X0EQ_mask,X0EV_mask,X0JJ_l,X0News,X0NewsB,X0NewsB_past,X0NewsB_uBondi,X0News_past,X0News_uBondi,X0NullGrParArrI,X0NullGrParArrR,X0Null_AuxConstr,X0Null_AuxConstr_south,X0Null_R00,X0Null_R00_south,X0Null_R01,X0Null_R01_south,X0Null_R0A,X0Null_R0A_south,X0Null_R0A_split,X0Psi4,X0Psi4_past,X0Psi4_uBondi,X0RadCrd,X0StCmCrd,X0StCrd,X0cmplxcharfuncs_aux,X0cmplxcharfuncs_basic,X0guard_mask,X0linStrain,X0linStrain_past,X0linStrain_uBondi,X0null_mask,X0omega,X0realcharfuncs,X0tmp_cgf,X0tmp_cgf3,X0tmp_rgf,X0uBondi,X0uBondi_past,X1EG_mask,X1EQ_mask,X1EV_mask,X1JJ_l,X1News,X1NewsB,X1NewsB_past,X1NewsB_uBondi,X1News_past,X1News_uBondi,X1Null_AuxConstr,X1Null_AuxConstr_south,X1Null_R00,X1Null_R00_south,X1Null_R01,X1Null_R01_south,X1Null_R0A,X1Null_R0A_south,X1Null_R0A_split,X1Psi4,X1Psi4_past,X1Psi4_uBondi,X1StCmCrd,X1StCrd,X1cmplxcharfuncs_aux,X1cmplxcharfuncs_basic,X1guard_mask,X1linStrain,X1linStrain_past,X1linStrain_uBondi,X1null_mask,X1omega,X1realcharfuncs,X1tmp_cgf,X1tmp_cgf3,X1tmp_rgf,X1uBondi,X1uBondi_past,cmplxcharfuncs_aux_length,cmplxcharfuncs_basic_length,linStrain_length,linStrain_past_length,linStrain_uBondi_length,omega_length,realcharfuncs_length,uBondi_length,uBondi_past_length,EG_mask,EQ_mask,EV_mask,Jn_l,Jo_l,News,NewsB,NewsB_past,NewsB_uBondi,News_past,News_uBondi,Null_AuxConstr_cbcn,Null_AuxConstr_cbcs,Null_AuxConstr_ckcn,Null_AuxConstr_ckcs,Null_AuxConstr_nucn,Null_AuxConstr_nucs,Null_R00,Null_R00_south,Null_R01,Null_R01_south,Null_R0A,Null_R0A_i,Null_R0A_r,Null_R0A_south,Psi4,Psi4_past,Psi4_uBondi,bcn,bcn_p,bcs,bcs_p,boundary_maskn,boundary_masks,cbcn,cbcn_p,cbcs,cbcs_p,ckcn,ckcn_p,ckcs,ckcs_p,constant_uBondi,courant_min_time,courant_wave_speed,dxjcn,dxjcn_p,dxjcs,dxjcs_p,eth2jcn,eth2jcn_p,eth2jcs,eth2jcs_p,evolution_maskn,evolution_masks,evolution_radius,guard_mask,jcn,jcn_p,jcs,jcs_p,linStrain,linStrain_past,linStrain_uBondi,nucn,nucn_p,nucs,nucs_p,null_delta,null_dx,null_gsh,null_lbnd,null_lsh,null_rb,null_rbh,null_ubnd,null_xb,null_xbh,omegan,omegao,qcn,qcn_p,qcs,qcs_p,qsize,stereo_p,stereo_pp,stereo_q,time_of_news,tmp_cgfn,tmp_cgfn1,tmp_cgfn2,tmp_cgfn3,tmp_cgfs,tmp_cgfs1,tmp_cgfs2,tmp_cgfs3,tmp_rgfn,tmp_rgfs,uBondi,uBondi_past,ucn,ucn_p,ucs,ucs_p,wcn,wcn_p,wcs,wcs_p,zeta

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLEXACT_PUBLIC_CARGUMENTS \
static int cctki_vi_EG_mask = -100; \
if (cctki_vi_EG_mask == -100) cctki_vi_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EG_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EG_mask)); \
static int cctki_vi_EQ_mask = -100; \
if (cctki_vi_EQ_mask == -100) cctki_vi_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EQ_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EQ_mask)); \
static int cctki_vi_EV_mask = -100; \
if (cctki_vi_EV_mask == -100) cctki_vi_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, EV_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_EV_mask)); \
static int cctki_vi_Jn_l = -100; \
if (cctki_vi_Jn_l == -100) cctki_vi_Jn_l = CCTK_VarIndex("NULLNEWS::Jn_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Jn_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Jn_l)); \
static int cctki_vi_Jo_l = -100; \
if (cctki_vi_Jo_l == -100) cctki_vi_Jo_l = CCTK_VarIndex("NULLNEWS::Jo_l[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Jo_l, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Jo_l)); \
static int cctki_vi_News = -100; \
if (cctki_vi_News == -100) cctki_vi_News = CCTK_VarIndex("NULLNEWS::News[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, News, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_News)); \
static int cctki_vi_NewsB = -100; \
if (cctki_vi_NewsB == -100) cctki_vi_NewsB = CCTK_VarIndex("NULLNEWS::NewsB[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, NewsB, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsB)); \
static int cctki_vi_NewsB_past = -100; \
if (cctki_vi_NewsB_past == -100) cctki_vi_NewsB_past = CCTK_VarIndex("NULLNEWS::NewsB_past[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, NewsB_past, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsB_past)); \
static int cctki_vi_NewsB_uBondi = -100; \
if (cctki_vi_NewsB_uBondi == -100) cctki_vi_NewsB_uBondi = CCTK_VarIndex("NULLNEWS::NewsB_uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, NewsB_uBondi, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_NewsB_uBondi)); \
static int cctki_vi_News_past = -100; \
if (cctki_vi_News_past == -100) cctki_vi_News_past = CCTK_VarIndex("NULLNEWS::News_past[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, News_past, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_News_past)); \
static int cctki_vi_News_uBondi = -100; \
if (cctki_vi_News_uBondi == -100) cctki_vi_News_uBondi = CCTK_VarIndex("NULLNEWS::News_uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, News_uBondi, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_News_uBondi)); \
static int cctki_vi_Null_AuxConstr_cbcn = -100; \
if (cctki_vi_Null_AuxConstr_cbcn == -100) cctki_vi_Null_AuxConstr_cbcn = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_cbcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Null_AuxConstr_cbcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_AuxConstr_cbcn)); \
static int cctki_vi_Null_AuxConstr_cbcs = -100; \
if (cctki_vi_Null_AuxConstr_cbcs == -100) cctki_vi_Null_AuxConstr_cbcs = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_cbcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Null_AuxConstr_cbcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_AuxConstr_cbcs)); \
static int cctki_vi_Null_AuxConstr_ckcn = -100; \
if (cctki_vi_Null_AuxConstr_ckcn == -100) cctki_vi_Null_AuxConstr_ckcn = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_ckcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Null_AuxConstr_ckcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_AuxConstr_ckcn)); \
static int cctki_vi_Null_AuxConstr_ckcs = -100; \
if (cctki_vi_Null_AuxConstr_ckcs == -100) cctki_vi_Null_AuxConstr_ckcs = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_ckcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Null_AuxConstr_ckcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_AuxConstr_ckcs)); \
static int cctki_vi_Null_AuxConstr_nucn = -100; \
if (cctki_vi_Null_AuxConstr_nucn == -100) cctki_vi_Null_AuxConstr_nucn = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_nucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Null_AuxConstr_nucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_AuxConstr_nucn)); \
static int cctki_vi_Null_AuxConstr_nucs = -100; \
if (cctki_vi_Null_AuxConstr_nucs == -100) cctki_vi_Null_AuxConstr_nucs = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_nucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Null_AuxConstr_nucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_AuxConstr_nucs)); \
static int cctki_vi_Null_R00 = -100; \
if (cctki_vi_Null_R00 == -100) cctki_vi_Null_R00 = CCTK_VarIndex("NULLCONSTR::Null_R00[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Null_R00, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_R00)); \
static int cctki_vi_Null_R00_south = -100; \
if (cctki_vi_Null_R00_south == -100) cctki_vi_Null_R00_south = CCTK_VarIndex("NULLCONSTR::Null_R00_south[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Null_R00_south, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_R00_south)); \
static int cctki_vi_Null_R01 = -100; \
if (cctki_vi_Null_R01 == -100) cctki_vi_Null_R01 = CCTK_VarIndex("NULLCONSTR::Null_R01[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Null_R01, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_R01)); \
static int cctki_vi_Null_R01_south = -100; \
if (cctki_vi_Null_R01_south == -100) cctki_vi_Null_R01_south = CCTK_VarIndex("NULLCONSTR::Null_R01_south[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Null_R01_south, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_R01_south)); \
static int cctki_vi_Null_R0A = -100; \
if (cctki_vi_Null_R0A == -100) cctki_vi_Null_R0A = CCTK_VarIndex("NULLCONSTR::Null_R0A[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Null_R0A, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_R0A)); \
static int cctki_vi_Null_R0A_i = -100; \
if (cctki_vi_Null_R0A_i == -100) cctki_vi_Null_R0A_i = CCTK_VarIndex("NULLCONSTR::Null_R0A_i[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Null_R0A_i, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_R0A_i)); \
static int cctki_vi_Null_R0A_r = -100; \
if (cctki_vi_Null_R0A_r == -100) cctki_vi_Null_R0A_r = CCTK_VarIndex("NULLCONSTR::Null_R0A_r[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, Null_R0A_r, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_R0A_r)); \
static int cctki_vi_Null_R0A_south = -100; \
if (cctki_vi_Null_R0A_south == -100) cctki_vi_Null_R0A_south = CCTK_VarIndex("NULLCONSTR::Null_R0A_south[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Null_R0A_south, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Null_R0A_south)); \
static int cctki_vi_Psi4 = -100; \
if (cctki_vi_Psi4 == -100) cctki_vi_Psi4 = CCTK_VarIndex("NULLNEWS::Psi4[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Psi4, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4)); \
static int cctki_vi_Psi4_past = -100; \
if (cctki_vi_Psi4_past == -100) cctki_vi_Psi4_past = CCTK_VarIndex("NULLNEWS::Psi4_past[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Psi4_past, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4_past)); \
static int cctki_vi_Psi4_uBondi = -100; \
if (cctki_vi_Psi4_uBondi == -100) cctki_vi_Psi4_uBondi = CCTK_VarIndex("NULLNEWS::Psi4_uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, Psi4_uBondi, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_Psi4_uBondi)); \
static int cctki_vi_bcn = -100; \
if (cctki_vi_bcn == -100) cctki_vi_bcn = CCTK_VarIndex("NULLVARS::bcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcn)); \
static int cctki_vi_bcs = -100; \
if (cctki_vi_bcs == -100) cctki_vi_bcs = CCTK_VarIndex("NULLVARS::bcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_bcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, bcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_bcs)); \
static int cctki_vi_boundary_maskn = -100; \
if (cctki_vi_boundary_maskn == -100) cctki_vi_boundary_maskn = CCTK_VarIndex("NULLVARS::boundary_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_maskn)); \
static int cctki_vi_boundary_masks = -100; \
if (cctki_vi_boundary_masks == -100) cctki_vi_boundary_masks = CCTK_VarIndex("NULLVARS::boundary_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, boundary_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_boundary_masks)); \
static int cctki_vi_cbcn = -100; \
if (cctki_vi_cbcn == -100) cctki_vi_cbcn = CCTK_VarIndex("NULLVARS::cbcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcn)); \
static int cctki_vi_cbcs = -100; \
if (cctki_vi_cbcs == -100) cctki_vi_cbcs = CCTK_VarIndex("NULLVARS::cbcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_cbcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, cbcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_cbcs)); \
static int cctki_vi_ckcn = -100; \
if (cctki_vi_ckcn == -100) cctki_vi_ckcn = CCTK_VarIndex("NULLVARS::ckcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcn)); \
static int cctki_vi_ckcs = -100; \
if (cctki_vi_ckcs == -100) cctki_vi_ckcs = CCTK_VarIndex("NULLVARS::ckcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ckcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ckcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ckcs)); \
static int cctki_vi_constant_uBondi = -100; \
if (cctki_vi_constant_uBondi == -100) cctki_vi_constant_uBondi = CCTK_VarIndex("NULLNEWS::constant_uBondi"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, constant_uBondi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_constant_uBondi)); \
static int cctki_vi_courant_min_time = -100; \
if (cctki_vi_courant_min_time == -100) cctki_vi_courant_min_time = CCTK_VarIndex("TIME::courant_min_time"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, courant_min_time, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_courant_min_time)); \
static int cctki_vi_courant_wave_speed = -100; \
if (cctki_vi_courant_wave_speed == -100) cctki_vi_courant_wave_speed = CCTK_VarIndex("TIME::courant_wave_speed"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, courant_wave_speed, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_courant_wave_speed)); \
static int cctki_vi_dxjcn = -100; \
if (cctki_vi_dxjcn == -100) cctki_vi_dxjcn = CCTK_VarIndex("NULLVARS::dxjcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcn)); \
static int cctki_vi_dxjcs = -100; \
if (cctki_vi_dxjcs == -100) cctki_vi_dxjcs = CCTK_VarIndex("NULLVARS::dxjcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_dxjcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, dxjcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_dxjcs)); \
static int cctki_vi_eth2jcn = -100; \
if (cctki_vi_eth2jcn == -100) cctki_vi_eth2jcn = CCTK_VarIndex("NULLVARS::eth2jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcn)); \
static int cctki_vi_eth2jcs = -100; \
if (cctki_vi_eth2jcs == -100) cctki_vi_eth2jcs = CCTK_VarIndex("NULLVARS::eth2jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_eth2jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, eth2jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_eth2jcs)); \
static int cctki_vi_evolution_maskn = -100; \
if (cctki_vi_evolution_maskn == -100) cctki_vi_evolution_maskn = CCTK_VarIndex("NULLVARS::evolution_maskn"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_maskn, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_maskn)); \
static int cctki_vi_evolution_masks = -100; \
if (cctki_vi_evolution_masks == -100) cctki_vi_evolution_masks = CCTK_VarIndex("NULLVARS::evolution_masks"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, evolution_masks, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_masks)); \
static int cctki_vi_evolution_radius = -100; \
if (cctki_vi_evolution_radius == -100) cctki_vi_evolution_radius = CCTK_VarIndex("NULLINTERP::evolution_radius"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, evolution_radius, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_evolution_radius)); \
static int cctki_vi_guard_mask = -100; \
if (cctki_vi_guard_mask == -100) cctki_vi_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, guard_mask, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_guard_mask)); \
static int cctki_vi_jcn = -100; \
if (cctki_vi_jcn == -100) cctki_vi_jcn = CCTK_VarIndex("NULLVARS::jcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcn)); \
static int cctki_vi_jcs = -100; \
if (cctki_vi_jcs == -100) cctki_vi_jcs = CCTK_VarIndex("NULLVARS::jcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_jcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, jcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_jcs)); \
static int cctki_vi_linStrain = -100; \
if (cctki_vi_linStrain == -100) cctki_vi_linStrain = CCTK_VarIndex("NULLNEWS::linStrain[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, linStrain, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_linStrain)); \
static int cctki_vi_linStrain_past = -100; \
if (cctki_vi_linStrain_past == -100) cctki_vi_linStrain_past = CCTK_VarIndex("NULLNEWS::linStrain_past[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, linStrain_past, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_linStrain_past)); \
static int cctki_vi_linStrain_uBondi = -100; \
if (cctki_vi_linStrain_uBondi == -100) cctki_vi_linStrain_uBondi = CCTK_VarIndex("NULLNEWS::linStrain_uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, linStrain_uBondi, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_linStrain_uBondi)); \
static int cctki_vi_nucn = -100; \
if (cctki_vi_nucn == -100) cctki_vi_nucn = CCTK_VarIndex("NULLVARS::nucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucn)); \
static int cctki_vi_nucs = -100; \
if (cctki_vi_nucs == -100) cctki_vi_nucs = CCTK_VarIndex("NULLVARS::nucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_nucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, nucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_nucs)); \
static int cctki_vi_null_delta = -100; \
if (cctki_vi_null_delta == -100) cctki_vi_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_delta, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_delta)); \
static int cctki_vi_null_dx = -100; \
if (cctki_vi_null_dx == -100) cctki_vi_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_dx, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_dx)); \
static int cctki_vi_null_gsh = -100; \
if (cctki_vi_null_gsh == -100) cctki_vi_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_gsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_gsh)); \
static int cctki_vi_null_lbnd = -100; \
if (cctki_vi_null_lbnd == -100) cctki_vi_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lbnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lbnd)); \
static int cctki_vi_null_lsh = -100; \
if (cctki_vi_null_lsh == -100) cctki_vi_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_lsh, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_lsh)); \
static int cctki_vi_null_rb = -100; \
if (cctki_vi_null_rb == -100) cctki_vi_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rb)); \
static int cctki_vi_null_rbh = -100; \
if (cctki_vi_null_rbh == -100) cctki_vi_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_rbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_rbh)); \
static int cctki_vi_null_ubnd = -100; \
if (cctki_vi_null_ubnd == -100) cctki_vi_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
CCTK_DECLARE_INIT (CCTK_INT * restrict const, null_ubnd, (CCTK_INT *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_ubnd)); \
static int cctki_vi_null_xb = -100; \
if (cctki_vi_null_xb == -100) cctki_vi_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xb, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xb)); \
static int cctki_vi_null_xbh = -100; \
if (cctki_vi_null_xbh == -100) cctki_vi_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, null_xbh, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_null_xbh)); \
static int cctki_vi_omegan = -100; \
if (cctki_vi_omegan == -100) cctki_vi_omegan = CCTK_VarIndex("NULLNEWS::omegan[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, omegan, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_omegan)); \
static int cctki_vi_omegao = -100; \
if (cctki_vi_omegao == -100) cctki_vi_omegao = CCTK_VarIndex("NULLNEWS::omegao[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, omegao, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_omegao)); \
static int cctki_vi_qcn = -100; \
if (cctki_vi_qcn == -100) cctki_vi_qcn = CCTK_VarIndex("NULLVARS::qcn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcn)); \
static int cctki_vi_qcs = -100; \
if (cctki_vi_qcs == -100) cctki_vi_qcs = CCTK_VarIndex("NULLVARS::qcs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qcs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, qcs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_qcs)); \
static int cctki_vi_qsize = -100; \
if (cctki_vi_qsize == -100) cctki_vi_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, qsize, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_qsize)); \
static int cctki_vi_stereo_p = -100; \
if (cctki_vi_stereo_p == -100) cctki_vi_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_p)); \
static int cctki_vi_stereo_pp = -100; \
if (cctki_vi_stereo_pp == -100) cctki_vi_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_pp, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_pp)); \
static int cctki_vi_stereo_q = -100; \
if (cctki_vi_stereo_q == -100) cctki_vi_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, stereo_q, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_stereo_q)); \
static int cctki_vi_time_of_news = -100; \
if (cctki_vi_time_of_news == -100) cctki_vi_time_of_news = CCTK_VarIndex("NULLNEWS::time_of_news"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, time_of_news, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_time_of_news)); \
static int cctki_vi_tmp_cgfn = -100; \
if (cctki_vi_tmp_cgfn == -100) cctki_vi_tmp_cgfn = CCTK_VarIndex("NULLINTERP::tmp_cgfn"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn)); \
static int cctki_vi_tmp_cgfn1 = -100; \
if (cctki_vi_tmp_cgfn1 == -100) cctki_vi_tmp_cgfn1 = CCTK_VarIndex("NULLINTERP::tmp_cgfn1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn1)); \
static int cctki_vi_tmp_cgfn2 = -100; \
if (cctki_vi_tmp_cgfn2 == -100) cctki_vi_tmp_cgfn2 = CCTK_VarIndex("NULLINTERP::tmp_cgfn2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn2)); \
static int cctki_vi_tmp_cgfn3 = -100; \
if (cctki_vi_tmp_cgfn3 == -100) cctki_vi_tmp_cgfn3 = CCTK_VarIndex("NULLINTERP::tmp_cgfn3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfn3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfn3)); \
static int cctki_vi_tmp_cgfs = -100; \
if (cctki_vi_tmp_cgfs == -100) cctki_vi_tmp_cgfs = CCTK_VarIndex("NULLINTERP::tmp_cgfs"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs)); \
static int cctki_vi_tmp_cgfs1 = -100; \
if (cctki_vi_tmp_cgfs1 == -100) cctki_vi_tmp_cgfs1 = CCTK_VarIndex("NULLINTERP::tmp_cgfs1"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs1, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs1)); \
static int cctki_vi_tmp_cgfs2 = -100; \
if (cctki_vi_tmp_cgfs2 == -100) cctki_vi_tmp_cgfs2 = CCTK_VarIndex("NULLINTERP::tmp_cgfs2"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs2, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs2)); \
static int cctki_vi_tmp_cgfs3 = -100; \
if (cctki_vi_tmp_cgfs3 == -100) cctki_vi_tmp_cgfs3 = CCTK_VarIndex("NULLINTERP::tmp_cgfs3"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, tmp_cgfs3, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_cgfs3)); \
static int cctki_vi_tmp_rgfn = -100; \
if (cctki_vi_tmp_rgfn == -100) cctki_vi_tmp_rgfn = CCTK_VarIndex("NULLINTERP::tmp_rgfn"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfn)); \
static int cctki_vi_tmp_rgfs = -100; \
if (cctki_vi_tmp_rgfs == -100) cctki_vi_tmp_rgfs = CCTK_VarIndex("NULLINTERP::tmp_rgfs"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, tmp_rgfs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_tmp_rgfs)); \
static int cctki_vi_uBondi = -100; \
if (cctki_vi_uBondi == -100) cctki_vi_uBondi = CCTK_VarIndex("NULLNEWS::uBondi[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, uBondi, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_uBondi)); \
static int cctki_vi_uBondi_past = -100; \
if (cctki_vi_uBondi_past == -100) cctki_vi_uBondi_past = CCTK_VarIndex("NULLNEWS::uBondi_past[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, uBondi_past, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_uBondi_past)); \
static int cctki_vi_ucn = -100; \
if (cctki_vi_ucn == -100) cctki_vi_ucn = CCTK_VarIndex("NULLVARS::ucn[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucn)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucn_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucn)); \
static int cctki_vi_ucs = -100; \
if (cctki_vi_ucs == -100) cctki_vi_ucs = CCTK_VarIndex("NULLVARS::ucs[0]"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_ucs)); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, ucs_p, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_ucs)); \
static int cctki_vi_wcn = -100; \
if (cctki_vi_wcn == -100) cctki_vi_wcn = CCTK_VarIndex("NULLVARS::wcn[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcn)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcn_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcn)); \
static int cctki_vi_wcs = -100; \
if (cctki_vi_wcs == -100) cctki_vi_wcs = CCTK_VarIndex("NULLVARS::wcs[0]"); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_wcs)); \
CCTK_DECLARE_INIT (CCTK_REAL * restrict const, wcs_p, (CCTK_REAL *) CCTKi_VarDataPtrI(cctkGH, 1, cctki_vi_wcs)); \
static int cctki_vi_zeta = -100; \
if (cctki_vi_zeta == -100) cctki_vi_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
CCTK_DECLARE_INIT (CCTK_COMPLEX * restrict const, zeta, (CCTK_COMPLEX *) CCTKi_VarDataPtrI(cctkGH, 0, cctki_vi_zeta));

#define DECLARE_NULLEXACT_PUBLIC_C2F \
static int CCTKARGNUM_EG_mask = -1; \
static int CCTKGROUPNUM_EG_mask = -1; \
static int CCTKARGNUM_EQ_mask = -1; \
static int CCTKGROUPNUM_EQ_mask = -1; \
static int CCTKARGNUM_EV_mask = -1; \
static int CCTKGROUPNUM_EV_mask = -1; \
static int CCTKARGNUM_Jn_l = -1; \
static int CCTKGROUPNUM_JJ_l = -1; \
static int CCTKARGNUM_Jo_l = -1; \
static int CCTKARGNUM_News = -1; \
static int CCTKGROUPNUM_News = -1; \
static int CCTKARGNUM_NewsB = -1; \
static int CCTKGROUPNUM_NewsB = -1; \
static int CCTKARGNUM_NewsB_past = -1; \
static int CCTKGROUPNUM_NewsB_past = -1; \
static int CCTKARGNUM_NewsB_uBondi = -1; \
static int CCTKGROUPNUM_NewsB_uBondi = -1; \
static int CCTKARGNUM_News_past = -1; \
static int CCTKGROUPNUM_News_past = -1; \
static int CCTKARGNUM_News_uBondi = -1; \
static int CCTKGROUPNUM_News_uBondi = -1; \
static int CCTKARGNUM_Null_AuxConstr_cbcn = -1; \
static int CCTKGROUPNUM_Null_AuxConstr = -1; \
static int CCTKARGNUM_Null_AuxConstr_cbcs = -1; \
static int CCTKGROUPNUM_Null_AuxConstr_south = -1; \
static int CCTKARGNUM_Null_AuxConstr_ckcn = -1; \
static int CCTKARGNUM_Null_AuxConstr_ckcs = -1; \
static int CCTKARGNUM_Null_AuxConstr_nucn = -1; \
static int CCTKARGNUM_Null_AuxConstr_nucs = -1; \
static int CCTKARGNUM_Null_R00 = -1; \
static int CCTKGROUPNUM_Null_R00 = -1; \
static int CCTKARGNUM_Null_R00_south = -1; \
static int CCTKGROUPNUM_Null_R00_south = -1; \
static int CCTKARGNUM_Null_R01 = -1; \
static int CCTKGROUPNUM_Null_R01 = -1; \
static int CCTKARGNUM_Null_R01_south = -1; \
static int CCTKGROUPNUM_Null_R01_south = -1; \
static int CCTKARGNUM_Null_R0A = -1; \
static int CCTKGROUPNUM_Null_R0A = -1; \
static int CCTKARGNUM_Null_R0A_i = -1; \
static int CCTKGROUPNUM_Null_R0A_split = -1; \
static int CCTKARGNUM_Null_R0A_r = -1; \
static int CCTKARGNUM_Null_R0A_south = -1; \
static int CCTKGROUPNUM_Null_R0A_south = -1; \
static int CCTKARGNUM_Psi4 = -1; \
static int CCTKGROUPNUM_Psi4 = -1; \
static int CCTKARGNUM_Psi4_past = -1; \
static int CCTKGROUPNUM_Psi4_past = -1; \
static int CCTKARGNUM_Psi4_uBondi = -1; \
static int CCTKGROUPNUM_Psi4_uBondi = -1; \
static int CCTKARGNUM_bcn = -1; \
static int CCTKGROUPNUM_realcharfuncs = -1; \
static int CCTKARGNUM_bcs = -1; \
static int CCTKARGNUM_boundary_maskn = -1; \
static int CCTKGROUPNUM_null_mask = -1; \
static int CCTKARGNUM_boundary_masks = -1; \
static int CCTKARGNUM_cbcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_aux = -1; \
static int CCTKARGNUM_cbcs = -1; \
static int CCTKARGNUM_ckcn = -1; \
static int CCTKARGNUM_ckcs = -1; \
static int CCTKARGNUM_constant_uBondi = -1; \
static int CCTKGROUPNUM_constant_uBondi = -1; \
static int CCTKARGNUM_courant_min_time = -1; \
static int CCTKGROUPNUM_speedvars = -1; \
static int CCTKARGNUM_courant_wave_speed = -1; \
static int CCTKARGNUM_dxjcn = -1; \
static int CCTKGROUPNUM_cmplxcharfuncs_basic = -1; \
static int CCTKARGNUM_dxjcs = -1; \
static int CCTKARGNUM_eth2jcn = -1; \
static int CCTKARGNUM_eth2jcs = -1; \
static int CCTKARGNUM_evolution_maskn = -1; \
static int CCTKARGNUM_evolution_masks = -1; \
static int CCTKARGNUM_evolution_radius = -1; \
static int CCTKGROUPNUM_evolution_radius = -1; \
static int CCTKARGNUM_guard_mask = -1; \
static int CCTKGROUPNUM_guard_mask = -1; \
static int CCTKARGNUM_jcn = -1; \
static int CCTKARGNUM_jcs = -1; \
static int CCTKARGNUM_linStrain = -1; \
static int CCTKGROUPNUM_linStrain = -1; \
static int CCTKARGNUM_linStrain_past = -1; \
static int CCTKGROUPNUM_linStrain_past = -1; \
static int CCTKARGNUM_linStrain_uBondi = -1; \
static int CCTKGROUPNUM_linStrain_uBondi = -1; \
static int CCTKARGNUM_nucn = -1; \
static int CCTKARGNUM_nucs = -1; \
static int CCTKARGNUM_null_delta = -1; \
static int CCTKGROUPNUM_NullGrParArrR = -1; \
static int CCTKARGNUM_null_dx = -1; \
static int CCTKGROUPNUM_NullSclr = -1; \
static int CCTKARGNUM_null_gsh = -1; \
static int CCTKGROUPNUM_NullGrParArrI = -1; \
static int CCTKARGNUM_null_lbnd = -1; \
static int CCTKARGNUM_null_lsh = -1; \
static int CCTKARGNUM_null_rb = -1; \
static int CCTKGROUPNUM_RadCrd = -1; \
static int CCTKARGNUM_null_rbh = -1; \
static int CCTKARGNUM_null_ubnd = -1; \
static int CCTKARGNUM_null_xb = -1; \
static int CCTKARGNUM_null_xbh = -1; \
static int CCTKARGNUM_omegan = -1; \
static int CCTKGROUPNUM_omega = -1; \
static int CCTKARGNUM_omegao = -1; \
static int CCTKARGNUM_qcn = -1; \
static int CCTKARGNUM_qcs = -1; \
static int CCTKARGNUM_qsize = -1; \
static int CCTKARGNUM_stereo_p = -1; \
static int CCTKGROUPNUM_StCrd = -1; \
static int CCTKARGNUM_stereo_pp = -1; \
static int CCTKARGNUM_stereo_q = -1; \
static int CCTKARGNUM_time_of_news = -1; \
static int CCTKGROUPNUM_time_of_news = -1; \
static int CCTKARGNUM_tmp_cgfn = -1; \
static int CCTKGROUPNUM_tmp_cgf = -1; \
static int CCTKARGNUM_tmp_cgfn1 = -1; \
static int CCTKGROUPNUM_tmp_cgf3 = -1; \
static int CCTKARGNUM_tmp_cgfn2 = -1; \
static int CCTKARGNUM_tmp_cgfn3 = -1; \
static int CCTKARGNUM_tmp_cgfs = -1; \
static int CCTKARGNUM_tmp_cgfs1 = -1; \
static int CCTKARGNUM_tmp_cgfs2 = -1; \
static int CCTKARGNUM_tmp_cgfs3 = -1; \
static int CCTKARGNUM_tmp_rgfn = -1; \
static int CCTKGROUPNUM_tmp_rgf = -1; \
static int CCTKARGNUM_tmp_rgfs = -1; \
static int CCTKARGNUM_uBondi = -1; \
static int CCTKGROUPNUM_uBondi = -1; \
static int CCTKARGNUM_uBondi_past = -1; \
static int CCTKGROUPNUM_uBondi_past = -1; \
static int CCTKARGNUM_ucn = -1; \
static int CCTKARGNUM_ucs = -1; \
static int CCTKARGNUM_wcn = -1; \
static int CCTKARGNUM_wcs = -1; \
static int CCTKARGNUM_zeta = -1; \
static int CCTKGROUPNUM_StCmCrd = -1;

#define INITIALISE_NULLEXACT_PUBLIC_C2F \
if(CCTKARGNUM_EG_mask == -1) CCTKARGNUM_EG_mask = CCTK_VarIndex("NULLGRID::EG_mask"); \
if(CCTKGROUPNUM_EG_mask == -1) CCTKGROUPNUM_EG_mask = CCTK_GroupIndex("NULLGRID::EG_mask"); \
if(CCTKARGNUM_EQ_mask == -1) CCTKARGNUM_EQ_mask = CCTK_VarIndex("NULLGRID::EQ_mask"); \
if(CCTKGROUPNUM_EQ_mask == -1) CCTKGROUPNUM_EQ_mask = CCTK_GroupIndex("NULLGRID::EQ_mask"); \
if(CCTKARGNUM_EV_mask == -1) CCTKARGNUM_EV_mask = CCTK_VarIndex("NULLGRID::EV_mask"); \
if(CCTKGROUPNUM_EV_mask == -1) CCTKGROUPNUM_EV_mask = CCTK_GroupIndex("NULLGRID::EV_mask"); \
if(CCTKARGNUM_Jn_l == -1) CCTKARGNUM_Jn_l = CCTK_VarIndex("NULLNEWS::Jn_l[0]"); \
if(CCTKGROUPNUM_JJ_l == -1) CCTKGROUPNUM_JJ_l = CCTK_GroupIndex("NULLNEWS::JJ_l"); \
if(CCTKARGNUM_Jo_l == -1) CCTKARGNUM_Jo_l = CCTK_VarIndex("NULLNEWS::Jo_l[0]"); \
if(CCTKARGNUM_News == -1) CCTKARGNUM_News = CCTK_VarIndex("NULLNEWS::News[0]"); \
if(CCTKGROUPNUM_News == -1) CCTKGROUPNUM_News = CCTK_GroupIndex("NULLNEWS::News"); \
if(CCTKARGNUM_NewsB == -1) CCTKARGNUM_NewsB = CCTK_VarIndex("NULLNEWS::NewsB[0]"); \
if(CCTKGROUPNUM_NewsB == -1) CCTKGROUPNUM_NewsB = CCTK_GroupIndex("NULLNEWS::NewsB"); \
if(CCTKARGNUM_NewsB_past == -1) CCTKARGNUM_NewsB_past = CCTK_VarIndex("NULLNEWS::NewsB_past[0]"); \
if(CCTKGROUPNUM_NewsB_past == -1) CCTKGROUPNUM_NewsB_past = CCTK_GroupIndex("NULLNEWS::NewsB_past"); \
if(CCTKARGNUM_NewsB_uBondi == -1) CCTKARGNUM_NewsB_uBondi = CCTK_VarIndex("NULLNEWS::NewsB_uBondi[0]"); \
if(CCTKGROUPNUM_NewsB_uBondi == -1) CCTKGROUPNUM_NewsB_uBondi = CCTK_GroupIndex("NULLNEWS::NewsB_uBondi"); \
if(CCTKARGNUM_News_past == -1) CCTKARGNUM_News_past = CCTK_VarIndex("NULLNEWS::News_past[0]"); \
if(CCTKGROUPNUM_News_past == -1) CCTKGROUPNUM_News_past = CCTK_GroupIndex("NULLNEWS::News_past"); \
if(CCTKARGNUM_News_uBondi == -1) CCTKARGNUM_News_uBondi = CCTK_VarIndex("NULLNEWS::News_uBondi[0]"); \
if(CCTKGROUPNUM_News_uBondi == -1) CCTKGROUPNUM_News_uBondi = CCTK_GroupIndex("NULLNEWS::News_uBondi"); \
if(CCTKARGNUM_Null_AuxConstr_cbcn == -1) CCTKARGNUM_Null_AuxConstr_cbcn = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_cbcn[0]"); \
if(CCTKGROUPNUM_Null_AuxConstr == -1) CCTKGROUPNUM_Null_AuxConstr = CCTK_GroupIndex("NULLCONSTR::Null_AuxConstr"); \
if(CCTKARGNUM_Null_AuxConstr_cbcs == -1) CCTKARGNUM_Null_AuxConstr_cbcs = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_cbcs[0]"); \
if(CCTKGROUPNUM_Null_AuxConstr_south == -1) CCTKGROUPNUM_Null_AuxConstr_south = CCTK_GroupIndex("NULLCONSTR::Null_AuxConstr_south"); \
if(CCTKARGNUM_Null_AuxConstr_ckcn == -1) CCTKARGNUM_Null_AuxConstr_ckcn = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_ckcn[0]"); \
if(CCTKARGNUM_Null_AuxConstr_ckcs == -1) CCTKARGNUM_Null_AuxConstr_ckcs = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_ckcs[0]"); \
if(CCTKARGNUM_Null_AuxConstr_nucn == -1) CCTKARGNUM_Null_AuxConstr_nucn = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_nucn[0]"); \
if(CCTKARGNUM_Null_AuxConstr_nucs == -1) CCTKARGNUM_Null_AuxConstr_nucs = CCTK_VarIndex("NULLCONSTR::Null_AuxConstr_nucs[0]"); \
if(CCTKARGNUM_Null_R00 == -1) CCTKARGNUM_Null_R00 = CCTK_VarIndex("NULLCONSTR::Null_R00[0]"); \
if(CCTKGROUPNUM_Null_R00 == -1) CCTKGROUPNUM_Null_R00 = CCTK_GroupIndex("NULLCONSTR::Null_R00"); \
if(CCTKARGNUM_Null_R00_south == -1) CCTKARGNUM_Null_R00_south = CCTK_VarIndex("NULLCONSTR::Null_R00_south[0]"); \
if(CCTKGROUPNUM_Null_R00_south == -1) CCTKGROUPNUM_Null_R00_south = CCTK_GroupIndex("NULLCONSTR::Null_R00_south"); \
if(CCTKARGNUM_Null_R01 == -1) CCTKARGNUM_Null_R01 = CCTK_VarIndex("NULLCONSTR::Null_R01[0]"); \
if(CCTKGROUPNUM_Null_R01 == -1) CCTKGROUPNUM_Null_R01 = CCTK_GroupIndex("NULLCONSTR::Null_R01"); \
if(CCTKARGNUM_Null_R01_south == -1) CCTKARGNUM_Null_R01_south = CCTK_VarIndex("NULLCONSTR::Null_R01_south[0]"); \
if(CCTKGROUPNUM_Null_R01_south == -1) CCTKGROUPNUM_Null_R01_south = CCTK_GroupIndex("NULLCONSTR::Null_R01_south"); \
if(CCTKARGNUM_Null_R0A == -1) CCTKARGNUM_Null_R0A = CCTK_VarIndex("NULLCONSTR::Null_R0A[0]"); \
if(CCTKGROUPNUM_Null_R0A == -1) CCTKGROUPNUM_Null_R0A = CCTK_GroupIndex("NULLCONSTR::Null_R0A"); \
if(CCTKARGNUM_Null_R0A_i == -1) CCTKARGNUM_Null_R0A_i = CCTK_VarIndex("NULLCONSTR::Null_R0A_i[0]"); \
if(CCTKGROUPNUM_Null_R0A_split == -1) CCTKGROUPNUM_Null_R0A_split = CCTK_GroupIndex("NULLCONSTR::Null_R0A_split"); \
if(CCTKARGNUM_Null_R0A_r == -1) CCTKARGNUM_Null_R0A_r = CCTK_VarIndex("NULLCONSTR::Null_R0A_r[0]"); \
if(CCTKARGNUM_Null_R0A_south == -1) CCTKARGNUM_Null_R0A_south = CCTK_VarIndex("NULLCONSTR::Null_R0A_south[0]"); \
if(CCTKGROUPNUM_Null_R0A_south == -1) CCTKGROUPNUM_Null_R0A_south = CCTK_GroupIndex("NULLCONSTR::Null_R0A_south"); \
if(CCTKARGNUM_Psi4 == -1) CCTKARGNUM_Psi4 = CCTK_VarIndex("NULLNEWS::Psi4[0]"); \
if(CCTKGROUPNUM_Psi4 == -1) CCTKGROUPNUM_Psi4 = CCTK_GroupIndex("NULLNEWS::Psi4"); \
if(CCTKARGNUM_Psi4_past == -1) CCTKARGNUM_Psi4_past = CCTK_VarIndex("NULLNEWS::Psi4_past[0]"); \
if(CCTKGROUPNUM_Psi4_past == -1) CCTKGROUPNUM_Psi4_past = CCTK_GroupIndex("NULLNEWS::Psi4_past"); \
if(CCTKARGNUM_Psi4_uBondi == -1) CCTKARGNUM_Psi4_uBondi = CCTK_VarIndex("NULLNEWS::Psi4_uBondi[0]"); \
if(CCTKGROUPNUM_Psi4_uBondi == -1) CCTKGROUPNUM_Psi4_uBondi = CCTK_GroupIndex("NULLNEWS::Psi4_uBondi"); \
if(CCTKARGNUM_bcn == -1) CCTKARGNUM_bcn = CCTK_VarIndex("NULLVARS::bcn[0]"); \
if(CCTKGROUPNUM_realcharfuncs == -1) CCTKGROUPNUM_realcharfuncs = CCTK_GroupIndex("NULLVARS::realcharfuncs"); \
if(CCTKARGNUM_bcs == -1) CCTKARGNUM_bcs = CCTK_VarIndex("NULLVARS::bcs[0]"); \
if(CCTKARGNUM_boundary_maskn == -1) CCTKARGNUM_boundary_maskn = CCTK_VarIndex("NULLVARS::boundary_maskn"); \
if(CCTKGROUPNUM_null_mask == -1) CCTKGROUPNUM_null_mask = CCTK_GroupIndex("NULLVARS::null_mask"); \
if(CCTKARGNUM_boundary_masks == -1) CCTKARGNUM_boundary_masks = CCTK_VarIndex("NULLVARS::boundary_masks"); \
if(CCTKARGNUM_cbcn == -1) CCTKARGNUM_cbcn = CCTK_VarIndex("NULLVARS::cbcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_aux == -1) CCTKGROUPNUM_cmplxcharfuncs_aux = CCTK_GroupIndex("NULLVARS::cmplxcharfuncs_aux"); \
if(CCTKARGNUM_cbcs == -1) CCTKARGNUM_cbcs = CCTK_VarIndex("NULLVARS::cbcs[0]"); \
if(CCTKARGNUM_ckcn == -1) CCTKARGNUM_ckcn = CCTK_VarIndex("NULLVARS::ckcn[0]"); \
if(CCTKARGNUM_ckcs == -1) CCTKARGNUM_ckcs = CCTK_VarIndex("NULLVARS::ckcs[0]"); \
if(CCTKARGNUM_constant_uBondi == -1) CCTKARGNUM_constant_uBondi = CCTK_VarIndex("NULLNEWS::constant_uBondi"); \
if(CCTKGROUPNUM_constant_uBondi == -1) CCTKGROUPNUM_constant_uBondi = CCTK_GroupIndex("NULLNEWS::constant_uBondi"); \
if(CCTKARGNUM_courant_min_time == -1) CCTKARGNUM_courant_min_time = CCTK_VarIndex("TIME::courant_min_time"); \
if(CCTKGROUPNUM_speedvars == -1) CCTKGROUPNUM_speedvars = CCTK_GroupIndex("TIME::speedvars"); \
if(CCTKARGNUM_courant_wave_speed == -1) CCTKARGNUM_courant_wave_speed = CCTK_VarIndex("TIME::courant_wave_speed"); \
if(CCTKARGNUM_dxjcn == -1) CCTKARGNUM_dxjcn = CCTK_VarIndex("NULLVARS::dxjcn[0]"); \
if(CCTKGROUPNUM_cmplxcharfuncs_basic == -1) CCTKGROUPNUM_cmplxcharfuncs_basic = CCTK_GroupIndex("NULLVARS::cmplxcharfuncs_basic"); \
if(CCTKARGNUM_dxjcs == -1) CCTKARGNUM_dxjcs = CCTK_VarIndex("NULLVARS::dxjcs[0]"); \
if(CCTKARGNUM_eth2jcn == -1) CCTKARGNUM_eth2jcn = CCTK_VarIndex("NULLVARS::eth2jcn[0]"); \
if(CCTKARGNUM_eth2jcs == -1) CCTKARGNUM_eth2jcs = CCTK_VarIndex("NULLVARS::eth2jcs[0]"); \
if(CCTKARGNUM_evolution_maskn == -1) CCTKARGNUM_evolution_maskn = CCTK_VarIndex("NULLVARS::evolution_maskn"); \
if(CCTKARGNUM_evolution_masks == -1) CCTKARGNUM_evolution_masks = CCTK_VarIndex("NULLVARS::evolution_masks"); \
if(CCTKARGNUM_evolution_radius == -1) CCTKARGNUM_evolution_radius = CCTK_VarIndex("NULLINTERP::evolution_radius"); \
if(CCTKGROUPNUM_evolution_radius == -1) CCTKGROUPNUM_evolution_radius = CCTK_GroupIndex("NULLINTERP::evolution_radius"); \
if(CCTKARGNUM_guard_mask == -1) CCTKARGNUM_guard_mask = CCTK_VarIndex("NULLGRID::guard_mask"); \
if(CCTKGROUPNUM_guard_mask == -1) CCTKGROUPNUM_guard_mask = CCTK_GroupIndex("NULLGRID::guard_mask"); \
if(CCTKARGNUM_jcn == -1) CCTKARGNUM_jcn = CCTK_VarIndex("NULLVARS::jcn[0]"); \
if(CCTKARGNUM_jcs == -1) CCTKARGNUM_jcs = CCTK_VarIndex("NULLVARS::jcs[0]"); \
if(CCTKARGNUM_linStrain == -1) CCTKARGNUM_linStrain = CCTK_VarIndex("NULLNEWS::linStrain[0]"); \
if(CCTKGROUPNUM_linStrain == -1) CCTKGROUPNUM_linStrain = CCTK_GroupIndex("NULLNEWS::linStrain"); \
if(CCTKARGNUM_linStrain_past == -1) CCTKARGNUM_linStrain_past = CCTK_VarIndex("NULLNEWS::linStrain_past[0]"); \
if(CCTKGROUPNUM_linStrain_past == -1) CCTKGROUPNUM_linStrain_past = CCTK_GroupIndex("NULLNEWS::linStrain_past"); \
if(CCTKARGNUM_linStrain_uBondi == -1) CCTKARGNUM_linStrain_uBondi = CCTK_VarIndex("NULLNEWS::linStrain_uBondi[0]"); \
if(CCTKGROUPNUM_linStrain_uBondi == -1) CCTKGROUPNUM_linStrain_uBondi = CCTK_GroupIndex("NULLNEWS::linStrain_uBondi"); \
if(CCTKARGNUM_nucn == -1) CCTKARGNUM_nucn = CCTK_VarIndex("NULLVARS::nucn[0]"); \
if(CCTKARGNUM_nucs == -1) CCTKARGNUM_nucs = CCTK_VarIndex("NULLVARS::nucs[0]"); \
if(CCTKARGNUM_null_delta == -1) CCTKARGNUM_null_delta = CCTK_VarIndex("NULLGRID::null_delta"); \
if(CCTKGROUPNUM_NullGrParArrR == -1) CCTKGROUPNUM_NullGrParArrR = CCTK_GroupIndex("NULLGRID::NullGrParArrR"); \
if(CCTKARGNUM_null_dx == -1) CCTKARGNUM_null_dx = CCTK_VarIndex("NULLGRID::null_dx"); \
if(CCTKGROUPNUM_NullSclr == -1) CCTKGROUPNUM_NullSclr = CCTK_GroupIndex("NULLGRID::NullSclr"); \
if(CCTKARGNUM_null_gsh == -1) CCTKARGNUM_null_gsh = CCTK_VarIndex("NULLGRID::null_gsh"); \
if(CCTKGROUPNUM_NullGrParArrI == -1) CCTKGROUPNUM_NullGrParArrI = CCTK_GroupIndex("NULLGRID::NullGrParArrI"); \
if(CCTKARGNUM_null_lbnd == -1) CCTKARGNUM_null_lbnd = CCTK_VarIndex("NULLGRID::null_lbnd"); \
if(CCTKARGNUM_null_lsh == -1) CCTKARGNUM_null_lsh = CCTK_VarIndex("NULLGRID::null_lsh"); \
if(CCTKARGNUM_null_rb == -1) CCTKARGNUM_null_rb = CCTK_VarIndex("NULLGRID::null_rb"); \
if(CCTKGROUPNUM_RadCrd == -1) CCTKGROUPNUM_RadCrd = CCTK_GroupIndex("NULLGRID::RadCrd"); \
if(CCTKARGNUM_null_rbh == -1) CCTKARGNUM_null_rbh = CCTK_VarIndex("NULLGRID::null_rbh"); \
if(CCTKARGNUM_null_ubnd == -1) CCTKARGNUM_null_ubnd = CCTK_VarIndex("NULLGRID::null_ubnd"); \
if(CCTKARGNUM_null_xb == -1) CCTKARGNUM_null_xb = CCTK_VarIndex("NULLGRID::null_xb"); \
if(CCTKARGNUM_null_xbh == -1) CCTKARGNUM_null_xbh = CCTK_VarIndex("NULLGRID::null_xbh"); \
if(CCTKARGNUM_omegan == -1) CCTKARGNUM_omegan = CCTK_VarIndex("NULLNEWS::omegan[0]"); \
if(CCTKGROUPNUM_omega == -1) CCTKGROUPNUM_omega = CCTK_GroupIndex("NULLNEWS::omega"); \
if(CCTKARGNUM_omegao == -1) CCTKARGNUM_omegao = CCTK_VarIndex("NULLNEWS::omegao[0]"); \
if(CCTKARGNUM_qcn == -1) CCTKARGNUM_qcn = CCTK_VarIndex("NULLVARS::qcn[0]"); \
if(CCTKARGNUM_qcs == -1) CCTKARGNUM_qcs = CCTK_VarIndex("NULLVARS::qcs[0]"); \
if(CCTKARGNUM_qsize == -1) CCTKARGNUM_qsize = CCTK_VarIndex("NULLGRID::qsize"); \
if(CCTKARGNUM_stereo_p == -1) CCTKARGNUM_stereo_p = CCTK_VarIndex("NULLGRID::stereo_p"); \
if(CCTKGROUPNUM_StCrd == -1) CCTKGROUPNUM_StCrd = CCTK_GroupIndex("NULLGRID::StCrd"); \
if(CCTKARGNUM_stereo_pp == -1) CCTKARGNUM_stereo_pp = CCTK_VarIndex("NULLGRID::stereo_pp"); \
if(CCTKARGNUM_stereo_q == -1) CCTKARGNUM_stereo_q = CCTK_VarIndex("NULLGRID::stereo_q"); \
if(CCTKARGNUM_time_of_news == -1) CCTKARGNUM_time_of_news = CCTK_VarIndex("NULLNEWS::time_of_news"); \
if(CCTKGROUPNUM_time_of_news == -1) CCTKGROUPNUM_time_of_news = CCTK_GroupIndex("NULLNEWS::time_of_news"); \
if(CCTKARGNUM_tmp_cgfn == -1) CCTKARGNUM_tmp_cgfn = CCTK_VarIndex("NULLINTERP::tmp_cgfn"); \
if(CCTKGROUPNUM_tmp_cgf == -1) CCTKGROUPNUM_tmp_cgf = CCTK_GroupIndex("NULLINTERP::tmp_cgf"); \
if(CCTKARGNUM_tmp_cgfn1 == -1) CCTKARGNUM_tmp_cgfn1 = CCTK_VarIndex("NULLINTERP::tmp_cgfn1"); \
if(CCTKGROUPNUM_tmp_cgf3 == -1) CCTKGROUPNUM_tmp_cgf3 = CCTK_GroupIndex("NULLINTERP::tmp_cgf3"); \
if(CCTKARGNUM_tmp_cgfn2 == -1) CCTKARGNUM_tmp_cgfn2 = CCTK_VarIndex("NULLINTERP::tmp_cgfn2"); \
if(CCTKARGNUM_tmp_cgfn3 == -1) CCTKARGNUM_tmp_cgfn3 = CCTK_VarIndex("NULLINTERP::tmp_cgfn3"); \
if(CCTKARGNUM_tmp_cgfs == -1) CCTKARGNUM_tmp_cgfs = CCTK_VarIndex("NULLINTERP::tmp_cgfs"); \
if(CCTKARGNUM_tmp_cgfs1 == -1) CCTKARGNUM_tmp_cgfs1 = CCTK_VarIndex("NULLINTERP::tmp_cgfs1"); \
if(CCTKARGNUM_tmp_cgfs2 == -1) CCTKARGNUM_tmp_cgfs2 = CCTK_VarIndex("NULLINTERP::tmp_cgfs2"); \
if(CCTKARGNUM_tmp_cgfs3 == -1) CCTKARGNUM_tmp_cgfs3 = CCTK_VarIndex("NULLINTERP::tmp_cgfs3"); \
if(CCTKARGNUM_tmp_rgfn == -1) CCTKARGNUM_tmp_rgfn = CCTK_VarIndex("NULLINTERP::tmp_rgfn"); \
if(CCTKGROUPNUM_tmp_rgf == -1) CCTKGROUPNUM_tmp_rgf = CCTK_GroupIndex("NULLINTERP::tmp_rgf"); \
if(CCTKARGNUM_tmp_rgfs == -1) CCTKARGNUM_tmp_rgfs = CCTK_VarIndex("NULLINTERP::tmp_rgfs"); \
if(CCTKARGNUM_uBondi == -1) CCTKARGNUM_uBondi = CCTK_VarIndex("NULLNEWS::uBondi[0]"); \
if(CCTKGROUPNUM_uBondi == -1) CCTKGROUPNUM_uBondi = CCTK_GroupIndex("NULLNEWS::uBondi"); \
if(CCTKARGNUM_uBondi_past == -1) CCTKARGNUM_uBondi_past = CCTK_VarIndex("NULLNEWS::uBondi_past[0]"); \
if(CCTKGROUPNUM_uBondi_past == -1) CCTKGROUPNUM_uBondi_past = CCTK_GroupIndex("NULLNEWS::uBondi_past"); \
if(CCTKARGNUM_ucn == -1) CCTKARGNUM_ucn = CCTK_VarIndex("NULLVARS::ucn[0]"); \
if(CCTKARGNUM_ucs == -1) CCTKARGNUM_ucs = CCTK_VarIndex("NULLVARS::ucs[0]"); \
if(CCTKARGNUM_wcn == -1) CCTKARGNUM_wcn = CCTK_VarIndex("NULLVARS::wcn[0]"); \
if(CCTKARGNUM_wcs == -1) CCTKARGNUM_wcs = CCTK_VarIndex("NULLVARS::wcs[0]"); \
if(CCTKARGNUM_zeta == -1) CCTKARGNUM_zeta = CCTK_VarIndex("NULLGRID::zeta"); \
if(CCTKGROUPNUM_StCmCrd == -1) CCTKGROUPNUM_StCmCrd = CCTK_GroupIndex("NULLGRID::StCmCrd");

#define NULLEXACT_PUBLIC_C2F_PROTO \
const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,const int *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_INT *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_INT *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_INT *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_COMPLEX *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_REAL *,CCTK_COMPLEX *

#define PASS_NULLEXACT_PUBLIC_C2F(GH) \
PASS_GROUPLEN(NULLNEWS, JJ_l),\
PASS_GROUPLEN(NULLNEWS, NewsB),\
PASS_GROUPLEN(NULLNEWS, NewsB_past),\
PASS_GROUPLEN(NULLNEWS, NewsB_uBondi),\
PASS_GROUPLEN(NULLNEWS, News),\
PASS_GROUPLEN(NULLNEWS, News_past),\
PASS_GROUPLEN(NULLNEWS, News_uBondi),\
PASS_GROUPLEN(NULLCONSTR, Null_AuxConstr),\
PASS_GROUPLEN(NULLCONSTR, Null_AuxConstr_south),\
PASS_GROUPLEN(NULLCONSTR, Null_R00),\
PASS_GROUPLEN(NULLCONSTR, Null_R00_south),\
PASS_GROUPLEN(NULLCONSTR, Null_R01),\
PASS_GROUPLEN(NULLCONSTR, Null_R01_south),\
PASS_GROUPLEN(NULLCONSTR, Null_R0A),\
PASS_GROUPLEN(NULLCONSTR, Null_R0A_south),\
PASS_GROUPLEN(NULLCONSTR, Null_R0A_split),\
PASS_GROUPLEN(NULLNEWS, Psi4),\
PASS_GROUPLEN(NULLNEWS, Psi4_past),\
PASS_GROUPLEN(NULLNEWS, Psi4_uBondi),\
PASS_GROUPSIZE(EG_mask, 0),\
PASS_GROUPSIZE(EQ_mask, 0),\
PASS_GROUPSIZE(EV_mask, 0),\
PASS_GROUPSIZE(JJ_l, 0),\
PASS_GROUPSIZE(News, 0),\
PASS_GROUPSIZE(NewsB, 0),\
PASS_GROUPSIZE(NewsB_past, 0),\
PASS_GROUPSIZE(NewsB_uBondi, 0),\
PASS_GROUPSIZE(News_past, 0),\
PASS_GROUPSIZE(News_uBondi, 0),\
PASS_GROUPSIZE(NullGrParArrI, 0),\
PASS_GROUPSIZE(NullGrParArrR, 0),\
PASS_GROUPSIZE(Null_AuxConstr, 0),\
PASS_GROUPSIZE(Null_AuxConstr_south, 0),\
PASS_GROUPSIZE(Null_R00, 0),\
PASS_GROUPSIZE(Null_R00_south, 0),\
PASS_GROUPSIZE(Null_R01, 0),\
PASS_GROUPSIZE(Null_R01_south, 0),\
PASS_GROUPSIZE(Null_R0A, 0),\
PASS_GROUPSIZE(Null_R0A_south, 0),\
PASS_GROUPSIZE(Null_R0A_split, 0),\
PASS_GROUPSIZE(Psi4, 0),\
PASS_GROUPSIZE(Psi4_past, 0),\
PASS_GROUPSIZE(Psi4_uBondi, 0),\
PASS_GROUPSIZE(RadCrd, 0),\
PASS_GROUPSIZE(StCmCrd, 0),\
PASS_GROUPSIZE(StCrd, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_aux, 0),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 0),\
PASS_GROUPSIZE(guard_mask, 0),\
PASS_GROUPSIZE(linStrain, 0),\
PASS_GROUPSIZE(linStrain_past, 0),\
PASS_GROUPSIZE(linStrain_uBondi, 0),\
PASS_GROUPSIZE(null_mask, 0),\
PASS_GROUPSIZE(omega, 0),\
PASS_GROUPSIZE(realcharfuncs, 0),\
PASS_GROUPSIZE(tmp_cgf, 0),\
PASS_GROUPSIZE(tmp_cgf3, 0),\
PASS_GROUPSIZE(tmp_rgf, 0),\
PASS_GROUPSIZE(uBondi, 0),\
PASS_GROUPSIZE(uBondi_past, 0),\
PASS_GROUPSIZE(EG_mask, 1),\
PASS_GROUPSIZE(EQ_mask, 1),\
PASS_GROUPSIZE(EV_mask, 1),\
PASS_GROUPSIZE(JJ_l, 1),\
PASS_GROUPSIZE(News, 1),\
PASS_GROUPSIZE(NewsB, 1),\
PASS_GROUPSIZE(NewsB_past, 1),\
PASS_GROUPSIZE(NewsB_uBondi, 1),\
PASS_GROUPSIZE(News_past, 1),\
PASS_GROUPSIZE(News_uBondi, 1),\
PASS_GROUPSIZE(Null_AuxConstr, 1),\
PASS_GROUPSIZE(Null_AuxConstr_south, 1),\
PASS_GROUPSIZE(Null_R00, 1),\
PASS_GROUPSIZE(Null_R00_south, 1),\
PASS_GROUPSIZE(Null_R01, 1),\
PASS_GROUPSIZE(Null_R01_south, 1),\
PASS_GROUPSIZE(Null_R0A, 1),\
PASS_GROUPSIZE(Null_R0A_south, 1),\
PASS_GROUPSIZE(Null_R0A_split, 1),\
PASS_GROUPSIZE(Psi4, 1),\
PASS_GROUPSIZE(Psi4_past, 1),\
PASS_GROUPSIZE(Psi4_uBondi, 1),\
PASS_GROUPSIZE(StCmCrd, 1),\
PASS_GROUPSIZE(StCrd, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_aux, 1),\
PASS_GROUPSIZE(cmplxcharfuncs_basic, 1),\
PASS_GROUPSIZE(guard_mask, 1),\
PASS_GROUPSIZE(linStrain, 1),\
PASS_GROUPSIZE(linStrain_past, 1),\
PASS_GROUPSIZE(linStrain_uBondi, 1),\
PASS_GROUPSIZE(null_mask, 1),\
PASS_GROUPSIZE(omega, 1),\
PASS_GROUPSIZE(realcharfuncs, 1),\
PASS_GROUPSIZE(tmp_cgf, 1),\
PASS_GROUPSIZE(tmp_cgf3, 1),\
PASS_GROUPSIZE(tmp_rgf, 1),\
PASS_GROUPSIZE(uBondi, 1),\
PASS_GROUPSIZE(uBondi_past, 1),\
PASS_GROUPLEN(NULLVARS, cmplxcharfuncs_aux),\
PASS_GROUPLEN(NULLVARS, cmplxcharfuncs_basic),\
PASS_GROUPLEN(NULLNEWS, linStrain),\
PASS_GROUPLEN(NULLNEWS, linStrain_past),\
PASS_GROUPLEN(NULLNEWS, linStrain_uBondi),\
PASS_GROUPLEN(NULLNEWS, omega),\
PASS_GROUPLEN(NULLVARS, realcharfuncs),\
PASS_GROUPLEN(NULLNEWS, uBondi),\
PASS_GROUPLEN(NULLNEWS, uBondi_past),\
(CCTK_INT *)(PASS_REFERENCE(EG_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EQ_mask, 0)),\
(CCTK_INT *)(PASS_REFERENCE(EV_mask, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Jn_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Jo_l, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(News, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(NewsB, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(NewsB_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(NewsB_uBondi, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(News_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(News_uBondi, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Null_AuxConstr_cbcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Null_AuxConstr_cbcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Null_AuxConstr_ckcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Null_AuxConstr_ckcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Null_AuxConstr_nucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Null_AuxConstr_nucs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Null_R00, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Null_R00_south, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Null_R01, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Null_R01_south, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Null_R0A, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Null_R0A_i, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(Null_R0A_r, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Null_R0A_south, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Psi4, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Psi4_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(Psi4_uBondi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(bcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(boundary_masks, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(cbcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ckcs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(constant_uBondi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(courant_min_time, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(courant_wave_speed, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(dxjcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(eth2jcs, 1)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_maskn, 0)),\
(CCTK_INT *)(PASS_REFERENCE(evolution_masks, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(evolution_radius, 0)),\
(CCTK_INT *)(PASS_REFERENCE(guard_mask, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(jcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(linStrain, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(linStrain_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(linStrain_uBondi, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(nucs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(null_delta, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_dx, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_gsh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lbnd, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_lsh, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_rbh, 0)),\
(CCTK_INT *)(PASS_REFERENCE(null_ubnd, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xb, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(null_xbh, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(omegan, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(omegao, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(qcs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(qsize, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_p, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_pp, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(stereo_q, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(time_of_news, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfn3, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs1, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs2, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(tmp_cgfs3, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(tmp_rgfs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(uBondi, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(uBondi_past, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucn, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 0)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(ucs, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcn, 1)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 0)),\
(CCTK_REAL *)(PASS_REFERENCE(wcs, 1)),\
(CCTK_COMPLEX *)(PASS_REFERENCE(zeta, 0))

#endif /* CCODE */

#ifdef FCODE
#define NULLEXACT_FARGUMENTS _CCTK_FARGUMENTS, NULLEXACT_PRIVATE_FARGUMENTS, NULLEXACT_PROTECTED_FARGUMENTS, NULLEXACT_PUBLIC_FARGUMENTS

#define DECLARE_NULLEXACT_FARGUMENTS _DECLARE_CCTK_FARGUMENTS DECLARE_NULLEXACT_PRIVATE_FARGUMENTS DECLARE_NULLEXACT_PROTECTED_FARGUMENTS DECLARE_NULLEXACT_PUBLIC_FARGUMENTS

#endif /* FCODE */

#ifdef CCODE
#define DECLARE_NULLEXACT_CARGUMENTS _DECLARE_CCTK_CARGUMENTS DECLARE_NULLEXACT_PRIVATE_CARGUMENTS DECLARE_NULLEXACT_PROTECTED_CARGUMENTS DECLARE_NULLEXACT_PUBLIC_CARGUMENTS

#define NULLEXACT_C2F_PROTO _CCTK_C2F_PROTO, NULLEXACT_PRIVATE_C2F_PROTO, NULLEXACT_PROTECTED_C2F_PROTO, NULLEXACT_PUBLIC_C2F_PROTO

#define PASS_NULLEXACT_C2F(GH) _PASS_CCTK_C2F(GH), PASS_NULLEXACT_PRIVATE_C2F(GH), PASS_NULLEXACT_PROTECTED_C2F(GH), PASS_NULLEXACT_PUBLIC_C2F(GH)

#define DECLARE_NULLEXACT_C2F _DECLARE_CCTK_C2F DECLARE_NULLEXACT_PRIVATE_C2F DECLARE_NULLEXACT_PROTECTED_C2F DECLARE_NULLEXACT_PUBLIC_C2F

#define INITIALISE_NULLEXACT_C2F _INITIALISE_CCTK_C2F INITIALISE_NULLEXACT_PRIVATE_C2F INITIALISE_NULLEXACT_PROTECTED_C2F INITIALISE_NULLEXACT_PUBLIC_C2F

#define NULLEXACT_CARGUMENTS cGH *cctkGH

#endif /* CCODE */
